{
    "docs": [
        {
            "location": "/", 
            "text": "siddhi-store-mongodb\n\n\nThe \nsiddhi-store-mongodb extension\n is an extension to \nSiddhi\n that  can be used to persist events to a MongoDB instance of the users choice.\nFind some useful links below:\n\n\n\n\nSource code\n\n\nReleases\n\n\nIssue tracker\n\n\n\n\nLatest API Docs\n\n\nLatest API Docs is \n1.0.19\n.\n\n\nPrerequisites\n\n\n\n\nA MongoDB server instance should be started.\n\n\nUser should have the necessary privileges and access rights to connect to the MongoDB data store of choice.\n\n\n\n\nHow to use\n\n\nUsing the extension in \nWSO2 Stream Processor\n\n\n\n\n\n\nYou can use this extension in the latest \nWSO2 Stream Processor\n that is a part of \nWSO2 Analytics\n offering, with editor, debugger and simulation support. \n\n\n\n\n\n\nThis extension is shipped by default with WSO2 Stream Processor, if you wish to use an alternative version of this extension you can replace the component \njar\n that can be found in the \nSTREAM_PROCESSOR_HOME\n/lib\n directory.\n\n\n\n\n\n\nUsing the extension as a \njava library\n\n\n\n\nThis extension can be added as a maven dependency along with other Siddhi dependencies to your project.\n\n\n\n\n     \ndependency\n\n        \ngroupId\norg.wso2.extension.siddhi.store.mongodb\n/groupId\n\n        \nartifactId\nsiddhi-store-mongodb\n/artifactId\n\n        \nversion\nx.x.x\n/version\n\n     \n/dependency\n\n\n\n\n\n\nRunning Integration tests in docker containers(Optional)\n\n\nThe MongoDB functionality are tested with the docker base integration test framework. The test framework initializes the docker container according to the given profile before executing the test suite.\n\n\n\n\n\n\nInstall and run docker in daemon mode.\n\n\n\n\n\n\nInstalling docker on Linux,\n\n   Note:\n    These commands retrieve content from get.docker.com web in a quiet output-document mode and install.Then we need to stop docker service as it needs to restart docker in daemon mode. After that, we need to export docker daemon host.\n\n\nwget -qO- https://get.docker.com/ | sh\nsudo service dockerd stop\nexport DOCKER_HOST=tcp://172.17.0.1:4326\ndocker daemon -H tcp://172.17.0.1:4326\n\n\n\n\n\n\n\n\n\nOn installing docker on Mac, see \nGet started with Docker for Mac\n\n\n\n\n\n\nOn installing docker on Windows, see \nGet started with Docker for Windows\n\n\n\n\n\n\n\n\n\n\nTo run the integration tests, issue the following commands.\n\n\n\n\n\n\nMongoDB without SSL connection\n\n\nmvn verify -P mongod -Ddocker.removeVolumes=true\n\n\n\n\n\n\n\n\n\nMongoDB with SSL connection\n\n\nmvn verify -P mongod-ssl -Ddocker.removeVolumes=true\n\n\n\n\n\n\n\n\n\n\n\n\n\nJenkins Build Status\n\n\n\n\n\n\n\n\n\n\nBranch\n\n\nBuild Status\n\n\n\n\n\n\n\n\n\n\nmaster\n\n\n\n\n\n\n\n\n\n\n\n\nFeatures\n\n\n\n\nmongodb\n \n(Store)\nUsing this extension a MongoDB Event Table can be configured to persist events in a MongoDB of user's choice.\n\n\n\n\nHow to Contribute\n\n\n\n\n\n\nPlease report issues at \nGitHub Issue Tracker\n.\n\n\n\n\n\n\nSend your contributions as pull requests to \nmaster branch\n. \n\n\n\n\n\n\nContact us\n\n\n\n\n\n\nPost your questions with the \n\"Siddhi\"\n tag in \nStackoverflow\n. \n\n\n\n\n\n\nSiddhi developers can be contacted via the mailing lists:\n\n\nDevelopers List   : \ndev@wso2.org\n\n\nArchitecture List : \narchitecture@wso2.org\n\n\n\n\n\n\nSupport\n\n\n\n\n\n\nWe are committed to ensuring support for this extension in production. Our unique approach ensures that all support leverages our open development methodology and is provided by the very same engineers who build the technology. \n\n\n\n\n\n\nFor more details and to take advantage of this unique opportunity contact us via \nhttp://wso2.com/support/\n.", 
            "title": "Welcome"
        }, 
        {
            "location": "/#siddhi-store-mongodb", 
            "text": "The  siddhi-store-mongodb extension  is an extension to  Siddhi  that  can be used to persist events to a MongoDB instance of the users choice.\nFind some useful links below:   Source code  Releases  Issue tracker", 
            "title": "siddhi-store-mongodb"
        }, 
        {
            "location": "/#latest-api-docs", 
            "text": "Latest API Docs is  1.0.19 .", 
            "title": "Latest API Docs"
        }, 
        {
            "location": "/#prerequisites", 
            "text": "A MongoDB server instance should be started.  User should have the necessary privileges and access rights to connect to the MongoDB data store of choice.", 
            "title": "Prerequisites"
        }, 
        {
            "location": "/#how-to-use", 
            "text": "Using the extension in  WSO2 Stream Processor    You can use this extension in the latest  WSO2 Stream Processor  that is a part of  WSO2 Analytics  offering, with editor, debugger and simulation support.     This extension is shipped by default with WSO2 Stream Processor, if you wish to use an alternative version of this extension you can replace the component  jar  that can be found in the  STREAM_PROCESSOR_HOME /lib  directory.    Using the extension as a  java library   This extension can be added as a maven dependency along with other Siddhi dependencies to your project.         dependency \n         groupId org.wso2.extension.siddhi.store.mongodb /groupId \n         artifactId siddhi-store-mongodb /artifactId \n         version x.x.x /version \n      /dependency", 
            "title": "How to use"
        }, 
        {
            "location": "/#running-integration-tests-in-docker-containersoptional", 
            "text": "The MongoDB functionality are tested with the docker base integration test framework. The test framework initializes the docker container according to the given profile before executing the test suite.    Install and run docker in daemon mode.    Installing docker on Linux, \n   Note:     These commands retrieve content from get.docker.com web in a quiet output-document mode and install.Then we need to stop docker service as it needs to restart docker in daemon mode. After that, we need to export docker daemon host.  wget -qO- https://get.docker.com/ | sh\nsudo service dockerd stop\nexport DOCKER_HOST=tcp://172.17.0.1:4326\ndocker daemon -H tcp://172.17.0.1:4326    On installing docker on Mac, see  Get started with Docker for Mac    On installing docker on Windows, see  Get started with Docker for Windows      To run the integration tests, issue the following commands.    MongoDB without SSL connection  mvn verify -P mongod -Ddocker.removeVolumes=true    MongoDB with SSL connection  mvn verify -P mongod-ssl -Ddocker.removeVolumes=true", 
            "title": "Running Integration tests in docker containers(Optional)"
        }, 
        {
            "location": "/#jenkins-build-status", 
            "text": "Branch  Build Status      master", 
            "title": "Jenkins Build Status"
        }, 
        {
            "location": "/#features", 
            "text": "mongodb   (Store) Using this extension a MongoDB Event Table can be configured to persist events in a MongoDB of user's choice.", 
            "title": "Features"
        }, 
        {
            "location": "/#how-to-contribute", 
            "text": "Please report issues at  GitHub Issue Tracker .    Send your contributions as pull requests to  master branch .", 
            "title": "How to Contribute"
        }, 
        {
            "location": "/#contact-us", 
            "text": "Post your questions with the  \"Siddhi\"  tag in  Stackoverflow .     Siddhi developers can be contacted via the mailing lists:  Developers List   :  dev@wso2.org  Architecture List :  architecture@wso2.org", 
            "title": "Contact us"
        }, 
        {
            "location": "/#support", 
            "text": "We are committed to ensuring support for this extension in production. Our unique approach ensures that all support leverages our open development methodology and is provided by the very same engineers who build the technology.     For more details and to take advantage of this unique opportunity contact us via  http://wso2.com/support/ .", 
            "title": "Support"
        }, 
        {
            "location": "/api/1.0.19/", 
            "text": "API Docs - v1.0.19\n\n\nStore\n\n\nmongodb \n(Store)\n\n\nUsing this extension a MongoDB Event Table can be configured to persist events in a MongoDB of user's choice.\n\n\n\nSyntax\n\n\n@Store(type=\nmongodb\n, mongodb.uri=\nSTRING\n, collection.name=\nSTRING\n, secure.connection=\nSTRING\n, trust.store=\nSTRING\n, trust.store.password=\nSTRING\n, key.store=\nSTRING\n, key.store.password=\nSTRING\n)\n@PrimaryKey(\nPRIMARY_KEY\n)\n@Index(\nINDEX\n)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \nmongodb.uri\n\n        \nThe MongoDB URI for the MongoDB data store. The uri must be of the format \nmongodb://[username:password@]host1[:port1][,hostN[:portN]][/[database][?options]]\nThe options specified in the uri will override any connection options specified in the deployment yaml file.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \ncollection.name\n\n        \nThe name of the collection in the store this Event Table should be persisted as.\n\n        \nName of the siddhi event table.\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nsecure.connection\n\n        \nDescribes enabling the SSL for the mongodb connection\n\n        \nfalse\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \ntrust.store\n\n        \nFile path to the trust store.\n\n        \n${carbon.home}/resources/security/client-truststore.jks\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \ntrust.store.password\n\n        \nPassword to access the trust store\n\n        \nwso2carbon\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nkey.store\n\n        \nFile path to the keystore.\n\n        \n${carbon.home}/resources/security/client-truststore.jks\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nkey.store.password\n\n        \nPassword to access the keystore\n\n        \nwso2carbon\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n\n\n\nSystem Parameters\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Parameters\n\n    \n\n    \n\n        \napplicationName\n\n        \nSets the logical name of the application using this MongoClient. The application name may be used by the client to identify the application to the server, for use in server logs, slow query logs, and profile collection.\n\n        \nnull\n\n        \nthe logical name of the application using this MongoClient. The UTF-8 encoding may not exceed 128 bytes.\n\n    \n\n    \n\n        \ncursorFinalizerEnabled\n\n        \nSets whether cursor finalizers are enabled.\n\n        \ntrue\n\n        \ntrue\nfalse\n\n    \n\n    \n\n        \nrequiredReplicaSetName\n\n        \nThe name of the replica set\n\n        \nnull\n\n        \nthe logical name of the replica set\n\n    \n\n    \n\n        \nsslEnabled\n\n        \nSets whether to initiate connection with TSL/SSL enabled. true: Initiate the connection with TLS/SSL. false: Initiate the connection without TLS/SSL.\n\n        \nfalse\n\n        \ntrue\nfalse\n\n    \n\n    \n\n        \ntrustStore\n\n        \nFile path to the trust store.\n\n        \n${carbon.home}/resources/security/client-truststore.jks\n\n        \nAny valid file path.\n\n    \n\n    \n\n        \ntrustStorePassword\n\n        \nPassword to access the trust store\n\n        \nwso2carbon\n\n        \nAny valid password.\n\n    \n\n    \n\n        \nkeyStore\n\n        \nFile path to the keystore.\n\n        \n${carbon.home}/resources/security/client-truststore.jks\n\n        \nAny valid file path.\n\n    \n\n    \n\n        \nkeyStorePassword\n\n        \nPassword to access the keystore\n\n        \nwso2carbon\n\n        \nAny valid password.\n\n    \n\n    \n\n        \nconnectTimeout\n\n        \nThe time in milliseconds to attempt a connection before timing out.\n\n        \n10000\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nconnectionsPerHost\n\n        \nThe maximum number of connections in the connection pool.\n\n        \n100\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nminConnectionsPerHost\n\n        \nThe minimum number of connections in the connection pool.\n\n        \n0\n\n        \nAny natural number\n\n    \n\n    \n\n        \nmaxConnectionIdleTime\n\n        \nThe maximum number of milliseconds that a connection can remain idle in the pool before being removed and closed. A zero value indicates no limit to the idle time.  A pooled connection that has exceeded its idle time will be closed and replaced when necessary by a new connection.\n\n        \n0\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nmaxWaitTime\n\n        \nThe maximum wait time in milliseconds that a thread may wait for a connection to become available. A value of 0 means that it will not wait.  A negative value means to wait indefinitely\n\n        \n120000\n\n        \nAny integer\n\n    \n\n    \n\n        \nthreadsAllowedToBlockForConnectionMultiplier\n\n        \nThe maximum number of connections allowed per host for this MongoClient instance. Those connections will be kept in a pool when idle. Once the pool is exhausted, any operation requiring a connection will block waiting for an available connection.\n\n        \n100\n\n        \nAny natural number\n\n    \n\n    \n\n        \nmaxConnectionLifeTime\n\n        \nThe maximum life time of a pooled connection.  A zero value indicates no limit to the life time.  A pooled connection that has exceeded its life time will be closed and replaced when necessary by a new connection.\n\n        \n0\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nsocketKeepAlive\n\n        \nSets whether to keep a connection alive through firewalls\n\n        \nfalse\n\n        \ntrue\nfalse\n\n    \n\n    \n\n        \nsocketTimeout\n\n        \nThe time in milliseconds to attempt a send or receive on a socket before the attempt times out. Default 0 means never to timeout.\n\n        \n0\n\n        \nAny natural integer\n\n    \n\n    \n\n        \nwriteConcern\n\n        \nThe write concern to use.\n\n        \nacknowledged\n\n        \nacknowledged\nw1\nw2\nw3\nunacknowledged\nfsynced\njournaled\nreplica_acknowledged\nnormal\nsafe\nmajority\nfsync_safe\njournal_safe\nreplicas_safe\n\n    \n\n    \n\n        \nreadConcern\n\n        \nThe level of isolation for the reads from replica sets.\n\n        \ndefault\n\n        \nlocal\nmajority\nlinearizable\n\n    \n\n    \n\n        \nreadPreference\n\n        \nSpecifies the replica set read preference for the connection.\n\n        \nprimary\n\n        \nprimary\nsecondary\nsecondarypreferred\nprimarypreferred\nnearest\n\n    \n\n    \n\n        \nlocalThreshold\n\n        \nThe size (in milliseconds) of the latency window for selecting among multiple suitable MongoDB instances.\n\n        \n15\n\n        \nAny natural number\n\n    \n\n    \n\n        \nserverSelectionTimeout\n\n        \nSpecifies how long (in milliseconds) to block for server selection before throwing an exception. A value of 0 means that it will timeout immediately if no server is available.  A negative value means to wait indefinitely.\n\n        \n30000\n\n        \nAny integer\n\n    \n\n    \n\n        \nheartbeatSocketTimeout\n\n        \nThe socket timeout for connections used for the cluster heartbeat. A value of 0 means that it will timeout immediately if no cluster member is available.  A negative value means to wait indefinitely.\n\n        \n20000\n\n        \nAny integer\n\n    \n\n    \n\n        \nheartbeatConnectTimeout\n\n        \nThe connect timeout for connections used for the cluster heartbeat. A value of 0 means that it will timeout immediately if no cluster member is available.  A negative value means to wait indefinitely.\n\n        \n20000\n\n        \nAny integer\n\n    \n\n    \n\n        \nheartbeatFrequency\n\n        \nSpecify the interval (in milliseconds) between checks, counted from the end of the previous check until the beginning of the next one.\n\n        \n10000\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nminHeartbeatFrequency\n\n        \nSets the minimum heartbeat frequency.  In the event that the driver has to frequently re-check a server's availability, it will wait at least this long since the previous check to avoid wasted effort.\n\n        \n500\n\n        \nAny positive integer\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\n@Store(type=\nmongodb\n,mongodb.uri=\nmongodb://admin:admin@localhost/Foo\n)\n@PrimaryKey(\nsymbol\n)\n@IndexBy(\nvolume 1 {background:true,unique:true}\n)\ndefine table FooTable (symbol string, price float, volume long);\n\n\n\n\n\nThis will create a collection called FooTable for the events to be saved with symbol as Primary Key(unique index at mongod level) and index for the field volume will be created in ascending order with the index option to create the index in the background.\nNote: \n@PrimaryKey: This specifies a list of comma-separated values to be treated as unique fields in the table. Each record in the table must have a unique combination of values for the fields specified here.\n@IndexBy: This specifies the fields that must be indexed at the database level. You can specify multiple values as a come-separated list. A single value to be in the format,\n?\nFieldName\n \nSortOrder\n \nIndexOptions\n?\nSortOrder\n - ( 1) for Ascending and (-1) for Descending\nIndexOptions\n - Index Options must be defined inside curly brackets. {} to be used for default options. Options must follow the standard mongodb index options format. Reference : https://docs.mongodb.com/manual/reference/method/db.collection.createIndex/\nExample : ?symbol 1 {?unique?:true}?", 
            "title": "1.0.19"
        }, 
        {
            "location": "/api/1.0.19/#api-docs-v1019", 
            "text": "", 
            "title": "API Docs - v1.0.19"
        }, 
        {
            "location": "/api/1.0.19/#store", 
            "text": "", 
            "title": "Store"
        }, 
        {
            "location": "/api/1.0.19/#mongodb-store", 
            "text": "Using this extension a MongoDB Event Table can be configured to persist events in a MongoDB of user's choice.  Syntax  @Store(type= mongodb , mongodb.uri= STRING , collection.name= STRING , secure.connection= STRING , trust.store= STRING , trust.store.password= STRING , key.store= STRING , key.store.password= STRING )\n@PrimaryKey( PRIMARY_KEY )\n@Index( INDEX )  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         mongodb.uri \n         The MongoDB URI for the MongoDB data store. The uri must be of the format  mongodb://[username:password@]host1[:port1][,hostN[:portN]][/[database][?options]] The options specified in the uri will override any connection options specified in the deployment yaml file. \n         \n         STRING \n         No \n         No \n     \n     \n         collection.name \n         The name of the collection in the store this Event Table should be persisted as. \n         Name of the siddhi event table. \n         STRING \n         Yes \n         No \n     \n     \n         secure.connection \n         Describes enabling the SSL for the mongodb connection \n         false \n         STRING \n         Yes \n         No \n     \n     \n         trust.store \n         File path to the trust store. \n         ${carbon.home}/resources/security/client-truststore.jks \n         STRING \n         Yes \n         No \n     \n     \n         trust.store.password \n         Password to access the trust store \n         wso2carbon \n         STRING \n         Yes \n         No \n     \n     \n         key.store \n         File path to the keystore. \n         ${carbon.home}/resources/security/client-truststore.jks \n         STRING \n         Yes \n         No \n     \n     \n         key.store.password \n         Password to access the keystore \n         wso2carbon \n         STRING \n         Yes \n         No \n       System Parameters  \n     \n         Name \n         Description \n         Default Value \n         Possible Parameters \n     \n     \n         applicationName \n         Sets the logical name of the application using this MongoClient. The application name may be used by the client to identify the application to the server, for use in server logs, slow query logs, and profile collection. \n         null \n         the logical name of the application using this MongoClient. The UTF-8 encoding may not exceed 128 bytes. \n     \n     \n         cursorFinalizerEnabled \n         Sets whether cursor finalizers are enabled. \n         true \n         true false \n     \n     \n         requiredReplicaSetName \n         The name of the replica set \n         null \n         the logical name of the replica set \n     \n     \n         sslEnabled \n         Sets whether to initiate connection with TSL/SSL enabled. true: Initiate the connection with TLS/SSL. false: Initiate the connection without TLS/SSL. \n         false \n         true false \n     \n     \n         trustStore \n         File path to the trust store. \n         ${carbon.home}/resources/security/client-truststore.jks \n         Any valid file path. \n     \n     \n         trustStorePassword \n         Password to access the trust store \n         wso2carbon \n         Any valid password. \n     \n     \n         keyStore \n         File path to the keystore. \n         ${carbon.home}/resources/security/client-truststore.jks \n         Any valid file path. \n     \n     \n         keyStorePassword \n         Password to access the keystore \n         wso2carbon \n         Any valid password. \n     \n     \n         connectTimeout \n         The time in milliseconds to attempt a connection before timing out. \n         10000 \n         Any positive integer \n     \n     \n         connectionsPerHost \n         The maximum number of connections in the connection pool. \n         100 \n         Any positive integer \n     \n     \n         minConnectionsPerHost \n         The minimum number of connections in the connection pool. \n         0 \n         Any natural number \n     \n     \n         maxConnectionIdleTime \n         The maximum number of milliseconds that a connection can remain idle in the pool before being removed and closed. A zero value indicates no limit to the idle time.  A pooled connection that has exceeded its idle time will be closed and replaced when necessary by a new connection. \n         0 \n         Any positive integer \n     \n     \n         maxWaitTime \n         The maximum wait time in milliseconds that a thread may wait for a connection to become available. A value of 0 means that it will not wait.  A negative value means to wait indefinitely \n         120000 \n         Any integer \n     \n     \n         threadsAllowedToBlockForConnectionMultiplier \n         The maximum number of connections allowed per host for this MongoClient instance. Those connections will be kept in a pool when idle. Once the pool is exhausted, any operation requiring a connection will block waiting for an available connection. \n         100 \n         Any natural number \n     \n     \n         maxConnectionLifeTime \n         The maximum life time of a pooled connection.  A zero value indicates no limit to the life time.  A pooled connection that has exceeded its life time will be closed and replaced when necessary by a new connection. \n         0 \n         Any positive integer \n     \n     \n         socketKeepAlive \n         Sets whether to keep a connection alive through firewalls \n         false \n         true false \n     \n     \n         socketTimeout \n         The time in milliseconds to attempt a send or receive on a socket before the attempt times out. Default 0 means never to timeout. \n         0 \n         Any natural integer \n     \n     \n         writeConcern \n         The write concern to use. \n         acknowledged \n         acknowledged w1 w2 w3 unacknowledged fsynced journaled replica_acknowledged normal safe majority fsync_safe journal_safe replicas_safe \n     \n     \n         readConcern \n         The level of isolation for the reads from replica sets. \n         default \n         local majority linearizable \n     \n     \n         readPreference \n         Specifies the replica set read preference for the connection. \n         primary \n         primary secondary secondarypreferred primarypreferred nearest \n     \n     \n         localThreshold \n         The size (in milliseconds) of the latency window for selecting among multiple suitable MongoDB instances. \n         15 \n         Any natural number \n     \n     \n         serverSelectionTimeout \n         Specifies how long (in milliseconds) to block for server selection before throwing an exception. A value of 0 means that it will timeout immediately if no server is available.  A negative value means to wait indefinitely. \n         30000 \n         Any integer \n     \n     \n         heartbeatSocketTimeout \n         The socket timeout for connections used for the cluster heartbeat. A value of 0 means that it will timeout immediately if no cluster member is available.  A negative value means to wait indefinitely. \n         20000 \n         Any integer \n     \n     \n         heartbeatConnectTimeout \n         The connect timeout for connections used for the cluster heartbeat. A value of 0 means that it will timeout immediately if no cluster member is available.  A negative value means to wait indefinitely. \n         20000 \n         Any integer \n     \n     \n         heartbeatFrequency \n         Specify the interval (in milliseconds) between checks, counted from the end of the previous check until the beginning of the next one. \n         10000 \n         Any positive integer \n     \n     \n         minHeartbeatFrequency \n         Sets the minimum heartbeat frequency.  In the event that the driver has to frequently re-check a server's availability, it will wait at least this long since the previous check to avoid wasted effort. \n         500 \n         Any positive integer \n       Examples  EXAMPLE 1  @Store(type= mongodb ,mongodb.uri= mongodb://admin:admin@localhost/Foo )\n@PrimaryKey( symbol )\n@IndexBy( volume 1 {background:true,unique:true} )\ndefine table FooTable (symbol string, price float, volume long);  This will create a collection called FooTable for the events to be saved with symbol as Primary Key(unique index at mongod level) and index for the field volume will be created in ascending order with the index option to create the index in the background. Note:  @PrimaryKey: This specifies a list of comma-separated values to be treated as unique fields in the table. Each record in the table must have a unique combination of values for the fields specified here. @IndexBy: This specifies the fields that must be indexed at the database level. You can specify multiple values as a come-separated list. A single value to be in the format, ? FieldName   SortOrder   IndexOptions ? SortOrder  - ( 1) for Ascending and (-1) for Descending IndexOptions  - Index Options must be defined inside curly brackets. {} to be used for default options. Options must follow the standard mongodb index options format. Reference : https://docs.mongodb.com/manual/reference/method/db.collection.createIndex/ Example : ?symbol 1 {?unique?:true}?", 
            "title": "mongodb (Store)"
        }, 
        {
            "location": "/api/1.0.18/", 
            "text": "API Docs - v1.0.18\n\n\nStore\n\n\nmongodb \n(Store)\n\n\nUsing this extension a MongoDB Event Table can be configured to persist events in a MongoDB of user's choice.\n\n\n\nSyntax\n\n\n@Store(type=\nmongodb\n, mongodb.uri=\nSTRING\n, collection.name=\nSTRING\n, secure.connection=\nSTRING\n, trust.store=\nSTRING\n, trust.store.password=\nSTRING\n, key.store=\nSTRING\n, key.store.password=\nSTRING\n)\n@PrimaryKey(\nPRIMARY_KEY\n)\n@Index(\nINDEX\n)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \nmongodb.uri\n\n        \nThe MongoDB URI for the MongoDB data store. The uri must be of the format \nmongodb://[username:password@]host1[:port1][,hostN[:portN]][/[database][?options]]\nThe options specified in the uri will override any connection options specified in the deployment yaml file.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \ncollection.name\n\n        \nThe name of the collection in the store this Event Table should be persisted as.\n\n        \nName of the siddhi event table.\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nsecure.connection\n\n        \nDescribes enabling the SSL for the mongodb connection\n\n        \nfalse\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \ntrust.store\n\n        \nFile path to the trust store.\n\n        \n${carbon.home}/resources/security/client-truststore.jks\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \ntrust.store.password\n\n        \nPassword to access the trust store\n\n        \nwso2carbon\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nkey.store\n\n        \nFile path to the keystore.\n\n        \n${carbon.home}/resources/security/client-truststore.jks\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nkey.store.password\n\n        \nPassword to access the keystore\n\n        \nwso2carbon\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n\n\n\nSystem Parameters\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Parameters\n\n    \n\n    \n\n        \napplicationName\n\n        \nSets the logical name of the application using this MongoClient. The application name may be used by the client to identify the application to the server, for use in server logs, slow query logs, and profile collection.\n\n        \nnull\n\n        \nthe logical name of the application using this MongoClient. The UTF-8 encoding may not exceed 128 bytes.\n\n    \n\n    \n\n        \ncursorFinalizerEnabled\n\n        \nSets whether cursor finalizers are enabled.\n\n        \ntrue\n\n        \ntrue\nfalse\n\n    \n\n    \n\n        \nrequiredReplicaSetName\n\n        \nThe name of the replica set\n\n        \nnull\n\n        \nthe logical name of the replica set\n\n    \n\n    \n\n        \nsslEnabled\n\n        \nSets whether to initiate connection with TSL/SSL enabled. true: Initiate the connection with TLS/SSL. false: Initiate the connection without TLS/SSL.\n\n        \nfalse\n\n        \ntrue\nfalse\n\n    \n\n    \n\n        \ntrustStore\n\n        \nFile path to the trust store.\n\n        \n${carbon.home}/resources/security/client-truststore.jks\n\n        \nAny valid file path.\n\n    \n\n    \n\n        \ntrustStorePassword\n\n        \nPassword to access the trust store\n\n        \nwso2carbon\n\n        \nAny valid password.\n\n    \n\n    \n\n        \nkeyStore\n\n        \nFile path to the keystore.\n\n        \n${carbon.home}/resources/security/client-truststore.jks\n\n        \nAny valid file path.\n\n    \n\n    \n\n        \nkeyStorePassword\n\n        \nPassword to access the keystore\n\n        \nwso2carbon\n\n        \nAny valid password.\n\n    \n\n    \n\n        \nconnectTimeout\n\n        \nThe time in milliseconds to attempt a connection before timing out.\n\n        \n10000\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nconnectionsPerHost\n\n        \nThe maximum number of connections in the connection pool.\n\n        \n100\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nminConnectionsPerHost\n\n        \nThe minimum number of connections in the connection pool.\n\n        \n0\n\n        \nAny natural number\n\n    \n\n    \n\n        \nmaxConnectionIdleTime\n\n        \nThe maximum number of milliseconds that a connection can remain idle in the pool before being removed and closed. A zero value indicates no limit to the idle time.  A pooled connection that has exceeded its idle time will be closed and replaced when necessary by a new connection.\n\n        \n0\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nmaxWaitTime\n\n        \nThe maximum wait time in milliseconds that a thread may wait for a connection to become available. A value of 0 means that it will not wait.  A negative value means to wait indefinitely\n\n        \n120000\n\n        \nAny integer\n\n    \n\n    \n\n        \nthreadsAllowedToBlockForConnectionMultiplier\n\n        \nThe maximum number of connections allowed per host for this MongoClient instance. Those connections will be kept in a pool when idle. Once the pool is exhausted, any operation requiring a connection will block waiting for an available connection.\n\n        \n100\n\n        \nAny natural number\n\n    \n\n    \n\n        \nmaxConnectionLifeTime\n\n        \nThe maximum life time of a pooled connection.  A zero value indicates no limit to the life time.  A pooled connection that has exceeded its life time will be closed and replaced when necessary by a new connection.\n\n        \n0\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nsocketKeepAlive\n\n        \nSets whether to keep a connection alive through firewalls\n\n        \nfalse\n\n        \ntrue\nfalse\n\n    \n\n    \n\n        \nsocketTimeout\n\n        \nThe time in milliseconds to attempt a send or receive on a socket before the attempt times out. Default 0 means never to timeout.\n\n        \n0\n\n        \nAny natural integer\n\n    \n\n    \n\n        \nwriteConcern\n\n        \nThe write concern to use.\n\n        \nacknowledged\n\n        \nacknowledged\nw1\nw2\nw3\nunacknowledged\nfsynced\njournaled\nreplica_acknowledged\nnormal\nsafe\nmajority\nfsync_safe\njournal_safe\nreplicas_safe\n\n    \n\n    \n\n        \nreadConcern\n\n        \nThe level of isolation for the reads from replica sets.\n\n        \ndefault\n\n        \nlocal\nmajority\nlinearizable\n\n    \n\n    \n\n        \nreadPreference\n\n        \nSpecifies the replica set read preference for the connection.\n\n        \nprimary\n\n        \nprimary\nsecondary\nsecondarypreferred\nprimarypreferred\nnearest\n\n    \n\n    \n\n        \nlocalThreshold\n\n        \nThe size (in milliseconds) of the latency window for selecting among multiple suitable MongoDB instances.\n\n        \n15\n\n        \nAny natural number\n\n    \n\n    \n\n        \nserverSelectionTimeout\n\n        \nSpecifies how long (in milliseconds) to block for server selection before throwing an exception. A value of 0 means that it will timeout immediately if no server is available.  A negative value means to wait indefinitely.\n\n        \n30000\n\n        \nAny integer\n\n    \n\n    \n\n        \nheartbeatSocketTimeout\n\n        \nThe socket timeout for connections used for the cluster heartbeat. A value of 0 means that it will timeout immediately if no cluster member is available.  A negative value means to wait indefinitely.\n\n        \n20000\n\n        \nAny integer\n\n    \n\n    \n\n        \nheartbeatConnectTimeout\n\n        \nThe connect timeout for connections used for the cluster heartbeat. A value of 0 means that it will timeout immediately if no cluster member is available.  A negative value means to wait indefinitely.\n\n        \n20000\n\n        \nAny integer\n\n    \n\n    \n\n        \nheartbeatFrequency\n\n        \nSpecify the interval (in milliseconds) between checks, counted from the end of the previous check until the beginning of the next one.\n\n        \n10000\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nminHeartbeatFrequency\n\n        \nSets the minimum heartbeat frequency.  In the event that the driver has to frequently re-check a server's availability, it will wait at least this long since the previous check to avoid wasted effort.\n\n        \n500\n\n        \nAny positive integer\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\n@Store(type=\nmongodb\n,mongodb.uri=\nmongodb://admin:admin@localhost/Foo\n)\n@PrimaryKey(\nsymbol\n)\n@IndexBy(\nvolume 1 {background:true,unique:true}\n)\ndefine table FooTable (symbol string, price float, volume long);\n\n\n\n\n\nThis will create a collection called FooTable for the events to be saved with symbol as Primary Key(unique index at mongod level) and index for the field volume will be created in ascending order with the index option to create the index in the background.\nNote: \n@PrimaryKey: This specifies a list of comma-separated values to be treated as unique fields in the table. Each record in the table must have a unique combination of values for the fields specified here.\n@IndexBy: This specifies the fields that must be indexed at the database level. You can specify multiple values as a come-separated list. A single value to be in the format,\n?\nFieldName\n \nSortOrder\n \nIndexOptions\n?\nSortOrder\n - ( 1) for Ascending and (-1) for Descending\nIndexOptions\n - Index Options must be defined inside curly brackets. {} to be used for default options. Options must follow the standard mongodb index options format. Reference : https://docs.mongodb.com/manual/reference/method/db.collection.createIndex/\nExample : ?symbol 1 {?unique?:true}?", 
            "title": "1.0.18"
        }, 
        {
            "location": "/api/1.0.18/#api-docs-v1018", 
            "text": "", 
            "title": "API Docs - v1.0.18"
        }, 
        {
            "location": "/api/1.0.18/#store", 
            "text": "", 
            "title": "Store"
        }, 
        {
            "location": "/api/1.0.18/#mongodb-store", 
            "text": "Using this extension a MongoDB Event Table can be configured to persist events in a MongoDB of user's choice.  Syntax  @Store(type= mongodb , mongodb.uri= STRING , collection.name= STRING , secure.connection= STRING , trust.store= STRING , trust.store.password= STRING , key.store= STRING , key.store.password= STRING )\n@PrimaryKey( PRIMARY_KEY )\n@Index( INDEX )  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         mongodb.uri \n         The MongoDB URI for the MongoDB data store. The uri must be of the format  mongodb://[username:password@]host1[:port1][,hostN[:portN]][/[database][?options]] The options specified in the uri will override any connection options specified in the deployment yaml file. \n         \n         STRING \n         No \n         No \n     \n     \n         collection.name \n         The name of the collection in the store this Event Table should be persisted as. \n         Name of the siddhi event table. \n         STRING \n         Yes \n         No \n     \n     \n         secure.connection \n         Describes enabling the SSL for the mongodb connection \n         false \n         STRING \n         Yes \n         No \n     \n     \n         trust.store \n         File path to the trust store. \n         ${carbon.home}/resources/security/client-truststore.jks \n         STRING \n         Yes \n         No \n     \n     \n         trust.store.password \n         Password to access the trust store \n         wso2carbon \n         STRING \n         Yes \n         No \n     \n     \n         key.store \n         File path to the keystore. \n         ${carbon.home}/resources/security/client-truststore.jks \n         STRING \n         Yes \n         No \n     \n     \n         key.store.password \n         Password to access the keystore \n         wso2carbon \n         STRING \n         Yes \n         No \n       System Parameters  \n     \n         Name \n         Description \n         Default Value \n         Possible Parameters \n     \n     \n         applicationName \n         Sets the logical name of the application using this MongoClient. The application name may be used by the client to identify the application to the server, for use in server logs, slow query logs, and profile collection. \n         null \n         the logical name of the application using this MongoClient. The UTF-8 encoding may not exceed 128 bytes. \n     \n     \n         cursorFinalizerEnabled \n         Sets whether cursor finalizers are enabled. \n         true \n         true false \n     \n     \n         requiredReplicaSetName \n         The name of the replica set \n         null \n         the logical name of the replica set \n     \n     \n         sslEnabled \n         Sets whether to initiate connection with TSL/SSL enabled. true: Initiate the connection with TLS/SSL. false: Initiate the connection without TLS/SSL. \n         false \n         true false \n     \n     \n         trustStore \n         File path to the trust store. \n         ${carbon.home}/resources/security/client-truststore.jks \n         Any valid file path. \n     \n     \n         trustStorePassword \n         Password to access the trust store \n         wso2carbon \n         Any valid password. \n     \n     \n         keyStore \n         File path to the keystore. \n         ${carbon.home}/resources/security/client-truststore.jks \n         Any valid file path. \n     \n     \n         keyStorePassword \n         Password to access the keystore \n         wso2carbon \n         Any valid password. \n     \n     \n         connectTimeout \n         The time in milliseconds to attempt a connection before timing out. \n         10000 \n         Any positive integer \n     \n     \n         connectionsPerHost \n         The maximum number of connections in the connection pool. \n         100 \n         Any positive integer \n     \n     \n         minConnectionsPerHost \n         The minimum number of connections in the connection pool. \n         0 \n         Any natural number \n     \n     \n         maxConnectionIdleTime \n         The maximum number of milliseconds that a connection can remain idle in the pool before being removed and closed. A zero value indicates no limit to the idle time.  A pooled connection that has exceeded its idle time will be closed and replaced when necessary by a new connection. \n         0 \n         Any positive integer \n     \n     \n         maxWaitTime \n         The maximum wait time in milliseconds that a thread may wait for a connection to become available. A value of 0 means that it will not wait.  A negative value means to wait indefinitely \n         120000 \n         Any integer \n     \n     \n         threadsAllowedToBlockForConnectionMultiplier \n         The maximum number of connections allowed per host for this MongoClient instance. Those connections will be kept in a pool when idle. Once the pool is exhausted, any operation requiring a connection will block waiting for an available connection. \n         100 \n         Any natural number \n     \n     \n         maxConnectionLifeTime \n         The maximum life time of a pooled connection.  A zero value indicates no limit to the life time.  A pooled connection that has exceeded its life time will be closed and replaced when necessary by a new connection. \n         0 \n         Any positive integer \n     \n     \n         socketKeepAlive \n         Sets whether to keep a connection alive through firewalls \n         false \n         true false \n     \n     \n         socketTimeout \n         The time in milliseconds to attempt a send or receive on a socket before the attempt times out. Default 0 means never to timeout. \n         0 \n         Any natural integer \n     \n     \n         writeConcern \n         The write concern to use. \n         acknowledged \n         acknowledged w1 w2 w3 unacknowledged fsynced journaled replica_acknowledged normal safe majority fsync_safe journal_safe replicas_safe \n     \n     \n         readConcern \n         The level of isolation for the reads from replica sets. \n         default \n         local majority linearizable \n     \n     \n         readPreference \n         Specifies the replica set read preference for the connection. \n         primary \n         primary secondary secondarypreferred primarypreferred nearest \n     \n     \n         localThreshold \n         The size (in milliseconds) of the latency window for selecting among multiple suitable MongoDB instances. \n         15 \n         Any natural number \n     \n     \n         serverSelectionTimeout \n         Specifies how long (in milliseconds) to block for server selection before throwing an exception. A value of 0 means that it will timeout immediately if no server is available.  A negative value means to wait indefinitely. \n         30000 \n         Any integer \n     \n     \n         heartbeatSocketTimeout \n         The socket timeout for connections used for the cluster heartbeat. A value of 0 means that it will timeout immediately if no cluster member is available.  A negative value means to wait indefinitely. \n         20000 \n         Any integer \n     \n     \n         heartbeatConnectTimeout \n         The connect timeout for connections used for the cluster heartbeat. A value of 0 means that it will timeout immediately if no cluster member is available.  A negative value means to wait indefinitely. \n         20000 \n         Any integer \n     \n     \n         heartbeatFrequency \n         Specify the interval (in milliseconds) between checks, counted from the end of the previous check until the beginning of the next one. \n         10000 \n         Any positive integer \n     \n     \n         minHeartbeatFrequency \n         Sets the minimum heartbeat frequency.  In the event that the driver has to frequently re-check a server's availability, it will wait at least this long since the previous check to avoid wasted effort. \n         500 \n         Any positive integer \n       Examples  EXAMPLE 1  @Store(type= mongodb ,mongodb.uri= mongodb://admin:admin@localhost/Foo )\n@PrimaryKey( symbol )\n@IndexBy( volume 1 {background:true,unique:true} )\ndefine table FooTable (symbol string, price float, volume long);  This will create a collection called FooTable for the events to be saved with symbol as Primary Key(unique index at mongod level) and index for the field volume will be created in ascending order with the index option to create the index in the background. Note:  @PrimaryKey: This specifies a list of comma-separated values to be treated as unique fields in the table. Each record in the table must have a unique combination of values for the fields specified here. @IndexBy: This specifies the fields that must be indexed at the database level. You can specify multiple values as a come-separated list. A single value to be in the format, ? FieldName   SortOrder   IndexOptions ? SortOrder  - ( 1) for Ascending and (-1) for Descending IndexOptions  - Index Options must be defined inside curly brackets. {} to be used for default options. Options must follow the standard mongodb index options format. Reference : https://docs.mongodb.com/manual/reference/method/db.collection.createIndex/ Example : ?symbol 1 {?unique?:true}?", 
            "title": "mongodb (Store)"
        }, 
        {
            "location": "/api/1.0.17/", 
            "text": "API Docs - v1.0.17\n\n\nStore\n\n\nmongodb \n(Store)\n\n\nUsing this extension a MongoDB Event Table can be configured to persist events in a MongoDB of user's choice.\n\n\n\nSyntax\n\n\n@Store(type=\nmongodb\n, mongodb.uri=\nSTRING\n, collection.name=\nSTRING\n, secure.connection=\nSTRING\n, trust.store=\nSTRING\n, trust.store.password=\nSTRING\n, key.store=\nSTRING\n, key.store.password=\nSTRING\n)\n@PrimaryKey(\nPRIMARY_KEY\n)\n@Index(\nINDEX\n)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \nmongodb.uri\n\n        \nThe MongoDB URI for the MongoDB data store. The uri must be of the format \nmongodb://[username:password@]host1[:port1][,hostN[:portN]][/[database][?options]]\nThe options specified in the uri will override any connection options specified in the deployment yaml file.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \ncollection.name\n\n        \nThe name of the collection in the store this Event Table should be persisted as.\n\n        \nName of the siddhi event table.\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nsecure.connection\n\n        \nDescribes enabling the SSL for the mongodb connection\n\n        \nfalse\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \ntrust.store\n\n        \nFile path to the trust store.\n\n        \n${carbon.home}/resources/security/client-truststore.jks\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \ntrust.store.password\n\n        \nPassword to access the trust store\n\n        \nwso2carbon\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nkey.store\n\n        \nFile path to the keystore.\n\n        \n${carbon.home}/resources/security/client-truststore.jks\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nkey.store.password\n\n        \nPassword to access the keystore\n\n        \nwso2carbon\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n\n\n\nSystem Parameters\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Parameters\n\n    \n\n    \n\n        \napplicationName\n\n        \nSets the logical name of the application using this MongoClient. The application name may be used by the client to identify the application to the server, for use in server logs, slow query logs, and profile collection.\n\n        \nnull\n\n        \nthe logical name of the application using this MongoClient. The UTF-8 encoding may not exceed 128 bytes.\n\n    \n\n    \n\n        \ncursorFinalizerEnabled\n\n        \nSets whether cursor finalizers are enabled.\n\n        \ntrue\n\n        \ntrue\nfalse\n\n    \n\n    \n\n        \nrequiredReplicaSetName\n\n        \nThe name of the replica set\n\n        \nnull\n\n        \nthe logical name of the replica set\n\n    \n\n    \n\n        \nsslEnabled\n\n        \nSets whether to initiate connection with TSL/SSL enabled. true: Initiate the connection with TLS/SSL. false: Initiate the connection without TLS/SSL.\n\n        \nfalse\n\n        \ntrue\nfalse\n\n    \n\n    \n\n        \ntrustStore\n\n        \nFile path to the trust store.\n\n        \n${carbon.home}/resources/security/client-truststore.jks\n\n        \nAny valid file path.\n\n    \n\n    \n\n        \ntrustStorePassword\n\n        \nPassword to access the trust store\n\n        \nwso2carbon\n\n        \nAny valid password.\n\n    \n\n    \n\n        \nkeyStore\n\n        \nFile path to the keystore.\n\n        \n${carbon.home}/resources/security/client-truststore.jks\n\n        \nAny valid file path.\n\n    \n\n    \n\n        \nkeyStorePassword\n\n        \nPassword to access the keystore\n\n        \nwso2carbon\n\n        \nAny valid password.\n\n    \n\n    \n\n        \nconnectTimeout\n\n        \nThe time in milliseconds to attempt a connection before timing out.\n\n        \n10000\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nconnectionsPerHost\n\n        \nThe maximum number of connections in the connection pool.\n\n        \n100\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nminConnectionsPerHost\n\n        \nThe minimum number of connections in the connection pool.\n\n        \n0\n\n        \nAny natural number\n\n    \n\n    \n\n        \nmaxConnectionIdleTime\n\n        \nThe maximum number of milliseconds that a connection can remain idle in the pool before being removed and closed. A zero value indicates no limit to the idle time.  A pooled connection that has exceeded its idle time will be closed and replaced when necessary by a new connection.\n\n        \n0\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nmaxWaitTime\n\n        \nThe maximum wait time in milliseconds that a thread may wait for a connection to become available. A value of 0 means that it will not wait.  A negative value means to wait indefinitely\n\n        \n120000\n\n        \nAny integer\n\n    \n\n    \n\n        \nthreadsAllowedToBlockForConnectionMultiplier\n\n        \nThe maximum number of connections allowed per host for this MongoClient instance. Those connections will be kept in a pool when idle. Once the pool is exhausted, any operation requiring a connection will block waiting for an available connection.\n\n        \n100\n\n        \nAny natural number\n\n    \n\n    \n\n        \nmaxConnectionLifeTime\n\n        \nThe maximum life time of a pooled connection.  A zero value indicates no limit to the life time.  A pooled connection that has exceeded its life time will be closed and replaced when necessary by a new connection.\n\n        \n0\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nsocketKeepAlive\n\n        \nSets whether to keep a connection alive through firewalls\n\n        \nfalse\n\n        \ntrue\nfalse\n\n    \n\n    \n\n        \nsocketTimeout\n\n        \nThe time in milliseconds to attempt a send or receive on a socket before the attempt times out. Default 0 means never to timeout.\n\n        \n0\n\n        \nAny natural integer\n\n    \n\n    \n\n        \nwriteConcern\n\n        \nThe write concern to use.\n\n        \nacknowledged\n\n        \nacknowledged\nw1\nw2\nw3\nunacknowledged\nfsynced\njournaled\nreplica_acknowledged\nnormal\nsafe\nmajority\nfsync_safe\njournal_safe\nreplicas_safe\n\n    \n\n    \n\n        \nreadConcern\n\n        \nThe level of isolation for the reads from replica sets.\n\n        \ndefault\n\n        \nlocal\nmajority\nlinearizable\n\n    \n\n    \n\n        \nreadPreference\n\n        \nSpecifies the replica set read preference for the connection.\n\n        \nprimary\n\n        \nprimary\nsecondary\nsecondarypreferred\nprimarypreferred\nnearest\n\n    \n\n    \n\n        \nlocalThreshold\n\n        \nThe size (in milliseconds) of the latency window for selecting among multiple suitable MongoDB instances.\n\n        \n15\n\n        \nAny natural number\n\n    \n\n    \n\n        \nserverSelectionTimeout\n\n        \nSpecifies how long (in milliseconds) to block for server selection before throwing an exception. A value of 0 means that it will timeout immediately if no server is available.  A negative value means to wait indefinitely.\n\n        \n30000\n\n        \nAny integer\n\n    \n\n    \n\n        \nheartbeatSocketTimeout\n\n        \nThe socket timeout for connections used for the cluster heartbeat. A value of 0 means that it will timeout immediately if no cluster member is available.  A negative value means to wait indefinitely.\n\n        \n20000\n\n        \nAny integer\n\n    \n\n    \n\n        \nheartbeatConnectTimeout\n\n        \nThe connect timeout for connections used for the cluster heartbeat. A value of 0 means that it will timeout immediately if no cluster member is available.  A negative value means to wait indefinitely.\n\n        \n20000\n\n        \nAny integer\n\n    \n\n    \n\n        \nheartbeatFrequency\n\n        \nSpecify the interval (in milliseconds) between checks, counted from the end of the previous check until the beginning of the next one.\n\n        \n10000\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nminHeartbeatFrequency\n\n        \nSets the minimum heartbeat frequency.  In the event that the driver has to frequently re-check a server's availability, it will wait at least this long since the previous check to avoid wasted effort.\n\n        \n500\n\n        \nAny positive integer\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\n@Store(type=\nmongodb\n,mongodb.uri=\nmongodb://admin:admin@localhost/Foo\n)\n@PrimaryKey(\nsymbol\n)\n@IndexBy(\nvolume 1 {background:true,unique:true}\n)\ndefine table FooTable (symbol string, price float, volume long);\n\n\n\n\n\nThis will create a collection called FooTable for the events to be saved with symbol as Primary Key(unique index at mongod level) and index for the field volume will be created in ascending order with the index option to create the index in the background.\nNote: \n@PrimaryKey: This specifies a list of comma-separated values to be treated as unique fields in the table. Each record in the table must have a unique combination of values for the fields specified here.\n@IndexBy: This specifies the fields that must be indexed at the database level. You can specify multiple values as a come-separated list. A single value to be in the format,\n?\nFieldName\n \nSortOrder\n \nIndexOptions\n?\nSortOrder\n - ( 1) for Ascending and (-1) for Descending\nIndexOptions\n - Index Options must be defined inside curly brackets. {} to be used for default options. Options must follow the standard mongodb index options format. Reference : https://docs.mongodb.com/manual/reference/method/db.collection.createIndex/\nExample : ?symbol 1 {?unique?:true}?", 
            "title": "1.0.17"
        }, 
        {
            "location": "/api/1.0.17/#api-docs-v1017", 
            "text": "", 
            "title": "API Docs - v1.0.17"
        }, 
        {
            "location": "/api/1.0.17/#store", 
            "text": "", 
            "title": "Store"
        }, 
        {
            "location": "/api/1.0.17/#mongodb-store", 
            "text": "Using this extension a MongoDB Event Table can be configured to persist events in a MongoDB of user's choice.  Syntax  @Store(type= mongodb , mongodb.uri= STRING , collection.name= STRING , secure.connection= STRING , trust.store= STRING , trust.store.password= STRING , key.store= STRING , key.store.password= STRING )\n@PrimaryKey( PRIMARY_KEY )\n@Index( INDEX )  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         mongodb.uri \n         The MongoDB URI for the MongoDB data store. The uri must be of the format  mongodb://[username:password@]host1[:port1][,hostN[:portN]][/[database][?options]] The options specified in the uri will override any connection options specified in the deployment yaml file. \n         \n         STRING \n         No \n         No \n     \n     \n         collection.name \n         The name of the collection in the store this Event Table should be persisted as. \n         Name of the siddhi event table. \n         STRING \n         Yes \n         No \n     \n     \n         secure.connection \n         Describes enabling the SSL for the mongodb connection \n         false \n         STRING \n         Yes \n         No \n     \n     \n         trust.store \n         File path to the trust store. \n         ${carbon.home}/resources/security/client-truststore.jks \n         STRING \n         Yes \n         No \n     \n     \n         trust.store.password \n         Password to access the trust store \n         wso2carbon \n         STRING \n         Yes \n         No \n     \n     \n         key.store \n         File path to the keystore. \n         ${carbon.home}/resources/security/client-truststore.jks \n         STRING \n         Yes \n         No \n     \n     \n         key.store.password \n         Password to access the keystore \n         wso2carbon \n         STRING \n         Yes \n         No \n       System Parameters  \n     \n         Name \n         Description \n         Default Value \n         Possible Parameters \n     \n     \n         applicationName \n         Sets the logical name of the application using this MongoClient. The application name may be used by the client to identify the application to the server, for use in server logs, slow query logs, and profile collection. \n         null \n         the logical name of the application using this MongoClient. The UTF-8 encoding may not exceed 128 bytes. \n     \n     \n         cursorFinalizerEnabled \n         Sets whether cursor finalizers are enabled. \n         true \n         true false \n     \n     \n         requiredReplicaSetName \n         The name of the replica set \n         null \n         the logical name of the replica set \n     \n     \n         sslEnabled \n         Sets whether to initiate connection with TSL/SSL enabled. true: Initiate the connection with TLS/SSL. false: Initiate the connection without TLS/SSL. \n         false \n         true false \n     \n     \n         trustStore \n         File path to the trust store. \n         ${carbon.home}/resources/security/client-truststore.jks \n         Any valid file path. \n     \n     \n         trustStorePassword \n         Password to access the trust store \n         wso2carbon \n         Any valid password. \n     \n     \n         keyStore \n         File path to the keystore. \n         ${carbon.home}/resources/security/client-truststore.jks \n         Any valid file path. \n     \n     \n         keyStorePassword \n         Password to access the keystore \n         wso2carbon \n         Any valid password. \n     \n     \n         connectTimeout \n         The time in milliseconds to attempt a connection before timing out. \n         10000 \n         Any positive integer \n     \n     \n         connectionsPerHost \n         The maximum number of connections in the connection pool. \n         100 \n         Any positive integer \n     \n     \n         minConnectionsPerHost \n         The minimum number of connections in the connection pool. \n         0 \n         Any natural number \n     \n     \n         maxConnectionIdleTime \n         The maximum number of milliseconds that a connection can remain idle in the pool before being removed and closed. A zero value indicates no limit to the idle time.  A pooled connection that has exceeded its idle time will be closed and replaced when necessary by a new connection. \n         0 \n         Any positive integer \n     \n     \n         maxWaitTime \n         The maximum wait time in milliseconds that a thread may wait for a connection to become available. A value of 0 means that it will not wait.  A negative value means to wait indefinitely \n         120000 \n         Any integer \n     \n     \n         threadsAllowedToBlockForConnectionMultiplier \n         The maximum number of connections allowed per host for this MongoClient instance. Those connections will be kept in a pool when idle. Once the pool is exhausted, any operation requiring a connection will block waiting for an available connection. \n         100 \n         Any natural number \n     \n     \n         maxConnectionLifeTime \n         The maximum life time of a pooled connection.  A zero value indicates no limit to the life time.  A pooled connection that has exceeded its life time will be closed and replaced when necessary by a new connection. \n         0 \n         Any positive integer \n     \n     \n         socketKeepAlive \n         Sets whether to keep a connection alive through firewalls \n         false \n         true false \n     \n     \n         socketTimeout \n         The time in milliseconds to attempt a send or receive on a socket before the attempt times out. Default 0 means never to timeout. \n         0 \n         Any natural integer \n     \n     \n         writeConcern \n         The write concern to use. \n         acknowledged \n         acknowledged w1 w2 w3 unacknowledged fsynced journaled replica_acknowledged normal safe majority fsync_safe journal_safe replicas_safe \n     \n     \n         readConcern \n         The level of isolation for the reads from replica sets. \n         default \n         local majority linearizable \n     \n     \n         readPreference \n         Specifies the replica set read preference for the connection. \n         primary \n         primary secondary secondarypreferred primarypreferred nearest \n     \n     \n         localThreshold \n         The size (in milliseconds) of the latency window for selecting among multiple suitable MongoDB instances. \n         15 \n         Any natural number \n     \n     \n         serverSelectionTimeout \n         Specifies how long (in milliseconds) to block for server selection before throwing an exception. A value of 0 means that it will timeout immediately if no server is available.  A negative value means to wait indefinitely. \n         30000 \n         Any integer \n     \n     \n         heartbeatSocketTimeout \n         The socket timeout for connections used for the cluster heartbeat. A value of 0 means that it will timeout immediately if no cluster member is available.  A negative value means to wait indefinitely. \n         20000 \n         Any integer \n     \n     \n         heartbeatConnectTimeout \n         The connect timeout for connections used for the cluster heartbeat. A value of 0 means that it will timeout immediately if no cluster member is available.  A negative value means to wait indefinitely. \n         20000 \n         Any integer \n     \n     \n         heartbeatFrequency \n         Specify the interval (in milliseconds) between checks, counted from the end of the previous check until the beginning of the next one. \n         10000 \n         Any positive integer \n     \n     \n         minHeartbeatFrequency \n         Sets the minimum heartbeat frequency.  In the event that the driver has to frequently re-check a server's availability, it will wait at least this long since the previous check to avoid wasted effort. \n         500 \n         Any positive integer \n       Examples  EXAMPLE 1  @Store(type= mongodb ,mongodb.uri= mongodb://admin:admin@localhost/Foo )\n@PrimaryKey( symbol )\n@IndexBy( volume 1 {background:true,unique:true} )\ndefine table FooTable (symbol string, price float, volume long);  This will create a collection called FooTable for the events to be saved with symbol as Primary Key(unique index at mongod level) and index for the field volume will be created in ascending order with the index option to create the index in the background. Note:  @PrimaryKey: This specifies a list of comma-separated values to be treated as unique fields in the table. Each record in the table must have a unique combination of values for the fields specified here. @IndexBy: This specifies the fields that must be indexed at the database level. You can specify multiple values as a come-separated list. A single value to be in the format, ? FieldName   SortOrder   IndexOptions ? SortOrder  - ( 1) for Ascending and (-1) for Descending IndexOptions  - Index Options must be defined inside curly brackets. {} to be used for default options. Options must follow the standard mongodb index options format. Reference : https://docs.mongodb.com/manual/reference/method/db.collection.createIndex/ Example : ?symbol 1 {?unique?:true}?", 
            "title": "mongodb (Store)"
        }, 
        {
            "location": "/api/1.0.16/", 
            "text": "API Docs - v1.0.16\n\n\nStore\n\n\nmongodb \n(Store)\n\n\nUsing this extension a MongoDB Event Table can be configured to persist events in a MongoDB of user's choice.\n\n\n\nSyntax\n\n\n@Store(type=\nmongodb\n, mongodb.uri=\nSTRING\n, collection.name=\nSTRING\n, secure.connection=\nSTRING\n, trust.store=\nSTRING\n, trust.store.password=\nSTRING\n, key.store=\nSTRING\n, key.store.password=\nSTRING\n)\n@PrimaryKey(\nPRIMARY_KEY\n)\n@Index(\nINDEX\n)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \nmongodb.uri\n\n        \nThe MongoDB URI for the MongoDB data store. The uri must be of the format \nmongodb://[username:password@]host1[:port1][,hostN[:portN]][/[database][?options]]\nThe options specified in the uri will override any connection options specified in the deployment yaml file.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \ncollection.name\n\n        \nThe name of the collection in the store this Event Table should be persisted as.\n\n        \nName of the siddhi event table.\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nsecure.connection\n\n        \nDescribes enabling the SSL for the mongodb connection\n\n        \nfalse\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \ntrust.store\n\n        \nFile path to the trust store.\n\n        \n${carbon.home}/resources/security/client-truststore.jks\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \ntrust.store.password\n\n        \nPassword to access the trust store\n\n        \nwso2carbon\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nkey.store\n\n        \nFile path to the keystore.\n\n        \n${carbon.home}/resources/security/client-truststore.jks\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nkey.store.password\n\n        \nPassword to access the keystore\n\n        \nwso2carbon\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n\n\n\nSystem Parameters\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Parameters\n\n    \n\n    \n\n        \napplicationName\n\n        \nSets the logical name of the application using this MongoClient. The application name may be used by the client to identify the application to the server, for use in server logs, slow query logs, and profile collection.\n\n        \nnull\n\n        \nthe logical name of the application using this MongoClient. The UTF-8 encoding may not exceed 128 bytes.\n\n    \n\n    \n\n        \ncursorFinalizerEnabled\n\n        \nSets whether cursor finalizers are enabled.\n\n        \ntrue\n\n        \ntrue\nfalse\n\n    \n\n    \n\n        \nrequiredReplicaSetName\n\n        \nThe name of the replica set\n\n        \nnull\n\n        \nthe logical name of the replica set\n\n    \n\n    \n\n        \nsslEnabled\n\n        \nSets whether to initiate connection with TSL/SSL enabled. true: Initiate the connection with TLS/SSL. false: Initiate the connection without TLS/SSL.\n\n        \nfalse\n\n        \ntrue\nfalse\n\n    \n\n    \n\n        \ntrustStore\n\n        \nFile path to the trust store.\n\n        \n${carbon.home}/resources/security/client-truststore.jks\n\n        \nAny valid file path.\n\n    \n\n    \n\n        \ntrustStorePassword\n\n        \nPassword to access the trust store\n\n        \nwso2carbon\n\n        \nAny valid password.\n\n    \n\n    \n\n        \nkeyStore\n\n        \nFile path to the keystore.\n\n        \n${carbon.home}/resources/security/client-truststore.jks\n\n        \nAny valid file path.\n\n    \n\n    \n\n        \nkeyStorePassword\n\n        \nPassword to access the keystore\n\n        \nwso2carbon\n\n        \nAny valid password.\n\n    \n\n    \n\n        \nconnectTimeout\n\n        \nThe time in milliseconds to attempt a connection before timing out.\n\n        \n10000\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nconnectionsPerHost\n\n        \nThe maximum number of connections in the connection pool.\n\n        \n100\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nminConnectionsPerHost\n\n        \nThe minimum number of connections in the connection pool.\n\n        \n0\n\n        \nAny natural number\n\n    \n\n    \n\n        \nmaxConnectionIdleTime\n\n        \nThe maximum number of milliseconds that a connection can remain idle in the pool before being removed and closed. A zero value indicates no limit to the idle time.  A pooled connection that has exceeded its idle time will be closed and replaced when necessary by a new connection.\n\n        \n0\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nmaxWaitTime\n\n        \nThe maximum wait time in milliseconds that a thread may wait for a connection to become available. A value of 0 means that it will not wait.  A negative value means to wait indefinitely\n\n        \n120000\n\n        \nAny integer\n\n    \n\n    \n\n        \nthreadsAllowedToBlockForConnectionMultiplier\n\n        \nThe maximum number of connections allowed per host for this MongoClient instance. Those connections will be kept in a pool when idle. Once the pool is exhausted, any operation requiring a connection will block waiting for an available connection.\n\n        \n100\n\n        \nAny natural number\n\n    \n\n    \n\n        \nmaxConnectionLifeTime\n\n        \nThe maximum life time of a pooled connection.  A zero value indicates no limit to the life time.  A pooled connection that has exceeded its life time will be closed and replaced when necessary by a new connection.\n\n        \n0\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nsocketKeepAlive\n\n        \nSets whether to keep a connection alive through firewalls\n\n        \nfalse\n\n        \ntrue\nfalse\n\n    \n\n    \n\n        \nsocketTimeout\n\n        \nThe time in milliseconds to attempt a send or receive on a socket before the attempt times out. Default 0 means never to timeout.\n\n        \n0\n\n        \nAny natural integer\n\n    \n\n    \n\n        \nwriteConcern\n\n        \nThe write concern to use.\n\n        \nacknowledged\n\n        \nacknowledged\nw1\nw2\nw3\nunacknowledged\nfsynced\njournaled\nreplica_acknowledged\nnormal\nsafe\nmajority\nfsync_safe\njournal_safe\nreplicas_safe\n\n    \n\n    \n\n        \nreadConcern\n\n        \nThe level of isolation for the reads from replica sets.\n\n        \ndefault\n\n        \nlocal\nmajority\nlinearizable\n\n    \n\n    \n\n        \nreadPreference\n\n        \nSpecifies the replica set read preference for the connection.\n\n        \nprimary\n\n        \nprimary\nsecondary\nsecondarypreferred\nprimarypreferred\nnearest\n\n    \n\n    \n\n        \nlocalThreshold\n\n        \nThe size (in milliseconds) of the latency window for selecting among multiple suitable MongoDB instances.\n\n        \n15\n\n        \nAny natural number\n\n    \n\n    \n\n        \nserverSelectionTimeout\n\n        \nSpecifies how long (in milliseconds) to block for server selection before throwing an exception. A value of 0 means that it will timeout immediately if no server is available.  A negative value means to wait indefinitely.\n\n        \n30000\n\n        \nAny integer\n\n    \n\n    \n\n        \nheartbeatSocketTimeout\n\n        \nThe socket timeout for connections used for the cluster heartbeat. A value of 0 means that it will timeout immediately if no cluster member is available.  A negative value means to wait indefinitely.\n\n        \n20000\n\n        \nAny integer\n\n    \n\n    \n\n        \nheartbeatConnectTimeout\n\n        \nThe connect timeout for connections used for the cluster heartbeat. A value of 0 means that it will timeout immediately if no cluster member is available.  A negative value means to wait indefinitely.\n\n        \n20000\n\n        \nAny integer\n\n    \n\n    \n\n        \nheartbeatFrequency\n\n        \nSpecify the interval (in milliseconds) between checks, counted from the end of the previous check until the beginning of the next one.\n\n        \n10000\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nminHeartbeatFrequency\n\n        \nSets the minimum heartbeat frequency.  In the event that the driver has to frequently re-check a server's availability, it will wait at least this long since the previous check to avoid wasted effort.\n\n        \n500\n\n        \nAny positive integer\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\n@Store(type=\nmongodb\n,mongodb.uri=\nmongodb://admin:admin@localhost/Foo\n)\n@PrimaryKey(\nsymbol\n)\n@IndexBy(\nvolume 1 {background:true,unique:true}\n)\ndefine table FooTable (symbol string, price float, volume long);\n\n\n\n\n\nThis will create a collection called FooTable for the events to be saved with symbol as Primary Key(unique index at mongod level) and index for the field volume will be created in ascending order with the index option to create the index in the background.\nNote: \n@PrimaryKey: This specifies a list of comma-separated values to be treated as unique fields in the table. Each record in the table must have a unique combination of values for the fields specified here.\n@IndexBy: This specifies the fields that must be indexed at the database level. You can specify multiple values as a come-separated list. A single value to be in the format,\n?\nFieldName\n \nSortOrder\n \nIndexOptions\n?\nSortOrder\n - ( 1) for Ascending and (-1) for Descending\nIndexOptions\n - Index Options must be defined inside curly brackets. {} to be used for default options. Options must follow the standard mongodb index options format. Reference : https://docs.mongodb.com/manual/reference/method/db.collection.createIndex/\nExample : ?symbol 1 {?unique?:true}?", 
            "title": "1.0.16"
        }, 
        {
            "location": "/api/1.0.16/#api-docs-v1016", 
            "text": "", 
            "title": "API Docs - v1.0.16"
        }, 
        {
            "location": "/api/1.0.16/#store", 
            "text": "", 
            "title": "Store"
        }, 
        {
            "location": "/api/1.0.16/#mongodb-store", 
            "text": "Using this extension a MongoDB Event Table can be configured to persist events in a MongoDB of user's choice.  Syntax  @Store(type= mongodb , mongodb.uri= STRING , collection.name= STRING , secure.connection= STRING , trust.store= STRING , trust.store.password= STRING , key.store= STRING , key.store.password= STRING )\n@PrimaryKey( PRIMARY_KEY )\n@Index( INDEX )  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         mongodb.uri \n         The MongoDB URI for the MongoDB data store. The uri must be of the format  mongodb://[username:password@]host1[:port1][,hostN[:portN]][/[database][?options]] The options specified in the uri will override any connection options specified in the deployment yaml file. \n         \n         STRING \n         No \n         No \n     \n     \n         collection.name \n         The name of the collection in the store this Event Table should be persisted as. \n         Name of the siddhi event table. \n         STRING \n         Yes \n         No \n     \n     \n         secure.connection \n         Describes enabling the SSL for the mongodb connection \n         false \n         STRING \n         Yes \n         No \n     \n     \n         trust.store \n         File path to the trust store. \n         ${carbon.home}/resources/security/client-truststore.jks \n         STRING \n         Yes \n         No \n     \n     \n         trust.store.password \n         Password to access the trust store \n         wso2carbon \n         STRING \n         Yes \n         No \n     \n     \n         key.store \n         File path to the keystore. \n         ${carbon.home}/resources/security/client-truststore.jks \n         STRING \n         Yes \n         No \n     \n     \n         key.store.password \n         Password to access the keystore \n         wso2carbon \n         STRING \n         Yes \n         No \n       System Parameters  \n     \n         Name \n         Description \n         Default Value \n         Possible Parameters \n     \n     \n         applicationName \n         Sets the logical name of the application using this MongoClient. The application name may be used by the client to identify the application to the server, for use in server logs, slow query logs, and profile collection. \n         null \n         the logical name of the application using this MongoClient. The UTF-8 encoding may not exceed 128 bytes. \n     \n     \n         cursorFinalizerEnabled \n         Sets whether cursor finalizers are enabled. \n         true \n         true false \n     \n     \n         requiredReplicaSetName \n         The name of the replica set \n         null \n         the logical name of the replica set \n     \n     \n         sslEnabled \n         Sets whether to initiate connection with TSL/SSL enabled. true: Initiate the connection with TLS/SSL. false: Initiate the connection without TLS/SSL. \n         false \n         true false \n     \n     \n         trustStore \n         File path to the trust store. \n         ${carbon.home}/resources/security/client-truststore.jks \n         Any valid file path. \n     \n     \n         trustStorePassword \n         Password to access the trust store \n         wso2carbon \n         Any valid password. \n     \n     \n         keyStore \n         File path to the keystore. \n         ${carbon.home}/resources/security/client-truststore.jks \n         Any valid file path. \n     \n     \n         keyStorePassword \n         Password to access the keystore \n         wso2carbon \n         Any valid password. \n     \n     \n         connectTimeout \n         The time in milliseconds to attempt a connection before timing out. \n         10000 \n         Any positive integer \n     \n     \n         connectionsPerHost \n         The maximum number of connections in the connection pool. \n         100 \n         Any positive integer \n     \n     \n         minConnectionsPerHost \n         The minimum number of connections in the connection pool. \n         0 \n         Any natural number \n     \n     \n         maxConnectionIdleTime \n         The maximum number of milliseconds that a connection can remain idle in the pool before being removed and closed. A zero value indicates no limit to the idle time.  A pooled connection that has exceeded its idle time will be closed and replaced when necessary by a new connection. \n         0 \n         Any positive integer \n     \n     \n         maxWaitTime \n         The maximum wait time in milliseconds that a thread may wait for a connection to become available. A value of 0 means that it will not wait.  A negative value means to wait indefinitely \n         120000 \n         Any integer \n     \n     \n         threadsAllowedToBlockForConnectionMultiplier \n         The maximum number of connections allowed per host for this MongoClient instance. Those connections will be kept in a pool when idle. Once the pool is exhausted, any operation requiring a connection will block waiting for an available connection. \n         100 \n         Any natural number \n     \n     \n         maxConnectionLifeTime \n         The maximum life time of a pooled connection.  A zero value indicates no limit to the life time.  A pooled connection that has exceeded its life time will be closed and replaced when necessary by a new connection. \n         0 \n         Any positive integer \n     \n     \n         socketKeepAlive \n         Sets whether to keep a connection alive through firewalls \n         false \n         true false \n     \n     \n         socketTimeout \n         The time in milliseconds to attempt a send or receive on a socket before the attempt times out. Default 0 means never to timeout. \n         0 \n         Any natural integer \n     \n     \n         writeConcern \n         The write concern to use. \n         acknowledged \n         acknowledged w1 w2 w3 unacknowledged fsynced journaled replica_acknowledged normal safe majority fsync_safe journal_safe replicas_safe \n     \n     \n         readConcern \n         The level of isolation for the reads from replica sets. \n         default \n         local majority linearizable \n     \n     \n         readPreference \n         Specifies the replica set read preference for the connection. \n         primary \n         primary secondary secondarypreferred primarypreferred nearest \n     \n     \n         localThreshold \n         The size (in milliseconds) of the latency window for selecting among multiple suitable MongoDB instances. \n         15 \n         Any natural number \n     \n     \n         serverSelectionTimeout \n         Specifies how long (in milliseconds) to block for server selection before throwing an exception. A value of 0 means that it will timeout immediately if no server is available.  A negative value means to wait indefinitely. \n         30000 \n         Any integer \n     \n     \n         heartbeatSocketTimeout \n         The socket timeout for connections used for the cluster heartbeat. A value of 0 means that it will timeout immediately if no cluster member is available.  A negative value means to wait indefinitely. \n         20000 \n         Any integer \n     \n     \n         heartbeatConnectTimeout \n         The connect timeout for connections used for the cluster heartbeat. A value of 0 means that it will timeout immediately if no cluster member is available.  A negative value means to wait indefinitely. \n         20000 \n         Any integer \n     \n     \n         heartbeatFrequency \n         Specify the interval (in milliseconds) between checks, counted from the end of the previous check until the beginning of the next one. \n         10000 \n         Any positive integer \n     \n     \n         minHeartbeatFrequency \n         Sets the minimum heartbeat frequency.  In the event that the driver has to frequently re-check a server's availability, it will wait at least this long since the previous check to avoid wasted effort. \n         500 \n         Any positive integer \n       Examples  EXAMPLE 1  @Store(type= mongodb ,mongodb.uri= mongodb://admin:admin@localhost/Foo )\n@PrimaryKey( symbol )\n@IndexBy( volume 1 {background:true,unique:true} )\ndefine table FooTable (symbol string, price float, volume long);  This will create a collection called FooTable for the events to be saved with symbol as Primary Key(unique index at mongod level) and index for the field volume will be created in ascending order with the index option to create the index in the background. Note:  @PrimaryKey: This specifies a list of comma-separated values to be treated as unique fields in the table. Each record in the table must have a unique combination of values for the fields specified here. @IndexBy: This specifies the fields that must be indexed at the database level. You can specify multiple values as a come-separated list. A single value to be in the format, ? FieldName   SortOrder   IndexOptions ? SortOrder  - ( 1) for Ascending and (-1) for Descending IndexOptions  - Index Options must be defined inside curly brackets. {} to be used for default options. Options must follow the standard mongodb index options format. Reference : https://docs.mongodb.com/manual/reference/method/db.collection.createIndex/ Example : ?symbol 1 {?unique?:true}?", 
            "title": "mongodb (Store)"
        }, 
        {
            "location": "/api/1.0.15/", 
            "text": "API Docs - v1.0.15\n\n\nStore\n\n\nmongodb \n(Store)\n\n\nUsing this extension a MongoDB Event Table can be configured to persist events in a MongoDB of user's choice.\n\n\n\nSyntax\n\n\n@Store(type=\nmongodb\n, mongodb.uri=\nSTRING\n, collection.name=\nSTRING\n, secure.connection=\nSTRING\n, trust.store=\nSTRING\n, trust.store.password=\nSTRING\n, key.store=\nSTRING\n, key.store.password=\nSTRING\n)\n@PrimaryKey(\nPRIMARY_KEY\n)\n@Index(\nINDEX\n)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \nmongodb.uri\n\n        \nThe MongoDB URI for the MongoDB data store. The uri must be of the format \nmongodb://[username:password@]host1[:port1][,hostN[:portN]][/[database][?options]]\nThe options specified in the uri will override any connection options specified in the deployment yaml file.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \ncollection.name\n\n        \nThe name of the collection in the store this Event Table should be persisted as.\n\n        \nName of the siddhi event table.\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nsecure.connection\n\n        \nDescribes enabling the SSL for the mongodb connection\n\n        \nfalse\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \ntrust.store\n\n        \nFile path to the trust store.\n\n        \n${carbon.home}/resources/security/client-truststore.jks\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \ntrust.store.password\n\n        \nPassword to access the trust store\n\n        \nwso2carbon\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nkey.store\n\n        \nFile path to the keystore.\n\n        \n${carbon.home}/resources/security/client-truststore.jks\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nkey.store.password\n\n        \nPassword to access the keystore\n\n        \nwso2carbon\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n\n\n\nSystem Parameters\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Parameters\n\n    \n\n    \n\n        \napplicationName\n\n        \nSets the logical name of the application using this MongoClient. The application name may be used by the client to identify the application to the server, for use in server logs, slow query logs, and profile collection.\n\n        \nnull\n\n        \nthe logical name of the application using this MongoClient. The UTF-8 encoding may not exceed 128 bytes.\n\n    \n\n    \n\n        \ncursorFinalizerEnabled\n\n        \nSets whether cursor finalizers are enabled.\n\n        \ntrue\n\n        \ntrue\nfalse\n\n    \n\n    \n\n        \nrequiredReplicaSetName\n\n        \nThe name of the replica set\n\n        \nnull\n\n        \nthe logical name of the replica set\n\n    \n\n    \n\n        \nsslEnabled\n\n        \nSets whether to initiate connection with TSL/SSL enabled. true: Initiate the connection with TLS/SSL. false: Initiate the connection without TLS/SSL.\n\n        \nfalse\n\n        \ntrue\nfalse\n\n    \n\n    \n\n        \ntrustStore\n\n        \nFile path to the trust store.\n\n        \n${carbon.home}/resources/security/client-truststore.jks\n\n        \nAny valid file path.\n\n    \n\n    \n\n        \ntrustStorePassword\n\n        \nPassword to access the trust store\n\n        \nwso2carbon\n\n        \nAny valid password.\n\n    \n\n    \n\n        \nkeyStore\n\n        \nFile path to the keystore.\n\n        \n${carbon.home}/resources/security/client-truststore.jks\n\n        \nAny valid file path.\n\n    \n\n    \n\n        \nkeyStorePassword\n\n        \nPassword to access the keystore\n\n        \nwso2carbon\n\n        \nAny valid password.\n\n    \n\n    \n\n        \nconnectTimeout\n\n        \nThe time in milliseconds to attempt a connection before timing out.\n\n        \n10000\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nconnectionsPerHost\n\n        \nThe maximum number of connections in the connection pool.\n\n        \n100\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nminConnectionsPerHost\n\n        \nThe minimum number of connections in the connection pool.\n\n        \n0\n\n        \nAny natural number\n\n    \n\n    \n\n        \nmaxConnectionIdleTime\n\n        \nThe maximum number of milliseconds that a connection can remain idle in the pool before being removed and closed. A zero value indicates no limit to the idle time.  A pooled connection that has exceeded its idle time will be closed and replaced when necessary by a new connection.\n\n        \n0\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nmaxWaitTime\n\n        \nThe maximum wait time in milliseconds that a thread may wait for a connection to become available. A value of 0 means that it will not wait.  A negative value means to wait indefinitely\n\n        \n120000\n\n        \nAny integer\n\n    \n\n    \n\n        \nthreadsAllowedToBlockForConnectionMultiplier\n\n        \nThe maximum number of connections allowed per host for this MongoClient instance. Those connections will be kept in a pool when idle. Once the pool is exhausted, any operation requiring a connection will block waiting for an available connection.\n\n        \n100\n\n        \nAny natural number\n\n    \n\n    \n\n        \nmaxConnectionLifeTime\n\n        \nThe maximum life time of a pooled connection.  A zero value indicates no limit to the life time.  A pooled connection that has exceeded its life time will be closed and replaced when necessary by a new connection.\n\n        \n0\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nsocketKeepAlive\n\n        \nSets whether to keep a connection alive through firewalls\n\n        \nfalse\n\n        \ntrue\nfalse\n\n    \n\n    \n\n        \nsocketTimeout\n\n        \nThe time in milliseconds to attempt a send or receive on a socket before the attempt times out. Default 0 means never to timeout.\n\n        \n0\n\n        \nAny natural integer\n\n    \n\n    \n\n        \nwriteConcern\n\n        \nThe write concern to use.\n\n        \nacknowledged\n\n        \nacknowledged\nw1\nw2\nw3\nunacknowledged\nfsynced\njournaled\nreplica_acknowledged\nnormal\nsafe\nmajority\nfsync_safe\njournal_safe\nreplicas_safe\n\n    \n\n    \n\n        \nreadConcern\n\n        \nThe level of isolation for the reads from replica sets.\n\n        \ndefault\n\n        \nlocal\nmajority\nlinearizable\n\n    \n\n    \n\n        \nreadPreference\n\n        \nSpecifies the replica set read preference for the connection.\n\n        \nprimary\n\n        \nprimary\nsecondary\nsecondarypreferred\nprimarypreferred\nnearest\n\n    \n\n    \n\n        \nlocalThreshold\n\n        \nThe size (in milliseconds) of the latency window for selecting among multiple suitable MongoDB instances.\n\n        \n15\n\n        \nAny natural number\n\n    \n\n    \n\n        \nserverSelectionTimeout\n\n        \nSpecifies how long (in milliseconds) to block for server selection before throwing an exception. A value of 0 means that it will timeout immediately if no server is available.  A negative value means to wait indefinitely.\n\n        \n30000\n\n        \nAny integer\n\n    \n\n    \n\n        \nheartbeatSocketTimeout\n\n        \nThe socket timeout for connections used for the cluster heartbeat. A value of 0 means that it will timeout immediately if no cluster member is available.  A negative value means to wait indefinitely.\n\n        \n20000\n\n        \nAny integer\n\n    \n\n    \n\n        \nheartbeatConnectTimeout\n\n        \nThe connect timeout for connections used for the cluster heartbeat. A value of 0 means that it will timeout immediately if no cluster member is available.  A negative value means to wait indefinitely.\n\n        \n20000\n\n        \nAny integer\n\n    \n\n    \n\n        \nheartbeatFrequency\n\n        \nSpecify the interval (in milliseconds) between checks, counted from the end of the previous check until the beginning of the next one.\n\n        \n10000\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nminHeartbeatFrequency\n\n        \nSets the minimum heartbeat frequency.  In the event that the driver has to frequently re-check a server's availability, it will wait at least this long since the previous check to avoid wasted effort.\n\n        \n500\n\n        \nAny positive integer\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\n@Store(type=\nmongodb\n,mongodb.uri=\nmongodb://admin:admin@localhost/Foo\n)\n@PrimaryKey(\nsymbol\n)\n@IndexBy(\nvolume 1 {background:true,unique:true}\n)\ndefine table FooTable (symbol string, price float, volume long);\n\n\n\n\n\nThis will create a collection called FooTable for the events to be saved with symbol as Primary Key(unique index at mongod level) and index for the field volume will be created in ascending order with the index option to create the index in the background.\nNote: \n@PrimaryKey: This specifies a list of comma-separated values to be treated as unique fields in the table. Each record in the table must have a unique combination of values for the fields specified here.\n@IndexBy: This specifies the fields that must be indexed at the database level. You can specify multiple values as a come-separated list. A single value to be in the format,\n?\nFieldName\n \nSortOrder\n \nIndexOptions\n?\nSortOrder\n - ( 1) for Ascending and (-1) for Descending\nIndexOptions\n - Index Options must be defined inside curly brackets. {} to be used for default options. Options must follow the standard mongodb index options format. Reference : https://docs.mongodb.com/manual/reference/method/db.collection.createIndex/\nExample : ?symbol 1 {?unique?:true}?", 
            "title": "1.0.15"
        }, 
        {
            "location": "/api/1.0.15/#api-docs-v1015", 
            "text": "", 
            "title": "API Docs - v1.0.15"
        }, 
        {
            "location": "/api/1.0.15/#store", 
            "text": "", 
            "title": "Store"
        }, 
        {
            "location": "/api/1.0.15/#mongodb-store", 
            "text": "Using this extension a MongoDB Event Table can be configured to persist events in a MongoDB of user's choice.  Syntax  @Store(type= mongodb , mongodb.uri= STRING , collection.name= STRING , secure.connection= STRING , trust.store= STRING , trust.store.password= STRING , key.store= STRING , key.store.password= STRING )\n@PrimaryKey( PRIMARY_KEY )\n@Index( INDEX )  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         mongodb.uri \n         The MongoDB URI for the MongoDB data store. The uri must be of the format  mongodb://[username:password@]host1[:port1][,hostN[:portN]][/[database][?options]] The options specified in the uri will override any connection options specified in the deployment yaml file. \n         \n         STRING \n         No \n         No \n     \n     \n         collection.name \n         The name of the collection in the store this Event Table should be persisted as. \n         Name of the siddhi event table. \n         STRING \n         Yes \n         No \n     \n     \n         secure.connection \n         Describes enabling the SSL for the mongodb connection \n         false \n         STRING \n         Yes \n         No \n     \n     \n         trust.store \n         File path to the trust store. \n         ${carbon.home}/resources/security/client-truststore.jks \n         STRING \n         Yes \n         No \n     \n     \n         trust.store.password \n         Password to access the trust store \n         wso2carbon \n         STRING \n         Yes \n         No \n     \n     \n         key.store \n         File path to the keystore. \n         ${carbon.home}/resources/security/client-truststore.jks \n         STRING \n         Yes \n         No \n     \n     \n         key.store.password \n         Password to access the keystore \n         wso2carbon \n         STRING \n         Yes \n         No \n       System Parameters  \n     \n         Name \n         Description \n         Default Value \n         Possible Parameters \n     \n     \n         applicationName \n         Sets the logical name of the application using this MongoClient. The application name may be used by the client to identify the application to the server, for use in server logs, slow query logs, and profile collection. \n         null \n         the logical name of the application using this MongoClient. The UTF-8 encoding may not exceed 128 bytes. \n     \n     \n         cursorFinalizerEnabled \n         Sets whether cursor finalizers are enabled. \n         true \n         true false \n     \n     \n         requiredReplicaSetName \n         The name of the replica set \n         null \n         the logical name of the replica set \n     \n     \n         sslEnabled \n         Sets whether to initiate connection with TSL/SSL enabled. true: Initiate the connection with TLS/SSL. false: Initiate the connection without TLS/SSL. \n         false \n         true false \n     \n     \n         trustStore \n         File path to the trust store. \n         ${carbon.home}/resources/security/client-truststore.jks \n         Any valid file path. \n     \n     \n         trustStorePassword \n         Password to access the trust store \n         wso2carbon \n         Any valid password. \n     \n     \n         keyStore \n         File path to the keystore. \n         ${carbon.home}/resources/security/client-truststore.jks \n         Any valid file path. \n     \n     \n         keyStorePassword \n         Password to access the keystore \n         wso2carbon \n         Any valid password. \n     \n     \n         connectTimeout \n         The time in milliseconds to attempt a connection before timing out. \n         10000 \n         Any positive integer \n     \n     \n         connectionsPerHost \n         The maximum number of connections in the connection pool. \n         100 \n         Any positive integer \n     \n     \n         minConnectionsPerHost \n         The minimum number of connections in the connection pool. \n         0 \n         Any natural number \n     \n     \n         maxConnectionIdleTime \n         The maximum number of milliseconds that a connection can remain idle in the pool before being removed and closed. A zero value indicates no limit to the idle time.  A pooled connection that has exceeded its idle time will be closed and replaced when necessary by a new connection. \n         0 \n         Any positive integer \n     \n     \n         maxWaitTime \n         The maximum wait time in milliseconds that a thread may wait for a connection to become available. A value of 0 means that it will not wait.  A negative value means to wait indefinitely \n         120000 \n         Any integer \n     \n     \n         threadsAllowedToBlockForConnectionMultiplier \n         The maximum number of connections allowed per host for this MongoClient instance. Those connections will be kept in a pool when idle. Once the pool is exhausted, any operation requiring a connection will block waiting for an available connection. \n         100 \n         Any natural number \n     \n     \n         maxConnectionLifeTime \n         The maximum life time of a pooled connection.  A zero value indicates no limit to the life time.  A pooled connection that has exceeded its life time will be closed and replaced when necessary by a new connection. \n         0 \n         Any positive integer \n     \n     \n         socketKeepAlive \n         Sets whether to keep a connection alive through firewalls \n         false \n         true false \n     \n     \n         socketTimeout \n         The time in milliseconds to attempt a send or receive on a socket before the attempt times out. Default 0 means never to timeout. \n         0 \n         Any natural integer \n     \n     \n         writeConcern \n         The write concern to use. \n         acknowledged \n         acknowledged w1 w2 w3 unacknowledged fsynced journaled replica_acknowledged normal safe majority fsync_safe journal_safe replicas_safe \n     \n     \n         readConcern \n         The level of isolation for the reads from replica sets. \n         default \n         local majority linearizable \n     \n     \n         readPreference \n         Specifies the replica set read preference for the connection. \n         primary \n         primary secondary secondarypreferred primarypreferred nearest \n     \n     \n         localThreshold \n         The size (in milliseconds) of the latency window for selecting among multiple suitable MongoDB instances. \n         15 \n         Any natural number \n     \n     \n         serverSelectionTimeout \n         Specifies how long (in milliseconds) to block for server selection before throwing an exception. A value of 0 means that it will timeout immediately if no server is available.  A negative value means to wait indefinitely. \n         30000 \n         Any integer \n     \n     \n         heartbeatSocketTimeout \n         The socket timeout for connections used for the cluster heartbeat. A value of 0 means that it will timeout immediately if no cluster member is available.  A negative value means to wait indefinitely. \n         20000 \n         Any integer \n     \n     \n         heartbeatConnectTimeout \n         The connect timeout for connections used for the cluster heartbeat. A value of 0 means that it will timeout immediately if no cluster member is available.  A negative value means to wait indefinitely. \n         20000 \n         Any integer \n     \n     \n         heartbeatFrequency \n         Specify the interval (in milliseconds) between checks, counted from the end of the previous check until the beginning of the next one. \n         10000 \n         Any positive integer \n     \n     \n         minHeartbeatFrequency \n         Sets the minimum heartbeat frequency.  In the event that the driver has to frequently re-check a server's availability, it will wait at least this long since the previous check to avoid wasted effort. \n         500 \n         Any positive integer \n       Examples  EXAMPLE 1  @Store(type= mongodb ,mongodb.uri= mongodb://admin:admin@localhost/Foo )\n@PrimaryKey( symbol )\n@IndexBy( volume 1 {background:true,unique:true} )\ndefine table FooTable (symbol string, price float, volume long);  This will create a collection called FooTable for the events to be saved with symbol as Primary Key(unique index at mongod level) and index for the field volume will be created in ascending order with the index option to create the index in the background. Note:  @PrimaryKey: This specifies a list of comma-separated values to be treated as unique fields in the table. Each record in the table must have a unique combination of values for the fields specified here. @IndexBy: This specifies the fields that must be indexed at the database level. You can specify multiple values as a come-separated list. A single value to be in the format, ? FieldName   SortOrder   IndexOptions ? SortOrder  - ( 1) for Ascending and (-1) for Descending IndexOptions  - Index Options must be defined inside curly brackets. {} to be used for default options. Options must follow the standard mongodb index options format. Reference : https://docs.mongodb.com/manual/reference/method/db.collection.createIndex/ Example : ?symbol 1 {?unique?:true}?", 
            "title": "mongodb (Store)"
        }, 
        {
            "location": "/api/1.0.14/", 
            "text": "API Docs - v1.0.14\n\n\nStore\n\n\nmongodb \n(Store)\n\n\nUsing this extension a MongoDB Event Table can be configured to persist events in a MongoDB of user's choice.\n\n\n\nSyntax\n\n\n@Store(type=\nmongodb\n, mongodb.uri=\nSTRING\n, collection.name=\nSTRING\n, secure.connection=\nSTRING\n, trust.store=\nSTRING\n, trust.store.password=\nSTRING\n, key.store=\nSTRING\n, key.store.password=\nSTRING\n)\n@PrimaryKey(\nPRIMARY_KEY\n)\n@Index(\nINDEX\n)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \nmongodb.uri\n\n        \nThe MongoDB URI for the MongoDB data store. The uri must be of the format \nmongodb://[username:password@]host1[:port1][,hostN[:portN]][/[database][?options]]\nThe options specified in the uri will override any connection options specified in the deployment yaml file.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \ncollection.name\n\n        \nThe name of the collection in the store this Event Table should be persisted as.\n\n        \nName of the siddhi event table.\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nsecure.connection\n\n        \nDescribes enabling the SSL for the mongodb connection\n\n        \nfalse\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \ntrust.store\n\n        \nFile path to the trust store.\n\n        \n${carbon.home}/resources/security/client-truststore.jks\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \ntrust.store.password\n\n        \nPassword to access the trust store\n\n        \nwso2carbon\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nkey.store\n\n        \nFile path to the keystore.\n\n        \n${carbon.home}/resources/security/client-truststore.jks\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nkey.store.password\n\n        \nPassword to access the keystore\n\n        \nwso2carbon\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n\n\n\nSystem Parameters\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Parameters\n\n    \n\n    \n\n        \napplicationName\n\n        \nSets the logical name of the application using this MongoClient. The application name may be used by the client to identify the application to the server, for use in server logs, slow query logs, and profile collection.\n\n        \nnull\n\n        \nthe logical name of the application using this MongoClient. The UTF-8 encoding may not exceed 128 bytes.\n\n    \n\n    \n\n        \ncursorFinalizerEnabled\n\n        \nSets whether cursor finalizers are enabled.\n\n        \ntrue\n\n        \ntrue\nfalse\n\n    \n\n    \n\n        \nrequiredReplicaSetName\n\n        \nThe name of the replica set\n\n        \nnull\n\n        \nthe logical name of the replica set\n\n    \n\n    \n\n        \nsslEnabled\n\n        \nSets whether to initiate connection with TSL/SSL enabled. true: Initiate the connection with TLS/SSL. false: Initiate the connection without TLS/SSL.\n\n        \nfalse\n\n        \ntrue\nfalse\n\n    \n\n    \n\n        \ntrustStore\n\n        \nFile path to the trust store.\n\n        \n${carbon.home}/resources/security/client-truststore.jks\n\n        \nAny valid file path.\n\n    \n\n    \n\n        \ntrustStorePassword\n\n        \nPassword to access the trust store\n\n        \nwso2carbon\n\n        \nAny valid password.\n\n    \n\n    \n\n        \nkeyStore\n\n        \nFile path to the keystore.\n\n        \n${carbon.home}/resources/security/client-truststore.jks\n\n        \nAny valid file path.\n\n    \n\n    \n\n        \nkeyStorePassword\n\n        \nPassword to access the keystore\n\n        \nwso2carbon\n\n        \nAny valid password.\n\n    \n\n    \n\n        \nconnectTimeout\n\n        \nThe time in milliseconds to attempt a connection before timing out.\n\n        \n10000\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nconnectionsPerHost\n\n        \nThe maximum number of connections in the connection pool.\n\n        \n100\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nminConnectionsPerHost\n\n        \nThe minimum number of connections in the connection pool.\n\n        \n0\n\n        \nAny natural number\n\n    \n\n    \n\n        \nmaxConnectionIdleTime\n\n        \nThe maximum number of milliseconds that a connection can remain idle in the pool before being removed and closed. A zero value indicates no limit to the idle time.  A pooled connection that has exceeded its idle time will be closed and replaced when necessary by a new connection.\n\n        \n0\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nmaxWaitTime\n\n        \nThe maximum wait time in milliseconds that a thread may wait for a connection to become available. A value of 0 means that it will not wait.  A negative value means to wait indefinitely\n\n        \n120000\n\n        \nAny integer\n\n    \n\n    \n\n        \nthreadsAllowedToBlockForConnectionMultiplier\n\n        \nThe maximum number of connections allowed per host for this MongoClient instance. Those connections will be kept in a pool when idle. Once the pool is exhausted, any operation requiring a connection will block waiting for an available connection.\n\n        \n100\n\n        \nAny natural number\n\n    \n\n    \n\n        \nmaxConnectionLifeTime\n\n        \nThe maximum life time of a pooled connection.  A zero value indicates no limit to the life time.  A pooled connection that has exceeded its life time will be closed and replaced when necessary by a new connection.\n\n        \n0\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nsocketKeepAlive\n\n        \nSets whether to keep a connection alive through firewalls\n\n        \nfalse\n\n        \ntrue\nfalse\n\n    \n\n    \n\n        \nsocketTimeout\n\n        \nThe time in milliseconds to attempt a send or receive on a socket before the attempt times out. Default 0 means never to timeout.\n\n        \n0\n\n        \nAny natural integer\n\n    \n\n    \n\n        \nwriteConcern\n\n        \nThe write concern to use.\n\n        \nacknowledged\n\n        \nacknowledged\nw1\nw2\nw3\nunacknowledged\nfsynced\njournaled\nreplica_acknowledged\nnormal\nsafe\nmajority\nfsync_safe\njournal_safe\nreplicas_safe\n\n    \n\n    \n\n        \nreadConcern\n\n        \nThe level of isolation for the reads from replica sets.\n\n        \ndefault\n\n        \nlocal\nmajority\nlinearizable\n\n    \n\n    \n\n        \nreadPreference\n\n        \nSpecifies the replica set read preference for the connection.\n\n        \nprimary\n\n        \nprimary\nsecondary\nsecondarypreferred\nprimarypreferred\nnearest\n\n    \n\n    \n\n        \nlocalThreshold\n\n        \nThe size (in milliseconds) of the latency window for selecting among multiple suitable MongoDB instances.\n\n        \n15\n\n        \nAny natural number\n\n    \n\n    \n\n        \nserverSelectionTimeout\n\n        \nSpecifies how long (in milliseconds) to block for server selection before throwing an exception. A value of 0 means that it will timeout immediately if no server is available.  A negative value means to wait indefinitely.\n\n        \n30000\n\n        \nAny integer\n\n    \n\n    \n\n        \nheartbeatSocketTimeout\n\n        \nThe socket timeout for connections used for the cluster heartbeat. A value of 0 means that it will timeout immediately if no cluster member is available.  A negative value means to wait indefinitely.\n\n        \n20000\n\n        \nAny integer\n\n    \n\n    \n\n        \nheartbeatConnectTimeout\n\n        \nThe connect timeout for connections used for the cluster heartbeat. A value of 0 means that it will timeout immediately if no cluster member is available.  A negative value means to wait indefinitely.\n\n        \n20000\n\n        \nAny integer\n\n    \n\n    \n\n        \nheartbeatFrequency\n\n        \nSpecify the interval (in milliseconds) between checks, counted from the end of the previous check until the beginning of the next one.\n\n        \n10000\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nminHeartbeatFrequency\n\n        \nSets the minimum heartbeat frequency.  In the event that the driver has to frequently re-check a server's availability, it will wait at least this long since the previous check to avoid wasted effort.\n\n        \n500\n\n        \nAny positive integer\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\n@Store(type=\nmongodb\n,mongodb.uri=\nmongodb://admin:admin@localhost/Foo\n)\n@PrimaryKey(\nsymbol\n)\n@IndexBy(\nvolume 1 {background:true,unique:true}\n)\ndefine table FooTable (symbol string, price float, volume long);\n\n\n\n\n\nThis will create a collection called FooTable for the events to be saved with symbol as Primary Key(unique index at mongod level) and index for the field volume will be created in ascending order with the index option to create the index in the background.\nNote: \n@PrimaryKey: This specifies a list of comma-separated values to be treated as unique fields in the table. Each record in the table must have a unique combination of values for the fields specified here.\n@IndexBy: This specifies the fields that must be indexed at the database level. You can specify multiple values as a come-separated list. A single value to be in the format,\n?\nFieldName\n \nSortOrder\n \nIndexOptions\n?\nSortOrder\n - ( 1) for Ascending and (-1) for Descending\nIndexOptions\n - Index Options must be defined inside curly brackets. {} to be used for default options. Options must follow the standard mongodb index options format. Reference : https://docs.mongodb.com/manual/reference/method/db.collection.createIndex/\nExample : ?symbol 1 {?unique?:true}?", 
            "title": "1.0.14"
        }, 
        {
            "location": "/api/1.0.14/#api-docs-v1014", 
            "text": "", 
            "title": "API Docs - v1.0.14"
        }, 
        {
            "location": "/api/1.0.14/#store", 
            "text": "", 
            "title": "Store"
        }, 
        {
            "location": "/api/1.0.14/#mongodb-store", 
            "text": "Using this extension a MongoDB Event Table can be configured to persist events in a MongoDB of user's choice.  Syntax  @Store(type= mongodb , mongodb.uri= STRING , collection.name= STRING , secure.connection= STRING , trust.store= STRING , trust.store.password= STRING , key.store= STRING , key.store.password= STRING )\n@PrimaryKey( PRIMARY_KEY )\n@Index( INDEX )  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         mongodb.uri \n         The MongoDB URI for the MongoDB data store. The uri must be of the format  mongodb://[username:password@]host1[:port1][,hostN[:portN]][/[database][?options]] The options specified in the uri will override any connection options specified in the deployment yaml file. \n         \n         STRING \n         No \n         No \n     \n     \n         collection.name \n         The name of the collection in the store this Event Table should be persisted as. \n         Name of the siddhi event table. \n         STRING \n         Yes \n         No \n     \n     \n         secure.connection \n         Describes enabling the SSL for the mongodb connection \n         false \n         STRING \n         Yes \n         No \n     \n     \n         trust.store \n         File path to the trust store. \n         ${carbon.home}/resources/security/client-truststore.jks \n         STRING \n         Yes \n         No \n     \n     \n         trust.store.password \n         Password to access the trust store \n         wso2carbon \n         STRING \n         Yes \n         No \n     \n     \n         key.store \n         File path to the keystore. \n         ${carbon.home}/resources/security/client-truststore.jks \n         STRING \n         Yes \n         No \n     \n     \n         key.store.password \n         Password to access the keystore \n         wso2carbon \n         STRING \n         Yes \n         No \n       System Parameters  \n     \n         Name \n         Description \n         Default Value \n         Possible Parameters \n     \n     \n         applicationName \n         Sets the logical name of the application using this MongoClient. The application name may be used by the client to identify the application to the server, for use in server logs, slow query logs, and profile collection. \n         null \n         the logical name of the application using this MongoClient. The UTF-8 encoding may not exceed 128 bytes. \n     \n     \n         cursorFinalizerEnabled \n         Sets whether cursor finalizers are enabled. \n         true \n         true false \n     \n     \n         requiredReplicaSetName \n         The name of the replica set \n         null \n         the logical name of the replica set \n     \n     \n         sslEnabled \n         Sets whether to initiate connection with TSL/SSL enabled. true: Initiate the connection with TLS/SSL. false: Initiate the connection without TLS/SSL. \n         false \n         true false \n     \n     \n         trustStore \n         File path to the trust store. \n         ${carbon.home}/resources/security/client-truststore.jks \n         Any valid file path. \n     \n     \n         trustStorePassword \n         Password to access the trust store \n         wso2carbon \n         Any valid password. \n     \n     \n         keyStore \n         File path to the keystore. \n         ${carbon.home}/resources/security/client-truststore.jks \n         Any valid file path. \n     \n     \n         keyStorePassword \n         Password to access the keystore \n         wso2carbon \n         Any valid password. \n     \n     \n         connectTimeout \n         The time in milliseconds to attempt a connection before timing out. \n         10000 \n         Any positive integer \n     \n     \n         connectionsPerHost \n         The maximum number of connections in the connection pool. \n         100 \n         Any positive integer \n     \n     \n         minConnectionsPerHost \n         The minimum number of connections in the connection pool. \n         0 \n         Any natural number \n     \n     \n         maxConnectionIdleTime \n         The maximum number of milliseconds that a connection can remain idle in the pool before being removed and closed. A zero value indicates no limit to the idle time.  A pooled connection that has exceeded its idle time will be closed and replaced when necessary by a new connection. \n         0 \n         Any positive integer \n     \n     \n         maxWaitTime \n         The maximum wait time in milliseconds that a thread may wait for a connection to become available. A value of 0 means that it will not wait.  A negative value means to wait indefinitely \n         120000 \n         Any integer \n     \n     \n         threadsAllowedToBlockForConnectionMultiplier \n         The maximum number of connections allowed per host for this MongoClient instance. Those connections will be kept in a pool when idle. Once the pool is exhausted, any operation requiring a connection will block waiting for an available connection. \n         100 \n         Any natural number \n     \n     \n         maxConnectionLifeTime \n         The maximum life time of a pooled connection.  A zero value indicates no limit to the life time.  A pooled connection that has exceeded its life time will be closed and replaced when necessary by a new connection. \n         0 \n         Any positive integer \n     \n     \n         socketKeepAlive \n         Sets whether to keep a connection alive through firewalls \n         false \n         true false \n     \n     \n         socketTimeout \n         The time in milliseconds to attempt a send or receive on a socket before the attempt times out. Default 0 means never to timeout. \n         0 \n         Any natural integer \n     \n     \n         writeConcern \n         The write concern to use. \n         acknowledged \n         acknowledged w1 w2 w3 unacknowledged fsynced journaled replica_acknowledged normal safe majority fsync_safe journal_safe replicas_safe \n     \n     \n         readConcern \n         The level of isolation for the reads from replica sets. \n         default \n         local majority linearizable \n     \n     \n         readPreference \n         Specifies the replica set read preference for the connection. \n         primary \n         primary secondary secondarypreferred primarypreferred nearest \n     \n     \n         localThreshold \n         The size (in milliseconds) of the latency window for selecting among multiple suitable MongoDB instances. \n         15 \n         Any natural number \n     \n     \n         serverSelectionTimeout \n         Specifies how long (in milliseconds) to block for server selection before throwing an exception. A value of 0 means that it will timeout immediately if no server is available.  A negative value means to wait indefinitely. \n         30000 \n         Any integer \n     \n     \n         heartbeatSocketTimeout \n         The socket timeout for connections used for the cluster heartbeat. A value of 0 means that it will timeout immediately if no cluster member is available.  A negative value means to wait indefinitely. \n         20000 \n         Any integer \n     \n     \n         heartbeatConnectTimeout \n         The connect timeout for connections used for the cluster heartbeat. A value of 0 means that it will timeout immediately if no cluster member is available.  A negative value means to wait indefinitely. \n         20000 \n         Any integer \n     \n     \n         heartbeatFrequency \n         Specify the interval (in milliseconds) between checks, counted from the end of the previous check until the beginning of the next one. \n         10000 \n         Any positive integer \n     \n     \n         minHeartbeatFrequency \n         Sets the minimum heartbeat frequency.  In the event that the driver has to frequently re-check a server's availability, it will wait at least this long since the previous check to avoid wasted effort. \n         500 \n         Any positive integer \n       Examples  EXAMPLE 1  @Store(type= mongodb ,mongodb.uri= mongodb://admin:admin@localhost/Foo )\n@PrimaryKey( symbol )\n@IndexBy( volume 1 {background:true,unique:true} )\ndefine table FooTable (symbol string, price float, volume long);  This will create a collection called FooTable for the events to be saved with symbol as Primary Key(unique index at mongod level) and index for the field volume will be created in ascending order with the index option to create the index in the background. Note:  @PrimaryKey: This specifies a list of comma-separated values to be treated as unique fields in the table. Each record in the table must have a unique combination of values for the fields specified here. @IndexBy: This specifies the fields that must be indexed at the database level. You can specify multiple values as a come-separated list. A single value to be in the format, ? FieldName   SortOrder   IndexOptions ? SortOrder  - ( 1) for Ascending and (-1) for Descending IndexOptions  - Index Options must be defined inside curly brackets. {} to be used for default options. Options must follow the standard mongodb index options format. Reference : https://docs.mongodb.com/manual/reference/method/db.collection.createIndex/ Example : ?symbol 1 {?unique?:true}?", 
            "title": "mongodb (Store)"
        }, 
        {
            "location": "/api/1.0.13/", 
            "text": "API Docs - v1.0.13\n\n\nStore\n\n\nmongodb \n(Store)\n\n\nUsing this extension a MongoDB Event Table can be configured to persist events in a MongoDB of user's choice.\n\n\n\nSyntax\n\n\n@Store(type=\nmongodb\n, mongodb.uri=\nSTRING\n, collection.name=\nSTRING\n, secure.connection=\nSTRING\n, trust.store=\nSTRING\n, trust.store.password=\nSTRING\n, key.store=\nSTRING\n, key.store.password=\nSTRING\n)\n@PrimaryKey(\nPRIMARY_KEY\n)\n@Index(\nINDEX\n)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \nmongodb.uri\n\n        \nThe MongoDB URI for the MongoDB data store. The uri must be of the format \nmongodb://[username:password@]host1[:port1][,hostN[:portN]][/[database][?options]]\nThe options specified in the uri will override any connection options specified in the deployment yaml file.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \ncollection.name\n\n        \nThe name of the collection in the store this Event Table should be persisted as.\n\n        \nName of the siddhi event table.\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nsecure.connection\n\n        \nDescribes enabling the SSL for the mongodb connection\n\n        \nfalse\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \ntrust.store\n\n        \nFile path to the trust store.\n\n        \n${carbon.home}/resources/security/client-truststore.jks\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \ntrust.store.password\n\n        \nPassword to access the trust store\n\n        \nwso2carbon\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nkey.store\n\n        \nFile path to the keystore.\n\n        \n${carbon.home}/resources/security/client-truststore.jks\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nkey.store.password\n\n        \nPassword to access the keystore\n\n        \nwso2carbon\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n\n\n\nSystem Parameters\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Parameters\n\n    \n\n    \n\n        \napplicationName\n\n        \nSets the logical name of the application using this MongoClient. The application name may be used by the client to identify the application to the server, for use in server logs, slow query logs, and profile collection.\n\n        \nnull\n\n        \nthe logical name of the application using this MongoClient. The UTF-8 encoding may not exceed 128 bytes.\n\n    \n\n    \n\n        \ncursorFinalizerEnabled\n\n        \nSets whether cursor finalizers are enabled.\n\n        \ntrue\n\n        \ntrue\nfalse\n\n    \n\n    \n\n        \nrequiredReplicaSetName\n\n        \nThe name of the replica set\n\n        \nnull\n\n        \nthe logical name of the replica set\n\n    \n\n    \n\n        \nsslEnabled\n\n        \nSets whether to initiate connection with TSL/SSL enabled. true: Initiate the connection with TLS/SSL. false: Initiate the connection without TLS/SSL.\n\n        \nfalse\n\n        \ntrue\nfalse\n\n    \n\n    \n\n        \ntrustStore\n\n        \nFile path to the trust store.\n\n        \n${carbon.home}/resources/security/client-truststore.jks\n\n        \nAny valid file path.\n\n    \n\n    \n\n        \ntrustStorePassword\n\n        \nPassword to access the trust store\n\n        \nwso2carbon\n\n        \nAny valid password.\n\n    \n\n    \n\n        \nkeyStore\n\n        \nFile path to the keystore.\n\n        \n${carbon.home}/resources/security/client-truststore.jks\n\n        \nAny valid file path.\n\n    \n\n    \n\n        \nkeyStorePassword\n\n        \nPassword to access the keystore\n\n        \nwso2carbon\n\n        \nAny valid password.\n\n    \n\n    \n\n        \nconnectTimeout\n\n        \nThe time in milliseconds to attempt a connection before timing out.\n\n        \n10000\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nconnectionsPerHost\n\n        \nThe maximum number of connections in the connection pool.\n\n        \n100\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nminConnectionsPerHost\n\n        \nThe minimum number of connections in the connection pool.\n\n        \n0\n\n        \nAny natural number\n\n    \n\n    \n\n        \nmaxConnectionIdleTime\n\n        \nThe maximum number of milliseconds that a connection can remain idle in the pool before being removed and closed. A zero value indicates no limit to the idle time.  A pooled connection that has exceeded its idle time will be closed and replaced when necessary by a new connection.\n\n        \n0\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nmaxWaitTime\n\n        \nThe maximum wait time in milliseconds that a thread may wait for a connection to become available. A value of 0 means that it will not wait.  A negative value means to wait indefinitely\n\n        \n120000\n\n        \nAny integer\n\n    \n\n    \n\n        \nthreadsAllowedToBlockForConnectionMultiplier\n\n        \nThe maximum number of connections allowed per host for this MongoClient instance. Those connections will be kept in a pool when idle. Once the pool is exhausted, any operation requiring a connection will block waiting for an available connection.\n\n        \n100\n\n        \nAny natural number\n\n    \n\n    \n\n        \nmaxConnectionLifeTime\n\n        \nThe maximum life time of a pooled connection.  A zero value indicates no limit to the life time.  A pooled connection that has exceeded its life time will be closed and replaced when necessary by a new connection.\n\n        \n0\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nsocketKeepAlive\n\n        \nSets whether to keep a connection alive through firewalls\n\n        \nfalse\n\n        \ntrue\nfalse\n\n    \n\n    \n\n        \nsocketTimeout\n\n        \nThe time in milliseconds to attempt a send or receive on a socket before the attempt times out. Default 0 means never to timeout.\n\n        \n0\n\n        \nAny natural integer\n\n    \n\n    \n\n        \nwriteConcern\n\n        \nThe write concern to use.\n\n        \nacknowledged\n\n        \nacknowledged\nw1\nw2\nw3\nunacknowledged\nfsynced\njournaled\nreplica_acknowledged\nnormal\nsafe\nmajority\nfsync_safe\njournal_safe\nreplicas_safe\n\n    \n\n    \n\n        \nreadConcern\n\n        \nThe level of isolation for the reads from replica sets.\n\n        \ndefault\n\n        \nlocal\nmajority\nlinearizable\n\n    \n\n    \n\n        \nreadPreference\n\n        \nSpecifies the replica set read preference for the connection.\n\n        \nprimary\n\n        \nprimary\nsecondary\nsecondarypreferred\nprimarypreferred\nnearest\n\n    \n\n    \n\n        \nlocalThreshold\n\n        \nThe size (in milliseconds) of the latency window for selecting among multiple suitable MongoDB instances.\n\n        \n15\n\n        \nAny natural number\n\n    \n\n    \n\n        \nserverSelectionTimeout\n\n        \nSpecifies how long (in milliseconds) to block for server selection before throwing an exception. A value of 0 means that it will timeout immediately if no server is available.  A negative value means to wait indefinitely.\n\n        \n30000\n\n        \nAny integer\n\n    \n\n    \n\n        \nheartbeatSocketTimeout\n\n        \nThe socket timeout for connections used for the cluster heartbeat. A value of 0 means that it will timeout immediately if no cluster member is available.  A negative value means to wait indefinitely.\n\n        \n20000\n\n        \nAny integer\n\n    \n\n    \n\n        \nheartbeatConnectTimeout\n\n        \nThe connect timeout for connections used for the cluster heartbeat. A value of 0 means that it will timeout immediately if no cluster member is available.  A negative value means to wait indefinitely.\n\n        \n20000\n\n        \nAny integer\n\n    \n\n    \n\n        \nheartbeatFrequency\n\n        \nSpecify the interval (in milliseconds) between checks, counted from the end of the previous check until the beginning of the next one.\n\n        \n10000\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nminHeartbeatFrequency\n\n        \nSets the minimum heartbeat frequency.  In the event that the driver has to frequently re-check a server's availability, it will wait at least this long since the previous check to avoid wasted effort.\n\n        \n500\n\n        \nAny positive integer\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\n@Store(type=\nmongodb\n,mongodb.uri=\nmongodb://admin:admin@localhost/Foo\n)\n@PrimaryKey(\nsymbol\n)\n@IndexBy(\nvolume 1 {background:true,unique:true}\n)\ndefine table FooTable (symbol string, price float, volume long);\n\n\n\n\n\nThis will create a collection called FooTable for the events to be saved with symbol as Primary Key(unique index at mongod level) and index for the field volume will be created in ascending order with the index option to create the index in the background.\nNote: \n@PrimaryKey: This specifies a list of comma-separated values to be treated as unique fields in the table. Each record in the table must have a unique combination of values for the fields specified here.\n@IndexBy: This specifies the fields that must be indexed at the database level. You can specify multiple values as a come-separated list. A single value to be in the format,\n?\nFieldName\n \nSortOrder\n \nIndexOptions\n?\nSortOrder\n - ( 1) for Ascending and (-1) for Descending\nIndexOptions\n - Index Options must be defined inside curly brackets. {} to be used for default options. Options must follow the standard mongodb index options format. Reference : https://docs.mongodb.com/manual/reference/method/db.collection.createIndex/\nExample : ?symbol 1 {?unique?:true}?", 
            "title": "1.0.13"
        }, 
        {
            "location": "/api/1.0.13/#api-docs-v1013", 
            "text": "", 
            "title": "API Docs - v1.0.13"
        }, 
        {
            "location": "/api/1.0.13/#store", 
            "text": "", 
            "title": "Store"
        }, 
        {
            "location": "/api/1.0.13/#mongodb-store", 
            "text": "Using this extension a MongoDB Event Table can be configured to persist events in a MongoDB of user's choice.  Syntax  @Store(type= mongodb , mongodb.uri= STRING , collection.name= STRING , secure.connection= STRING , trust.store= STRING , trust.store.password= STRING , key.store= STRING , key.store.password= STRING )\n@PrimaryKey( PRIMARY_KEY )\n@Index( INDEX )  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         mongodb.uri \n         The MongoDB URI for the MongoDB data store. The uri must be of the format  mongodb://[username:password@]host1[:port1][,hostN[:portN]][/[database][?options]] The options specified in the uri will override any connection options specified in the deployment yaml file. \n         \n         STRING \n         No \n         No \n     \n     \n         collection.name \n         The name of the collection in the store this Event Table should be persisted as. \n         Name of the siddhi event table. \n         STRING \n         Yes \n         No \n     \n     \n         secure.connection \n         Describes enabling the SSL for the mongodb connection \n         false \n         STRING \n         Yes \n         No \n     \n     \n         trust.store \n         File path to the trust store. \n         ${carbon.home}/resources/security/client-truststore.jks \n         STRING \n         Yes \n         No \n     \n     \n         trust.store.password \n         Password to access the trust store \n         wso2carbon \n         STRING \n         Yes \n         No \n     \n     \n         key.store \n         File path to the keystore. \n         ${carbon.home}/resources/security/client-truststore.jks \n         STRING \n         Yes \n         No \n     \n     \n         key.store.password \n         Password to access the keystore \n         wso2carbon \n         STRING \n         Yes \n         No \n       System Parameters  \n     \n         Name \n         Description \n         Default Value \n         Possible Parameters \n     \n     \n         applicationName \n         Sets the logical name of the application using this MongoClient. The application name may be used by the client to identify the application to the server, for use in server logs, slow query logs, and profile collection. \n         null \n         the logical name of the application using this MongoClient. The UTF-8 encoding may not exceed 128 bytes. \n     \n     \n         cursorFinalizerEnabled \n         Sets whether cursor finalizers are enabled. \n         true \n         true false \n     \n     \n         requiredReplicaSetName \n         The name of the replica set \n         null \n         the logical name of the replica set \n     \n     \n         sslEnabled \n         Sets whether to initiate connection with TSL/SSL enabled. true: Initiate the connection with TLS/SSL. false: Initiate the connection without TLS/SSL. \n         false \n         true false \n     \n     \n         trustStore \n         File path to the trust store. \n         ${carbon.home}/resources/security/client-truststore.jks \n         Any valid file path. \n     \n     \n         trustStorePassword \n         Password to access the trust store \n         wso2carbon \n         Any valid password. \n     \n     \n         keyStore \n         File path to the keystore. \n         ${carbon.home}/resources/security/client-truststore.jks \n         Any valid file path. \n     \n     \n         keyStorePassword \n         Password to access the keystore \n         wso2carbon \n         Any valid password. \n     \n     \n         connectTimeout \n         The time in milliseconds to attempt a connection before timing out. \n         10000 \n         Any positive integer \n     \n     \n         connectionsPerHost \n         The maximum number of connections in the connection pool. \n         100 \n         Any positive integer \n     \n     \n         minConnectionsPerHost \n         The minimum number of connections in the connection pool. \n         0 \n         Any natural number \n     \n     \n         maxConnectionIdleTime \n         The maximum number of milliseconds that a connection can remain idle in the pool before being removed and closed. A zero value indicates no limit to the idle time.  A pooled connection that has exceeded its idle time will be closed and replaced when necessary by a new connection. \n         0 \n         Any positive integer \n     \n     \n         maxWaitTime \n         The maximum wait time in milliseconds that a thread may wait for a connection to become available. A value of 0 means that it will not wait.  A negative value means to wait indefinitely \n         120000 \n         Any integer \n     \n     \n         threadsAllowedToBlockForConnectionMultiplier \n         The maximum number of connections allowed per host for this MongoClient instance. Those connections will be kept in a pool when idle. Once the pool is exhausted, any operation requiring a connection will block waiting for an available connection. \n         100 \n         Any natural number \n     \n     \n         maxConnectionLifeTime \n         The maximum life time of a pooled connection.  A zero value indicates no limit to the life time.  A pooled connection that has exceeded its life time will be closed and replaced when necessary by a new connection. \n         0 \n         Any positive integer \n     \n     \n         socketKeepAlive \n         Sets whether to keep a connection alive through firewalls \n         false \n         true false \n     \n     \n         socketTimeout \n         The time in milliseconds to attempt a send or receive on a socket before the attempt times out. Default 0 means never to timeout. \n         0 \n         Any natural integer \n     \n     \n         writeConcern \n         The write concern to use. \n         acknowledged \n         acknowledged w1 w2 w3 unacknowledged fsynced journaled replica_acknowledged normal safe majority fsync_safe journal_safe replicas_safe \n     \n     \n         readConcern \n         The level of isolation for the reads from replica sets. \n         default \n         local majority linearizable \n     \n     \n         readPreference \n         Specifies the replica set read preference for the connection. \n         primary \n         primary secondary secondarypreferred primarypreferred nearest \n     \n     \n         localThreshold \n         The size (in milliseconds) of the latency window for selecting among multiple suitable MongoDB instances. \n         15 \n         Any natural number \n     \n     \n         serverSelectionTimeout \n         Specifies how long (in milliseconds) to block for server selection before throwing an exception. A value of 0 means that it will timeout immediately if no server is available.  A negative value means to wait indefinitely. \n         30000 \n         Any integer \n     \n     \n         heartbeatSocketTimeout \n         The socket timeout for connections used for the cluster heartbeat. A value of 0 means that it will timeout immediately if no cluster member is available.  A negative value means to wait indefinitely. \n         20000 \n         Any integer \n     \n     \n         heartbeatConnectTimeout \n         The connect timeout for connections used for the cluster heartbeat. A value of 0 means that it will timeout immediately if no cluster member is available.  A negative value means to wait indefinitely. \n         20000 \n         Any integer \n     \n     \n         heartbeatFrequency \n         Specify the interval (in milliseconds) between checks, counted from the end of the previous check until the beginning of the next one. \n         10000 \n         Any positive integer \n     \n     \n         minHeartbeatFrequency \n         Sets the minimum heartbeat frequency.  In the event that the driver has to frequently re-check a server's availability, it will wait at least this long since the previous check to avoid wasted effort. \n         500 \n         Any positive integer \n       Examples  EXAMPLE 1  @Store(type= mongodb ,mongodb.uri= mongodb://admin:admin@localhost/Foo )\n@PrimaryKey( symbol )\n@IndexBy( volume 1 {background:true,unique:true} )\ndefine table FooTable (symbol string, price float, volume long);  This will create a collection called FooTable for the events to be saved with symbol as Primary Key(unique index at mongod level) and index for the field volume will be created in ascending order with the index option to create the index in the background. Note:  @PrimaryKey: This specifies a list of comma-separated values to be treated as unique fields in the table. Each record in the table must have a unique combination of values for the fields specified here. @IndexBy: This specifies the fields that must be indexed at the database level. You can specify multiple values as a come-separated list. A single value to be in the format, ? FieldName   SortOrder   IndexOptions ? SortOrder  - ( 1) for Ascending and (-1) for Descending IndexOptions  - Index Options must be defined inside curly brackets. {} to be used for default options. Options must follow the standard mongodb index options format. Reference : https://docs.mongodb.com/manual/reference/method/db.collection.createIndex/ Example : ?symbol 1 {?unique?:true}?", 
            "title": "mongodb (Store)"
        }, 
        {
            "location": "/api/1.0.12/", 
            "text": "API Docs - v1.0.12\n\n\nStore\n\n\nmongodb \n(Store)\n\n\nUsing this extension a MongoDB Event Table can be configured to persist events in a MongoDB of user's choice.\n\n\n\nSyntax\n\n\n@Store(type=\nmongodb\n, mongodb.uri=\nSTRING\n, collection.name=\nSTRING\n, secure.connection=\nSTRING\n, trust.store=\nSTRING\n, trust.store.password=\nSTRING\n, key.store=\nSTRING\n, key.store.password=\nSTRING\n)\n@PrimaryKey(\nPRIMARY_KEY\n)\n@Index(\nINDEX\n)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \nmongodb.uri\n\n        \nThe MongoDB URI for the MongoDB data store. The uri must be of the format \nmongodb://[username:password@]host1[:port1][,hostN[:portN]][/[database][?options]]\nThe options specified in the uri will override any connection options specified in the deployment yaml file.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \ncollection.name\n\n        \nThe name of the collection in the store this Event Table should be persisted as.\n\n        \nName of the siddhi event table.\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nsecure.connection\n\n        \nDescribes enabling the SSL for the mongodb connection\n\n        \nfalse\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \ntrust.store\n\n        \nFile path to the trust store.\n\n        \n${carbon.home}/resources/security/client-truststore.jks\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \ntrust.store.password\n\n        \nPassword to access the trust store\n\n        \nwso2carbon\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nkey.store\n\n        \nFile path to the keystore.\n\n        \n${carbon.home}/resources/security/client-truststore.jks\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nkey.store.password\n\n        \nPassword to access the keystore\n\n        \nwso2carbon\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n\n\n\nSystem Parameters\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Parameters\n\n    \n\n    \n\n        \napplicationName\n\n        \nSets the logical name of the application using this MongoClient. The application name may be used by the client to identify the application to the server, for use in server logs, slow query logs, and profile collection.\n\n        \nnull\n\n        \nthe logical name of the application using this MongoClient. The UTF-8 encoding may not exceed 128 bytes.\n\n    \n\n    \n\n        \ncursorFinalizerEnabled\n\n        \nSets whether cursor finalizers are enabled.\n\n        \ntrue\n\n        \ntrue\nfalse\n\n    \n\n    \n\n        \nrequiredReplicaSetName\n\n        \nThe name of the replica set\n\n        \nnull\n\n        \nthe logical name of the replica set\n\n    \n\n    \n\n        \nsslEnabled\n\n        \nSets whether to initiate connection with TSL/SSL enabled. true: Initiate the connection with TLS/SSL. false: Initiate the connection without TLS/SSL.\n\n        \nfalse\n\n        \ntrue\nfalse\n\n    \n\n    \n\n        \ntrustStore\n\n        \nFile path to the trust store.\n\n        \n${carbon.home}/resources/security/client-truststore.jks\n\n        \nAny valid file path.\n\n    \n\n    \n\n        \ntrustStorePassword\n\n        \nPassword to access the trust store\n\n        \nwso2carbon\n\n        \nAny valid password.\n\n    \n\n    \n\n        \nkeyStore\n\n        \nFile path to the keystore.\n\n        \n${carbon.home}/resources/security/client-truststore.jks\n\n        \nAny valid file path.\n\n    \n\n    \n\n        \nkeyStorePassword\n\n        \nPassword to access the keystore\n\n        \nwso2carbon\n\n        \nAny valid password.\n\n    \n\n    \n\n        \nconnectTimeout\n\n        \nThe time in milliseconds to attempt a connection before timing out.\n\n        \n10000\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nconnectionsPerHost\n\n        \nThe maximum number of connections in the connection pool.\n\n        \n100\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nminConnectionsPerHost\n\n        \nThe minimum number of connections in the connection pool.\n\n        \n0\n\n        \nAny natural number\n\n    \n\n    \n\n        \nmaxConnectionIdleTime\n\n        \nThe maximum number of milliseconds that a connection can remain idle in the pool before being removed and closed. A zero value indicates no limit to the idle time.  A pooled connection that has exceeded its idle time will be closed and replaced when necessary by a new connection.\n\n        \n0\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nmaxWaitTime\n\n        \nThe maximum wait time in milliseconds that a thread may wait for a connection to become available. A value of 0 means that it will not wait.  A negative value means to wait indefinitely\n\n        \n120000\n\n        \nAny integer\n\n    \n\n    \n\n        \nthreadsAllowedToBlockForConnectionMultiplier\n\n        \nThe maximum number of connections allowed per host for this MongoClient instance. Those connections will be kept in a pool when idle. Once the pool is exhausted, any operation requiring a connection will block waiting for an available connection.\n\n        \n100\n\n        \nAny natural number\n\n    \n\n    \n\n        \nmaxConnectionLifeTime\n\n        \nThe maximum life time of a pooled connection.  A zero value indicates no limit to the life time.  A pooled connection that has exceeded its life time will be closed and replaced when necessary by a new connection.\n\n        \n0\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nsocketKeepAlive\n\n        \nSets whether to keep a connection alive through firewalls\n\n        \nfalse\n\n        \ntrue\nfalse\n\n    \n\n    \n\n        \nsocketTimeout\n\n        \nThe time in milliseconds to attempt a send or receive on a socket before the attempt times out. Default 0 means never to timeout.\n\n        \n0\n\n        \nAny natural integer\n\n    \n\n    \n\n        \nwriteConcern\n\n        \nThe write concern to use.\n\n        \nacknowledged\n\n        \nacknowledged\nw1\nw2\nw3\nunacknowledged\nfsynced\njournaled\nreplica_acknowledged\nnormal\nsafe\nmajority\nfsync_safe\njournal_safe\nreplicas_safe\n\n    \n\n    \n\n        \nreadConcern\n\n        \nThe level of isolation for the reads from replica sets.\n\n        \ndefault\n\n        \nlocal\nmajority\nlinearizable\n\n    \n\n    \n\n        \nreadPreference\n\n        \nSpecifies the replica set read preference for the connection.\n\n        \nprimary\n\n        \nprimary\nsecondary\nsecondarypreferred\nprimarypreferred\nnearest\n\n    \n\n    \n\n        \nlocalThreshold\n\n        \nThe size (in milliseconds) of the latency window for selecting among multiple suitable MongoDB instances.\n\n        \n15\n\n        \nAny natural number\n\n    \n\n    \n\n        \nserverSelectionTimeout\n\n        \nSpecifies how long (in milliseconds) to block for server selection before throwing an exception. A value of 0 means that it will timeout immediately if no server is available.  A negative value means to wait indefinitely.\n\n        \n30000\n\n        \nAny integer\n\n    \n\n    \n\n        \nheartbeatSocketTimeout\n\n        \nThe socket timeout for connections used for the cluster heartbeat. A value of 0 means that it will timeout immediately if no cluster member is available.  A negative value means to wait indefinitely.\n\n        \n20000\n\n        \nAny integer\n\n    \n\n    \n\n        \nheartbeatConnectTimeout\n\n        \nThe connect timeout for connections used for the cluster heartbeat. A value of 0 means that it will timeout immediately if no cluster member is available.  A negative value means to wait indefinitely.\n\n        \n20000\n\n        \nAny integer\n\n    \n\n    \n\n        \nheartbeatFrequency\n\n        \nSpecify the interval (in milliseconds) between checks, counted from the end of the previous check until the beginning of the next one.\n\n        \n10000\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nminHeartbeatFrequency\n\n        \nSets the minimum heartbeat frequency.  In the event that the driver has to frequently re-check a server's availability, it will wait at least this long since the previous check to avoid wasted effort.\n\n        \n500\n\n        \nAny positive integer\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\n@Store(type=\nmongodb\n,mongodb.uri=\nmongodb://admin:admin@localhost/Foo\n)\n@PrimaryKey(\nsymbol\n)\n@IndexBy(\nvolume 1 {background:true,unique:true}\n)\ndefine table FooTable (symbol string, price float, volume long);\n\n\n\n\n\nThis will create a collection called FooTable for the events to be saved with symbol as Primary Key(unique index at mongod level) and index for the field volume will be created in ascending order with the index option to create the index in the background.\nNote: \n@PrimaryKey: This specifies a list of comma-separated values to be treated as unique fields in the table. Each record in the table must have a unique combination of values for the fields specified here.\n@IndexBy: This specifies the fields that must be indexed at the database level. You can specify multiple values as a come-separated list. A single value to be in the format,\n?\nFieldName\n \nSortOrder\n \nIndexOptions\n?\nSortOrder\n - ( 1) for Ascending and (-1) for Descending\nIndexOptions\n - Index Options must be defined inside curly brackets. {} to be used for default options. Options must follow the standard mongodb index options format. Reference : https://docs.mongodb.com/manual/reference/method/db.collection.createIndex/\nExample : ?symbol 1 {?unique?:true}?", 
            "title": "1.0.12"
        }, 
        {
            "location": "/api/1.0.12/#api-docs-v1012", 
            "text": "", 
            "title": "API Docs - v1.0.12"
        }, 
        {
            "location": "/api/1.0.12/#store", 
            "text": "", 
            "title": "Store"
        }, 
        {
            "location": "/api/1.0.12/#mongodb-store", 
            "text": "Using this extension a MongoDB Event Table can be configured to persist events in a MongoDB of user's choice.  Syntax  @Store(type= mongodb , mongodb.uri= STRING , collection.name= STRING , secure.connection= STRING , trust.store= STRING , trust.store.password= STRING , key.store= STRING , key.store.password= STRING )\n@PrimaryKey( PRIMARY_KEY )\n@Index( INDEX )  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         mongodb.uri \n         The MongoDB URI for the MongoDB data store. The uri must be of the format  mongodb://[username:password@]host1[:port1][,hostN[:portN]][/[database][?options]] The options specified in the uri will override any connection options specified in the deployment yaml file. \n         \n         STRING \n         No \n         No \n     \n     \n         collection.name \n         The name of the collection in the store this Event Table should be persisted as. \n         Name of the siddhi event table. \n         STRING \n         Yes \n         No \n     \n     \n         secure.connection \n         Describes enabling the SSL for the mongodb connection \n         false \n         STRING \n         Yes \n         No \n     \n     \n         trust.store \n         File path to the trust store. \n         ${carbon.home}/resources/security/client-truststore.jks \n         STRING \n         Yes \n         No \n     \n     \n         trust.store.password \n         Password to access the trust store \n         wso2carbon \n         STRING \n         Yes \n         No \n     \n     \n         key.store \n         File path to the keystore. \n         ${carbon.home}/resources/security/client-truststore.jks \n         STRING \n         Yes \n         No \n     \n     \n         key.store.password \n         Password to access the keystore \n         wso2carbon \n         STRING \n         Yes \n         No \n       System Parameters  \n     \n         Name \n         Description \n         Default Value \n         Possible Parameters \n     \n     \n         applicationName \n         Sets the logical name of the application using this MongoClient. The application name may be used by the client to identify the application to the server, for use in server logs, slow query logs, and profile collection. \n         null \n         the logical name of the application using this MongoClient. The UTF-8 encoding may not exceed 128 bytes. \n     \n     \n         cursorFinalizerEnabled \n         Sets whether cursor finalizers are enabled. \n         true \n         true false \n     \n     \n         requiredReplicaSetName \n         The name of the replica set \n         null \n         the logical name of the replica set \n     \n     \n         sslEnabled \n         Sets whether to initiate connection with TSL/SSL enabled. true: Initiate the connection with TLS/SSL. false: Initiate the connection without TLS/SSL. \n         false \n         true false \n     \n     \n         trustStore \n         File path to the trust store. \n         ${carbon.home}/resources/security/client-truststore.jks \n         Any valid file path. \n     \n     \n         trustStorePassword \n         Password to access the trust store \n         wso2carbon \n         Any valid password. \n     \n     \n         keyStore \n         File path to the keystore. \n         ${carbon.home}/resources/security/client-truststore.jks \n         Any valid file path. \n     \n     \n         keyStorePassword \n         Password to access the keystore \n         wso2carbon \n         Any valid password. \n     \n     \n         connectTimeout \n         The time in milliseconds to attempt a connection before timing out. \n         10000 \n         Any positive integer \n     \n     \n         connectionsPerHost \n         The maximum number of connections in the connection pool. \n         100 \n         Any positive integer \n     \n     \n         minConnectionsPerHost \n         The minimum number of connections in the connection pool. \n         0 \n         Any natural number \n     \n     \n         maxConnectionIdleTime \n         The maximum number of milliseconds that a connection can remain idle in the pool before being removed and closed. A zero value indicates no limit to the idle time.  A pooled connection that has exceeded its idle time will be closed and replaced when necessary by a new connection. \n         0 \n         Any positive integer \n     \n     \n         maxWaitTime \n         The maximum wait time in milliseconds that a thread may wait for a connection to become available. A value of 0 means that it will not wait.  A negative value means to wait indefinitely \n         120000 \n         Any integer \n     \n     \n         threadsAllowedToBlockForConnectionMultiplier \n         The maximum number of connections allowed per host for this MongoClient instance. Those connections will be kept in a pool when idle. Once the pool is exhausted, any operation requiring a connection will block waiting for an available connection. \n         100 \n         Any natural number \n     \n     \n         maxConnectionLifeTime \n         The maximum life time of a pooled connection.  A zero value indicates no limit to the life time.  A pooled connection that has exceeded its life time will be closed and replaced when necessary by a new connection. \n         0 \n         Any positive integer \n     \n     \n         socketKeepAlive \n         Sets whether to keep a connection alive through firewalls \n         false \n         true false \n     \n     \n         socketTimeout \n         The time in milliseconds to attempt a send or receive on a socket before the attempt times out. Default 0 means never to timeout. \n         0 \n         Any natural integer \n     \n     \n         writeConcern \n         The write concern to use. \n         acknowledged \n         acknowledged w1 w2 w3 unacknowledged fsynced journaled replica_acknowledged normal safe majority fsync_safe journal_safe replicas_safe \n     \n     \n         readConcern \n         The level of isolation for the reads from replica sets. \n         default \n         local majority linearizable \n     \n     \n         readPreference \n         Specifies the replica set read preference for the connection. \n         primary \n         primary secondary secondarypreferred primarypreferred nearest \n     \n     \n         localThreshold \n         The size (in milliseconds) of the latency window for selecting among multiple suitable MongoDB instances. \n         15 \n         Any natural number \n     \n     \n         serverSelectionTimeout \n         Specifies how long (in milliseconds) to block for server selection before throwing an exception. A value of 0 means that it will timeout immediately if no server is available.  A negative value means to wait indefinitely. \n         30000 \n         Any integer \n     \n     \n         heartbeatSocketTimeout \n         The socket timeout for connections used for the cluster heartbeat. A value of 0 means that it will timeout immediately if no cluster member is available.  A negative value means to wait indefinitely. \n         20000 \n         Any integer \n     \n     \n         heartbeatConnectTimeout \n         The connect timeout for connections used for the cluster heartbeat. A value of 0 means that it will timeout immediately if no cluster member is available.  A negative value means to wait indefinitely. \n         20000 \n         Any integer \n     \n     \n         heartbeatFrequency \n         Specify the interval (in milliseconds) between checks, counted from the end of the previous check until the beginning of the next one. \n         10000 \n         Any positive integer \n     \n     \n         minHeartbeatFrequency \n         Sets the minimum heartbeat frequency.  In the event that the driver has to frequently re-check a server's availability, it will wait at least this long since the previous check to avoid wasted effort. \n         500 \n         Any positive integer \n       Examples  EXAMPLE 1  @Store(type= mongodb ,mongodb.uri= mongodb://admin:admin@localhost/Foo )\n@PrimaryKey( symbol )\n@IndexBy( volume 1 {background:true,unique:true} )\ndefine table FooTable (symbol string, price float, volume long);  This will create a collection called FooTable for the events to be saved with symbol as Primary Key(unique index at mongod level) and index for the field volume will be created in ascending order with the index option to create the index in the background. Note:  @PrimaryKey: This specifies a list of comma-separated values to be treated as unique fields in the table. Each record in the table must have a unique combination of values for the fields specified here. @IndexBy: This specifies the fields that must be indexed at the database level. You can specify multiple values as a come-separated list. A single value to be in the format, ? FieldName   SortOrder   IndexOptions ? SortOrder  - ( 1) for Ascending and (-1) for Descending IndexOptions  - Index Options must be defined inside curly brackets. {} to be used for default options. Options must follow the standard mongodb index options format. Reference : https://docs.mongodb.com/manual/reference/method/db.collection.createIndex/ Example : ?symbol 1 {?unique?:true}?", 
            "title": "mongodb (Store)"
        }, 
        {
            "location": "/api/1.0.11/", 
            "text": "API Docs - v1.0.11\n\n\nStore\n\n\nmongodb \n(Store)\n\n\nUsing this extension a MongoDB Event Table can be configured to persist events in a MongoDB of user's choice.\n\n\n\nSyntax\n\n\n@Store(type=\nmongodb\n, mongodb.uri=\nSTRING\n, collection.name=\nSTRING\n, secure.connection=\nSTRING\n, trust.store=\nSTRING\n, trust.store.password=\nSTRING\n, key.store=\nSTRING\n, key.store.password=\nSTRING\n)\n@PrimaryKey(\nPRIMARY_KEY\n)\n@Index(\nINDEX\n)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \nmongodb.uri\n\n        \nThe MongoDB URI for the MongoDB data store. The uri must be of the format \nmongodb://[username:password@]host1[:port1][,hostN[:portN]][/[database][?options]]\nThe options specified in the uri will override any connection options specified in the deployment yaml file.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \ncollection.name\n\n        \nThe name of the collection in the store this Event Table should be persisted as.\n\n        \nName of the siddhi event table.\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nsecure.connection\n\n        \nDescribes enabling the SSL for the mongodb connection\n\n        \nfalse\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \ntrust.store\n\n        \nFile path to the trust store.\n\n        \n${carbon.home}/resources/security/client-truststore.jks\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \ntrust.store.password\n\n        \nPassword to access the trust store\n\n        \nwso2carbon\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nkey.store\n\n        \nFile path to the keystore.\n\n        \n${carbon.home}/resources/security/client-truststore.jks\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nkey.store.password\n\n        \nPassword to access the keystore\n\n        \nwso2carbon\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n\n\n\nSystem Parameters\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Parameters\n\n    \n\n    \n\n        \napplicationName\n\n        \nSets the logical name of the application using this MongoClient. The application name may be used by the client to identify the application to the server, for use in server logs, slow query logs, and profile collection.\n\n        \nnull\n\n        \nthe logical name of the application using this MongoClient. The UTF-8 encoding may not exceed 128 bytes.\n\n    \n\n    \n\n        \ncursorFinalizerEnabled\n\n        \nSets whether cursor finalizers are enabled.\n\n        \ntrue\n\n        \ntrue\nfalse\n\n    \n\n    \n\n        \nrequiredReplicaSetName\n\n        \nThe name of the replica set\n\n        \nnull\n\n        \nthe logical name of the replica set\n\n    \n\n    \n\n        \nsslEnabled\n\n        \nSets whether to initiate connection with TSL/SSL enabled. true: Initiate the connection with TLS/SSL. false: Initiate the connection without TLS/SSL.\n\n        \nfalse\n\n        \ntrue\nfalse\n\n    \n\n    \n\n        \ntrustStore\n\n        \nFile path to the trust store.\n\n        \n${carbon.home}/resources/security/client-truststore.jks\n\n        \nAny valid file path.\n\n    \n\n    \n\n        \ntrustStorePassword\n\n        \nPassword to access the trust store\n\n        \nwso2carbon\n\n        \nAny valid password.\n\n    \n\n    \n\n        \nkeyStore\n\n        \nFile path to the keystore.\n\n        \n${carbon.home}/resources/security/client-truststore.jks\n\n        \nAny valid file path.\n\n    \n\n    \n\n        \nkeyStorePassword\n\n        \nPassword to access the keystore\n\n        \nwso2carbon\n\n        \nAny valid password.\n\n    \n\n    \n\n        \nconnectTimeout\n\n        \nThe time in milliseconds to attempt a connection before timing out.\n\n        \n10000\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nconnectionsPerHost\n\n        \nThe maximum number of connections in the connection pool.\n\n        \n100\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nminConnectionsPerHost\n\n        \nThe minimum number of connections in the connection pool.\n\n        \n0\n\n        \nAny natural number\n\n    \n\n    \n\n        \nmaxConnectionIdleTime\n\n        \nThe maximum number of milliseconds that a connection can remain idle in the pool before being removed and closed. A zero value indicates no limit to the idle time.  A pooled connection that has exceeded its idle time will be closed and replaced when necessary by a new connection.\n\n        \n0\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nmaxWaitTime\n\n        \nThe maximum wait time in milliseconds that a thread may wait for a connection to become available. A value of 0 means that it will not wait.  A negative value means to wait indefinitely\n\n        \n120000\n\n        \nAny integer\n\n    \n\n    \n\n        \nthreadsAllowedToBlockForConnectionMultiplier\n\n        \nThe maximum number of connections allowed per host for this MongoClient instance. Those connections will be kept in a pool when idle. Once the pool is exhausted, any operation requiring a connection will block waiting for an available connection.\n\n        \n100\n\n        \nAny natural number\n\n    \n\n    \n\n        \nmaxConnectionLifeTime\n\n        \nThe maximum life time of a pooled connection.  A zero value indicates no limit to the life time.  A pooled connection that has exceeded its life time will be closed and replaced when necessary by a new connection.\n\n        \n0\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nsocketKeepAlive\n\n        \nSets whether to keep a connection alive through firewalls\n\n        \nfalse\n\n        \ntrue\nfalse\n\n    \n\n    \n\n        \nsocketTimeout\n\n        \nThe time in milliseconds to attempt a send or receive on a socket before the attempt times out. Default 0 means never to timeout.\n\n        \n0\n\n        \nAny natural integer\n\n    \n\n    \n\n        \nwriteConcern\n\n        \nThe write concern to use.\n\n        \nacknowledged\n\n        \nacknowledged\nw1\nw2\nw3\nunacknowledged\nfsynced\njournaled\nreplica_acknowledged\nnormal\nsafe\nmajority\nfsync_safe\njournal_safe\nreplicas_safe\n\n    \n\n    \n\n        \nreadConcern\n\n        \nThe level of isolation for the reads from replica sets.\n\n        \ndefault\n\n        \nlocal\nmajority\nlinearizable\n\n    \n\n    \n\n        \nreadPreference\n\n        \nSpecifies the replica set read preference for the connection.\n\n        \nprimary\n\n        \nprimary\nsecondary\nsecondarypreferred\nprimarypreferred\nnearest\n\n    \n\n    \n\n        \nlocalThreshold\n\n        \nThe size (in milliseconds) of the latency window for selecting among multiple suitable MongoDB instances.\n\n        \n15\n\n        \nAny natural number\n\n    \n\n    \n\n        \nserverSelectionTimeout\n\n        \nSpecifies how long (in milliseconds) to block for server selection before throwing an exception. A value of 0 means that it will timeout immediately if no server is available.  A negative value means to wait indefinitely.\n\n        \n30000\n\n        \nAny integer\n\n    \n\n    \n\n        \nheartbeatSocketTimeout\n\n        \nThe socket timeout for connections used for the cluster heartbeat. A value of 0 means that it will timeout immediately if no cluster member is available.  A negative value means to wait indefinitely.\n\n        \n20000\n\n        \nAny integer\n\n    \n\n    \n\n        \nheartbeatConnectTimeout\n\n        \nThe connect timeout for connections used for the cluster heartbeat. A value of 0 means that it will timeout immediately if no cluster member is available.  A negative value means to wait indefinitely.\n\n        \n20000\n\n        \nAny integer\n\n    \n\n    \n\n        \nheartbeatFrequency\n\n        \nSpecify the interval (in milliseconds) between checks, counted from the end of the previous check until the beginning of the next one.\n\n        \n10000\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nminHeartbeatFrequency\n\n        \nSets the minimum heartbeat frequency.  In the event that the driver has to frequently re-check a server's availability, it will wait at least this long since the previous check to avoid wasted effort.\n\n        \n500\n\n        \nAny positive integer\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\n@Store(type=\nmongodb\n,mongodb.uri=\nmongodb://admin:admin@localhost/Foo\n)\n@PrimaryKey(\nsymbol\n)\n@IndexBy(\nvolume 1 {background:true,unique:true}\n)\ndefine table FooTable (symbol string, price float, volume long);\n\n\n\n\n\nThis will create a collection called FooTable for the events to be saved with symbol as Primary Key(unique index at mongod level) and index for the field volume will be created in ascending order with the index option to create the index in the background.\nNote: \n@PrimaryKey: This specifies a list of comma-separated values to be treated as unique fields in the table. Each record in the table must have a unique combination of values for the fields specified here.\n@IndexBy: This specifies the fields that must be indexed at the database level. You can specify multiple values as a come-separated list. A single value to be in the format,\n?\nFieldName\n \nSortOrder\n \nIndexOptions\n?\nSortOrder\n - ( 1) for Ascending and (-1) for Descending\nIndexOptions\n - Index Options must be defined inside curly brackets. {} to be used for default options. Options must follow the standard mongodb index options format. Reference : https://docs.mongodb.com/manual/reference/method/db.collection.createIndex/\nExample : ?symbol 1 {?unique?:true}?", 
            "title": "1.0.11"
        }, 
        {
            "location": "/api/1.0.11/#api-docs-v1011", 
            "text": "", 
            "title": "API Docs - v1.0.11"
        }, 
        {
            "location": "/api/1.0.11/#store", 
            "text": "", 
            "title": "Store"
        }, 
        {
            "location": "/api/1.0.11/#mongodb-store", 
            "text": "Using this extension a MongoDB Event Table can be configured to persist events in a MongoDB of user's choice.  Syntax  @Store(type= mongodb , mongodb.uri= STRING , collection.name= STRING , secure.connection= STRING , trust.store= STRING , trust.store.password= STRING , key.store= STRING , key.store.password= STRING )\n@PrimaryKey( PRIMARY_KEY )\n@Index( INDEX )  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         mongodb.uri \n         The MongoDB URI for the MongoDB data store. The uri must be of the format  mongodb://[username:password@]host1[:port1][,hostN[:portN]][/[database][?options]] The options specified in the uri will override any connection options specified in the deployment yaml file. \n         \n         STRING \n         No \n         No \n     \n     \n         collection.name \n         The name of the collection in the store this Event Table should be persisted as. \n         Name of the siddhi event table. \n         STRING \n         Yes \n         No \n     \n     \n         secure.connection \n         Describes enabling the SSL for the mongodb connection \n         false \n         STRING \n         Yes \n         No \n     \n     \n         trust.store \n         File path to the trust store. \n         ${carbon.home}/resources/security/client-truststore.jks \n         STRING \n         Yes \n         No \n     \n     \n         trust.store.password \n         Password to access the trust store \n         wso2carbon \n         STRING \n         Yes \n         No \n     \n     \n         key.store \n         File path to the keystore. \n         ${carbon.home}/resources/security/client-truststore.jks \n         STRING \n         Yes \n         No \n     \n     \n         key.store.password \n         Password to access the keystore \n         wso2carbon \n         STRING \n         Yes \n         No \n       System Parameters  \n     \n         Name \n         Description \n         Default Value \n         Possible Parameters \n     \n     \n         applicationName \n         Sets the logical name of the application using this MongoClient. The application name may be used by the client to identify the application to the server, for use in server logs, slow query logs, and profile collection. \n         null \n         the logical name of the application using this MongoClient. The UTF-8 encoding may not exceed 128 bytes. \n     \n     \n         cursorFinalizerEnabled \n         Sets whether cursor finalizers are enabled. \n         true \n         true false \n     \n     \n         requiredReplicaSetName \n         The name of the replica set \n         null \n         the logical name of the replica set \n     \n     \n         sslEnabled \n         Sets whether to initiate connection with TSL/SSL enabled. true: Initiate the connection with TLS/SSL. false: Initiate the connection without TLS/SSL. \n         false \n         true false \n     \n     \n         trustStore \n         File path to the trust store. \n         ${carbon.home}/resources/security/client-truststore.jks \n         Any valid file path. \n     \n     \n         trustStorePassword \n         Password to access the trust store \n         wso2carbon \n         Any valid password. \n     \n     \n         keyStore \n         File path to the keystore. \n         ${carbon.home}/resources/security/client-truststore.jks \n         Any valid file path. \n     \n     \n         keyStorePassword \n         Password to access the keystore \n         wso2carbon \n         Any valid password. \n     \n     \n         connectTimeout \n         The time in milliseconds to attempt a connection before timing out. \n         10000 \n         Any positive integer \n     \n     \n         connectionsPerHost \n         The maximum number of connections in the connection pool. \n         100 \n         Any positive integer \n     \n     \n         minConnectionsPerHost \n         The minimum number of connections in the connection pool. \n         0 \n         Any natural number \n     \n     \n         maxConnectionIdleTime \n         The maximum number of milliseconds that a connection can remain idle in the pool before being removed and closed. A zero value indicates no limit to the idle time.  A pooled connection that has exceeded its idle time will be closed and replaced when necessary by a new connection. \n         0 \n         Any positive integer \n     \n     \n         maxWaitTime \n         The maximum wait time in milliseconds that a thread may wait for a connection to become available. A value of 0 means that it will not wait.  A negative value means to wait indefinitely \n         120000 \n         Any integer \n     \n     \n         threadsAllowedToBlockForConnectionMultiplier \n         The maximum number of connections allowed per host for this MongoClient instance. Those connections will be kept in a pool when idle. Once the pool is exhausted, any operation requiring a connection will block waiting for an available connection. \n         100 \n         Any natural number \n     \n     \n         maxConnectionLifeTime \n         The maximum life time of a pooled connection.  A zero value indicates no limit to the life time.  A pooled connection that has exceeded its life time will be closed and replaced when necessary by a new connection. \n         0 \n         Any positive integer \n     \n     \n         socketKeepAlive \n         Sets whether to keep a connection alive through firewalls \n         false \n         true false \n     \n     \n         socketTimeout \n         The time in milliseconds to attempt a send or receive on a socket before the attempt times out. Default 0 means never to timeout. \n         0 \n         Any natural integer \n     \n     \n         writeConcern \n         The write concern to use. \n         acknowledged \n         acknowledged w1 w2 w3 unacknowledged fsynced journaled replica_acknowledged normal safe majority fsync_safe journal_safe replicas_safe \n     \n     \n         readConcern \n         The level of isolation for the reads from replica sets. \n         default \n         local majority linearizable \n     \n     \n         readPreference \n         Specifies the replica set read preference for the connection. \n         primary \n         primary secondary secondarypreferred primarypreferred nearest \n     \n     \n         localThreshold \n         The size (in milliseconds) of the latency window for selecting among multiple suitable MongoDB instances. \n         15 \n         Any natural number \n     \n     \n         serverSelectionTimeout \n         Specifies how long (in milliseconds) to block for server selection before throwing an exception. A value of 0 means that it will timeout immediately if no server is available.  A negative value means to wait indefinitely. \n         30000 \n         Any integer \n     \n     \n         heartbeatSocketTimeout \n         The socket timeout for connections used for the cluster heartbeat. A value of 0 means that it will timeout immediately if no cluster member is available.  A negative value means to wait indefinitely. \n         20000 \n         Any integer \n     \n     \n         heartbeatConnectTimeout \n         The connect timeout for connections used for the cluster heartbeat. A value of 0 means that it will timeout immediately if no cluster member is available.  A negative value means to wait indefinitely. \n         20000 \n         Any integer \n     \n     \n         heartbeatFrequency \n         Specify the interval (in milliseconds) between checks, counted from the end of the previous check until the beginning of the next one. \n         10000 \n         Any positive integer \n     \n     \n         minHeartbeatFrequency \n         Sets the minimum heartbeat frequency.  In the event that the driver has to frequently re-check a server's availability, it will wait at least this long since the previous check to avoid wasted effort. \n         500 \n         Any positive integer \n       Examples  EXAMPLE 1  @Store(type= mongodb ,mongodb.uri= mongodb://admin:admin@localhost/Foo )\n@PrimaryKey( symbol )\n@IndexBy( volume 1 {background:true,unique:true} )\ndefine table FooTable (symbol string, price float, volume long);  This will create a collection called FooTable for the events to be saved with symbol as Primary Key(unique index at mongod level) and index for the field volume will be created in ascending order with the index option to create the index in the background. Note:  @PrimaryKey: This specifies a list of comma-separated values to be treated as unique fields in the table. Each record in the table must have a unique combination of values for the fields specified here. @IndexBy: This specifies the fields that must be indexed at the database level. You can specify multiple values as a come-separated list. A single value to be in the format, ? FieldName   SortOrder   IndexOptions ? SortOrder  - ( 1) for Ascending and (-1) for Descending IndexOptions  - Index Options must be defined inside curly brackets. {} to be used for default options. Options must follow the standard mongodb index options format. Reference : https://docs.mongodb.com/manual/reference/method/db.collection.createIndex/ Example : ?symbol 1 {?unique?:true}?", 
            "title": "mongodb (Store)"
        }, 
        {
            "location": "/api/1.0.10/", 
            "text": "API Docs - v1.0.10\n\n\nStore\n\n\nmongodb \n(Store)\n\n\nUsing this extension a MongoDB Event Table can be configured to persist events in a MongoDB of user's choice.\n\n\n\nSyntax\n\n\n@Store(type=\nmongodb\n, mongodb.uri=\nSTRING\n, collection.name=\nSTRING\n, secure.connection=\nSTRING\n, trust.store=\nSTRING\n, trust.store.password=\nSTRING\n, key.store=\nSTRING\n, key.store.password=\nSTRING\n)\n@PrimaryKey(\nPRIMARY_KEY\n)\n@Index(\nINDEX\n)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \nmongodb.uri\n\n        \nThe MongoDB URI for the MongoDB data store. The uri must be of the format \nmongodb://[username:password@]host1[:port1][,hostN[:portN]][/[database][?options]]\nThe options specified in the uri will override any connection options specified in the deployment yaml file.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \ncollection.name\n\n        \nThe name of the collection in the store this Event Table should be persisted as.\n\n        \nName of the siddhi event table.\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nsecure.connection\n\n        \nDescribes enabling the SSL for the mongodb connection\n\n        \nfalse\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \ntrust.store\n\n        \nFile path to the trust store.\n\n        \n${carbon.home}/resources/security/client-truststore.jks\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \ntrust.store.password\n\n        \nPassword to access the trust store\n\n        \nwso2carbon\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nkey.store\n\n        \nFile path to the keystore.\n\n        \n${carbon.home}/resources/security/client-truststore.jks\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nkey.store.password\n\n        \nPassword to access the keystore\n\n        \nwso2carbon\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n\n\n\nSystem Parameters\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Parameters\n\n    \n\n    \n\n        \napplicationName\n\n        \nSets the logical name of the application using this MongoClient. The application name may be used by the client to identify the application to the server, for use in server logs, slow query logs, and profile collection.\n\n        \nnull\n\n        \nthe logical name of the application using this MongoClient. The UTF-8 encoding may not exceed 128 bytes.\n\n    \n\n    \n\n        \ncursorFinalizerEnabled\n\n        \nSets whether cursor finalizers are enabled.\n\n        \ntrue\n\n        \ntrue\nfalse\n\n    \n\n    \n\n        \nrequiredReplicaSetName\n\n        \nThe name of the replica set\n\n        \nnull\n\n        \nthe logical name of the replica set\n\n    \n\n    \n\n        \nsslEnabled\n\n        \nSets whether to initiate connection with TSL/SSL enabled. true: Initiate the connection with TLS/SSL. false: Initiate the connection without TLS/SSL.\n\n        \nfalse\n\n        \ntrue\nfalse\n\n    \n\n    \n\n        \ntrustStore\n\n        \nFile path to the trust store.\n\n        \n${carbon.home}/resources/security/client-truststore.jks\n\n        \nAny valid file path.\n\n    \n\n    \n\n        \ntrustStorePassword\n\n        \nPassword to access the trust store\n\n        \nwso2carbon\n\n        \nAny valid password.\n\n    \n\n    \n\n        \nkeyStore\n\n        \nFile path to the keystore.\n\n        \n${carbon.home}/resources/security/client-truststore.jks\n\n        \nAny valid file path.\n\n    \n\n    \n\n        \nkeyStorePassword\n\n        \nPassword to access the keystore\n\n        \nwso2carbon\n\n        \nAny valid password.\n\n    \n\n    \n\n        \nconnectTimeout\n\n        \nThe time in milliseconds to attempt a connection before timing out.\n\n        \n10000\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nconnectionsPerHost\n\n        \nThe maximum number of connections in the connection pool.\n\n        \n100\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nminConnectionsPerHost\n\n        \nThe minimum number of connections in the connection pool.\n\n        \n0\n\n        \nAny natural number\n\n    \n\n    \n\n        \nmaxConnectionIdleTime\n\n        \nThe maximum number of milliseconds that a connection can remain idle in the pool before being removed and closed. A zero value indicates no limit to the idle time.  A pooled connection that has exceeded its idle time will be closed and replaced when necessary by a new connection.\n\n        \n0\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nmaxWaitTime\n\n        \nThe maximum wait time in milliseconds that a thread may wait for a connection to become available. A value of 0 means that it will not wait.  A negative value means to wait indefinitely\n\n        \n120000\n\n        \nAny integer\n\n    \n\n    \n\n        \nthreadsAllowedToBlockForConnectionMultiplier\n\n        \nThe maximum number of connections allowed per host for this MongoClient instance. Those connections will be kept in a pool when idle. Once the pool is exhausted, any operation requiring a connection will block waiting for an available connection.\n\n        \n100\n\n        \nAny natural number\n\n    \n\n    \n\n        \nmaxConnectionLifeTime\n\n        \nThe maximum life time of a pooled connection.  A zero value indicates no limit to the life time.  A pooled connection that has exceeded its life time will be closed and replaced when necessary by a new connection.\n\n        \n0\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nsocketKeepAlive\n\n        \nSets whether to keep a connection alive through firewalls\n\n        \nfalse\n\n        \ntrue\nfalse\n\n    \n\n    \n\n        \nsocketTimeout\n\n        \nThe time in milliseconds to attempt a send or receive on a socket before the attempt times out. Default 0 means never to timeout.\n\n        \n0\n\n        \nAny natural integer\n\n    \n\n    \n\n        \nwriteConcern\n\n        \nThe write concern to use.\n\n        \nacknowledged\n\n        \nacknowledged\nw1\nw2\nw3\nunacknowledged\nfsynced\njournaled\nreplica_acknowledged\nnormal\nsafe\nmajority\nfsync_safe\njournal_safe\nreplicas_safe\n\n    \n\n    \n\n        \nreadConcern\n\n        \nThe level of isolation for the reads from replica sets.\n\n        \ndefault\n\n        \nlocal\nmajority\nlinearizable\n\n    \n\n    \n\n        \nreadPreference\n\n        \nSpecifies the replica set read preference for the connection.\n\n        \nprimary\n\n        \nprimary\nsecondary\nsecondarypreferred\nprimarypreferred\nnearest\n\n    \n\n    \n\n        \nlocalThreshold\n\n        \nThe size (in milliseconds) of the latency window for selecting among multiple suitable MongoDB instances.\n\n        \n15\n\n        \nAny natural number\n\n    \n\n    \n\n        \nserverSelectionTimeout\n\n        \nSpecifies how long (in milliseconds) to block for server selection before throwing an exception. A value of 0 means that it will timeout immediately if no server is available.  A negative value means to wait indefinitely.\n\n        \n30000\n\n        \nAny integer\n\n    \n\n    \n\n        \nheartbeatSocketTimeout\n\n        \nThe socket timeout for connections used for the cluster heartbeat. A value of 0 means that it will timeout immediately if no cluster member is available.  A negative value means to wait indefinitely.\n\n        \n20000\n\n        \nAny integer\n\n    \n\n    \n\n        \nheartbeatConnectTimeout\n\n        \nThe connect timeout for connections used for the cluster heartbeat. A value of 0 means that it will timeout immediately if no cluster member is available.  A negative value means to wait indefinitely.\n\n        \n20000\n\n        \nAny integer\n\n    \n\n    \n\n        \nheartbeatFrequency\n\n        \nSpecify the interval (in milliseconds) between checks, counted from the end of the previous check until the beginning of the next one.\n\n        \n10000\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nminHeartbeatFrequency\n\n        \nSets the minimum heartbeat frequency.  In the event that the driver has to frequently re-check a server's availability, it will wait at least this long since the previous check to avoid wasted effort.\n\n        \n500\n\n        \nAny positive integer\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\n@Store(type=\nmongodb\n,mongodb.uri=\nmongodb://admin:admin@localhost/Foo\n)\n@PrimaryKey(\nsymbol\n)\n@IndexBy(\nvolume 1 {background:true,unique:true}\n)\ndefine table FooTable (symbol string, price float, volume long);\n\n\n\n\n\nThis will create a collection called FooTable for the events to be saved with symbol as Primary Key(unique index at mongod level) and index for the field volume will be created in ascending order with the index option to create the index in the background.\nNote: \n@PrimaryKey: This specifies a list of comma-separated values to be treated as unique fields in the table. Each record in the table must have a unique combination of values for the fields specified here.\n@IndexBy: This specifies the fields that must be indexed at the database level. You can specify multiple values as a come-separated list. A single value to be in the format,\n?\nFieldName\n \nSortOrder\n \nIndexOptions\n?\nSortOrder\n - ( 1) for Ascending and (-1) for Descending\nIndexOptions\n - Index Options must be defined inside curly brackets. {} to be used for default options. Options must follow the standard mongodb index options format. Reference : https://docs.mongodb.com/manual/reference/method/db.collection.createIndex/\nExample : ?symbol 1 {?unique?:true}?", 
            "title": "1.0.10"
        }, 
        {
            "location": "/api/1.0.10/#api-docs-v1010", 
            "text": "", 
            "title": "API Docs - v1.0.10"
        }, 
        {
            "location": "/api/1.0.10/#store", 
            "text": "", 
            "title": "Store"
        }, 
        {
            "location": "/api/1.0.10/#mongodb-store", 
            "text": "Using this extension a MongoDB Event Table can be configured to persist events in a MongoDB of user's choice.  Syntax  @Store(type= mongodb , mongodb.uri= STRING , collection.name= STRING , secure.connection= STRING , trust.store= STRING , trust.store.password= STRING , key.store= STRING , key.store.password= STRING )\n@PrimaryKey( PRIMARY_KEY )\n@Index( INDEX )  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         mongodb.uri \n         The MongoDB URI for the MongoDB data store. The uri must be of the format  mongodb://[username:password@]host1[:port1][,hostN[:portN]][/[database][?options]] The options specified in the uri will override any connection options specified in the deployment yaml file. \n         \n         STRING \n         No \n         No \n     \n     \n         collection.name \n         The name of the collection in the store this Event Table should be persisted as. \n         Name of the siddhi event table. \n         STRING \n         Yes \n         No \n     \n     \n         secure.connection \n         Describes enabling the SSL for the mongodb connection \n         false \n         STRING \n         Yes \n         No \n     \n     \n         trust.store \n         File path to the trust store. \n         ${carbon.home}/resources/security/client-truststore.jks \n         STRING \n         Yes \n         No \n     \n     \n         trust.store.password \n         Password to access the trust store \n         wso2carbon \n         STRING \n         Yes \n         No \n     \n     \n         key.store \n         File path to the keystore. \n         ${carbon.home}/resources/security/client-truststore.jks \n         STRING \n         Yes \n         No \n     \n     \n         key.store.password \n         Password to access the keystore \n         wso2carbon \n         STRING \n         Yes \n         No \n       System Parameters  \n     \n         Name \n         Description \n         Default Value \n         Possible Parameters \n     \n     \n         applicationName \n         Sets the logical name of the application using this MongoClient. The application name may be used by the client to identify the application to the server, for use in server logs, slow query logs, and profile collection. \n         null \n         the logical name of the application using this MongoClient. The UTF-8 encoding may not exceed 128 bytes. \n     \n     \n         cursorFinalizerEnabled \n         Sets whether cursor finalizers are enabled. \n         true \n         true false \n     \n     \n         requiredReplicaSetName \n         The name of the replica set \n         null \n         the logical name of the replica set \n     \n     \n         sslEnabled \n         Sets whether to initiate connection with TSL/SSL enabled. true: Initiate the connection with TLS/SSL. false: Initiate the connection without TLS/SSL. \n         false \n         true false \n     \n     \n         trustStore \n         File path to the trust store. \n         ${carbon.home}/resources/security/client-truststore.jks \n         Any valid file path. \n     \n     \n         trustStorePassword \n         Password to access the trust store \n         wso2carbon \n         Any valid password. \n     \n     \n         keyStore \n         File path to the keystore. \n         ${carbon.home}/resources/security/client-truststore.jks \n         Any valid file path. \n     \n     \n         keyStorePassword \n         Password to access the keystore \n         wso2carbon \n         Any valid password. \n     \n     \n         connectTimeout \n         The time in milliseconds to attempt a connection before timing out. \n         10000 \n         Any positive integer \n     \n     \n         connectionsPerHost \n         The maximum number of connections in the connection pool. \n         100 \n         Any positive integer \n     \n     \n         minConnectionsPerHost \n         The minimum number of connections in the connection pool. \n         0 \n         Any natural number \n     \n     \n         maxConnectionIdleTime \n         The maximum number of milliseconds that a connection can remain idle in the pool before being removed and closed. A zero value indicates no limit to the idle time.  A pooled connection that has exceeded its idle time will be closed and replaced when necessary by a new connection. \n         0 \n         Any positive integer \n     \n     \n         maxWaitTime \n         The maximum wait time in milliseconds that a thread may wait for a connection to become available. A value of 0 means that it will not wait.  A negative value means to wait indefinitely \n         120000 \n         Any integer \n     \n     \n         threadsAllowedToBlockForConnectionMultiplier \n         The maximum number of connections allowed per host for this MongoClient instance. Those connections will be kept in a pool when idle. Once the pool is exhausted, any operation requiring a connection will block waiting for an available connection. \n         100 \n         Any natural number \n     \n     \n         maxConnectionLifeTime \n         The maximum life time of a pooled connection.  A zero value indicates no limit to the life time.  A pooled connection that has exceeded its life time will be closed and replaced when necessary by a new connection. \n         0 \n         Any positive integer \n     \n     \n         socketKeepAlive \n         Sets whether to keep a connection alive through firewalls \n         false \n         true false \n     \n     \n         socketTimeout \n         The time in milliseconds to attempt a send or receive on a socket before the attempt times out. Default 0 means never to timeout. \n         0 \n         Any natural integer \n     \n     \n         writeConcern \n         The write concern to use. \n         acknowledged \n         acknowledged w1 w2 w3 unacknowledged fsynced journaled replica_acknowledged normal safe majority fsync_safe journal_safe replicas_safe \n     \n     \n         readConcern \n         The level of isolation for the reads from replica sets. \n         default \n         local majority linearizable \n     \n     \n         readPreference \n         Specifies the replica set read preference for the connection. \n         primary \n         primary secondary secondarypreferred primarypreferred nearest \n     \n     \n         localThreshold \n         The size (in milliseconds) of the latency window for selecting among multiple suitable MongoDB instances. \n         15 \n         Any natural number \n     \n     \n         serverSelectionTimeout \n         Specifies how long (in milliseconds) to block for server selection before throwing an exception. A value of 0 means that it will timeout immediately if no server is available.  A negative value means to wait indefinitely. \n         30000 \n         Any integer \n     \n     \n         heartbeatSocketTimeout \n         The socket timeout for connections used for the cluster heartbeat. A value of 0 means that it will timeout immediately if no cluster member is available.  A negative value means to wait indefinitely. \n         20000 \n         Any integer \n     \n     \n         heartbeatConnectTimeout \n         The connect timeout for connections used for the cluster heartbeat. A value of 0 means that it will timeout immediately if no cluster member is available.  A negative value means to wait indefinitely. \n         20000 \n         Any integer \n     \n     \n         heartbeatFrequency \n         Specify the interval (in milliseconds) between checks, counted from the end of the previous check until the beginning of the next one. \n         10000 \n         Any positive integer \n     \n     \n         minHeartbeatFrequency \n         Sets the minimum heartbeat frequency.  In the event that the driver has to frequently re-check a server's availability, it will wait at least this long since the previous check to avoid wasted effort. \n         500 \n         Any positive integer \n       Examples  EXAMPLE 1  @Store(type= mongodb ,mongodb.uri= mongodb://admin:admin@localhost/Foo )\n@PrimaryKey( symbol )\n@IndexBy( volume 1 {background:true,unique:true} )\ndefine table FooTable (symbol string, price float, volume long);  This will create a collection called FooTable for the events to be saved with symbol as Primary Key(unique index at mongod level) and index for the field volume will be created in ascending order with the index option to create the index in the background. Note:  @PrimaryKey: This specifies a list of comma-separated values to be treated as unique fields in the table. Each record in the table must have a unique combination of values for the fields specified here. @IndexBy: This specifies the fields that must be indexed at the database level. You can specify multiple values as a come-separated list. A single value to be in the format, ? FieldName   SortOrder   IndexOptions ? SortOrder  - ( 1) for Ascending and (-1) for Descending IndexOptions  - Index Options must be defined inside curly brackets. {} to be used for default options. Options must follow the standard mongodb index options format. Reference : https://docs.mongodb.com/manual/reference/method/db.collection.createIndex/ Example : ?symbol 1 {?unique?:true}?", 
            "title": "mongodb (Store)"
        }, 
        {
            "location": "/api/1.0.9/", 
            "text": "API Docs - v1.0.9\n\n\nStore\n\n\nmongodb \n(Store)\n\n\nUsing this extension a MongoDB Event Table can be configured to persist events in a MongoDB of user's choice.\n\n\n\nSyntax\n\n\n@Store(type=\nmongodb\n, mongodb.uri=\nSTRING\n, collection.name=\nSTRING\n, secure.connection=\nSTRING\n, trust.store=\nSTRING\n, trust.store.password=\nSTRING\n, key.store=\nSTRING\n, key.store.password=\nSTRING\n)\n@PrimaryKey(\nPRIMARY_KEY\n)\n@Index(\nINDEX\n)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \nmongodb.uri\n\n        \nThe MongoDB URI for the MongoDB data store. The uri must be of the format \nmongodb://[username:password@]host1[:port1][,hostN[:portN]][/[database][?options]]\nThe options specified in the uri will override any connection options specified in the deployment yaml file.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \ncollection.name\n\n        \nThe name of the collection in the store this Event Table should be persisted as.\n\n        \nName of the siddhi event table.\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nsecure.connection\n\n        \nDescribes enabling the SSL for the mongodb connection\n\n        \nfalse\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \ntrust.store\n\n        \nFile path to the trust store.\n\n        \n${carbon.home}/resources/security/client-truststore.jks\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \ntrust.store.password\n\n        \nPassword to access the trust store\n\n        \nwso2carbon\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nkey.store\n\n        \nFile path to the keystore.\n\n        \n${carbon.home}/resources/security/client-truststore.jks\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nkey.store.password\n\n        \nPassword to access the keystore\n\n        \nwso2carbon\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n\n\n\nSystem Parameters\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Parameters\n\n    \n\n    \n\n        \napplicationName\n\n        \nSets the logical name of the application using this MongoClient. The application name may be used by the client to identify the application to the server, for use in server logs, slow query logs, and profile collection.\n\n        \nnull\n\n        \nthe logical name of the application using this MongoClient. The UTF-8 encoding may not exceed 128 bytes.\n\n    \n\n    \n\n        \ncursorFinalizerEnabled\n\n        \nSets whether cursor finalizers are enabled.\n\n        \ntrue\n\n        \ntrue\nfalse\n\n    \n\n    \n\n        \nrequiredReplicaSetName\n\n        \nThe name of the replica set\n\n        \nnull\n\n        \nthe logical name of the replica set\n\n    \n\n    \n\n        \nsslEnabled\n\n        \nSets whether to initiate connection with TSL/SSL enabled. true: Initiate the connection with TLS/SSL. false: Initiate the connection without TLS/SSL.\n\n        \nfalse\n\n        \ntrue\nfalse\n\n    \n\n    \n\n        \ntrustStore\n\n        \nFile path to the trust store.\n\n        \n${carbon.home}/resources/security/client-truststore.jks\n\n        \nAny valid file path.\n\n    \n\n    \n\n        \ntrustStorePassword\n\n        \nPassword to access the trust store\n\n        \nwso2carbon\n\n        \nAny valid password.\n\n    \n\n    \n\n        \nkeyStore\n\n        \nFile path to the keystore.\n\n        \n${carbon.home}/resources/security/client-truststore.jks\n\n        \nAny valid file path.\n\n    \n\n    \n\n        \nkeyStorePassword\n\n        \nPassword to access the keystore\n\n        \nwso2carbon\n\n        \nAny valid password.\n\n    \n\n    \n\n        \nconnectTimeout\n\n        \nThe time in milliseconds to attempt a connection before timing out.\n\n        \n10000\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nconnectionsPerHost\n\n        \nThe maximum number of connections in the connection pool.\n\n        \n100\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nminConnectionsPerHost\n\n        \nThe minimum number of connections in the connection pool.\n\n        \n0\n\n        \nAny natural number\n\n    \n\n    \n\n        \nmaxConnectionIdleTime\n\n        \nThe maximum number of milliseconds that a connection can remain idle in the pool before being removed and closed. A zero value indicates no limit to the idle time.  A pooled connection that has exceeded its idle time will be closed and replaced when necessary by a new connection.\n\n        \n0\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nmaxWaitTime\n\n        \nThe maximum wait time in milliseconds that a thread may wait for a connection to become available. A value of 0 means that it will not wait.  A negative value means to wait indefinitely\n\n        \n120000\n\n        \nAny integer\n\n    \n\n    \n\n        \nthreadsAllowedToBlockForConnectionMultiplier\n\n        \nThe maximum number of connections allowed per host for this MongoClient instance. Those connections will be kept in a pool when idle. Once the pool is exhausted, any operation requiring a connection will block waiting for an available connection.\n\n        \n100\n\n        \nAny natural number\n\n    \n\n    \n\n        \nmaxConnectionLifeTime\n\n        \nThe maximum life time of a pooled connection.  A zero value indicates no limit to the life time.  A pooled connection that has exceeded its life time will be closed and replaced when necessary by a new connection.\n\n        \n0\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nsocketKeepAlive\n\n        \nSets whether to keep a connection alive through firewalls\n\n        \nfalse\n\n        \ntrue\nfalse\n\n    \n\n    \n\n        \nsocketTimeout\n\n        \nThe time in milliseconds to attempt a send or receive on a socket before the attempt times out. Default 0 means never to timeout.\n\n        \n0\n\n        \nAny natural integer\n\n    \n\n    \n\n        \nwriteConcern\n\n        \nThe write concern to use.\n\n        \nacknowledged\n\n        \nacknowledged\nw1\nw2\nw3\nunacknowledged\nfsynced\njournaled\nreplica_acknowledged\nnormal\nsafe\nmajority\nfsync_safe\njournal_safe\nreplicas_safe\n\n    \n\n    \n\n        \nreadConcern\n\n        \nThe level of isolation for the reads from replica sets.\n\n        \ndefault\n\n        \nlocal\nmajority\nlinearizable\n\n    \n\n    \n\n        \nreadPreference\n\n        \nSpecifies the replica set read preference for the connection.\n\n        \nprimary\n\n        \nprimary\nsecondary\nsecondarypreferred\nprimarypreferred\nnearest\n\n    \n\n    \n\n        \nlocalThreshold\n\n        \nThe size (in milliseconds) of the latency window for selecting among multiple suitable MongoDB instances.\n\n        \n15\n\n        \nAny natural number\n\n    \n\n    \n\n        \nserverSelectionTimeout\n\n        \nSpecifies how long (in milliseconds) to block for server selection before throwing an exception. A value of 0 means that it will timeout immediately if no server is available.  A negative value means to wait indefinitely.\n\n        \n30000\n\n        \nAny integer\n\n    \n\n    \n\n        \nheartbeatSocketTimeout\n\n        \nThe socket timeout for connections used for the cluster heartbeat. A value of 0 means that it will timeout immediately if no cluster member is available.  A negative value means to wait indefinitely.\n\n        \n20000\n\n        \nAny integer\n\n    \n\n    \n\n        \nheartbeatConnectTimeout\n\n        \nThe connect timeout for connections used for the cluster heartbeat. A value of 0 means that it will timeout immediately if no cluster member is available.  A negative value means to wait indefinitely.\n\n        \n20000\n\n        \nAny integer\n\n    \n\n    \n\n        \nheartbeatFrequency\n\n        \nSpecify the interval (in milliseconds) between checks, counted from the end of the previous check until the beginning of the next one.\n\n        \n10000\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nminHeartbeatFrequency\n\n        \nSets the minimum heartbeat frequency.  In the event that the driver has to frequently re-check a server's availability, it will wait at least this long since the previous check to avoid wasted effort.\n\n        \n500\n\n        \nAny positive integer\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\n@Store(type=\nmongodb\n,mongodb.uri=\nmongodb://admin:admin@localhost/Foo\n)\n@PrimaryKey(\nsymbol\n)\n@IndexBy(\nvolume 1 {background:true,unique:true}\n)\ndefine table FooTable (symbol string, price float, volume long);\n\n\n\n\n\nThis will create a collection called FooTable for the events to be saved with symbol as Primary Key(unique index at mongod level) and index for the field volume will be created in ascending order with the index option to create the index in the background.\nNote: \n@PrimaryKey: This specifies a list of comma-separated values to be treated as unique fields in the table. Each record in the table must have a unique combination of values for the fields specified here.\n@IndexBy: This specifies the fields that must be indexed at the database level. You can specify multiple values as a come-separated list. A single value to be in the format,\n?\nFieldName\n \nSortOrder\n \nIndexOptions\n?\nSortOrder\n - ( 1) for Ascending and (-1) for Descending\nIndexOptions\n - Index Options must be defined inside curly brackets. {} to be used for default options. Options must follow the standard mongodb index options format. Reference : https://docs.mongodb.com/manual/reference/method/db.collection.createIndex/\nExample : ?symbol 1 {?unique?:true}?", 
            "title": "1.0.9"
        }, 
        {
            "location": "/api/1.0.9/#api-docs-v109", 
            "text": "", 
            "title": "API Docs - v1.0.9"
        }, 
        {
            "location": "/api/1.0.9/#store", 
            "text": "", 
            "title": "Store"
        }, 
        {
            "location": "/api/1.0.9/#mongodb-store", 
            "text": "Using this extension a MongoDB Event Table can be configured to persist events in a MongoDB of user's choice.  Syntax  @Store(type= mongodb , mongodb.uri= STRING , collection.name= STRING , secure.connection= STRING , trust.store= STRING , trust.store.password= STRING , key.store= STRING , key.store.password= STRING )\n@PrimaryKey( PRIMARY_KEY )\n@Index( INDEX )  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         mongodb.uri \n         The MongoDB URI for the MongoDB data store. The uri must be of the format  mongodb://[username:password@]host1[:port1][,hostN[:portN]][/[database][?options]] The options specified in the uri will override any connection options specified in the deployment yaml file. \n         \n         STRING \n         No \n         No \n     \n     \n         collection.name \n         The name of the collection in the store this Event Table should be persisted as. \n         Name of the siddhi event table. \n         STRING \n         Yes \n         No \n     \n     \n         secure.connection \n         Describes enabling the SSL for the mongodb connection \n         false \n         STRING \n         Yes \n         No \n     \n     \n         trust.store \n         File path to the trust store. \n         ${carbon.home}/resources/security/client-truststore.jks \n         STRING \n         Yes \n         No \n     \n     \n         trust.store.password \n         Password to access the trust store \n         wso2carbon \n         STRING \n         Yes \n         No \n     \n     \n         key.store \n         File path to the keystore. \n         ${carbon.home}/resources/security/client-truststore.jks \n         STRING \n         Yes \n         No \n     \n     \n         key.store.password \n         Password to access the keystore \n         wso2carbon \n         STRING \n         Yes \n         No \n       System Parameters  \n     \n         Name \n         Description \n         Default Value \n         Possible Parameters \n     \n     \n         applicationName \n         Sets the logical name of the application using this MongoClient. The application name may be used by the client to identify the application to the server, for use in server logs, slow query logs, and profile collection. \n         null \n         the logical name of the application using this MongoClient. The UTF-8 encoding may not exceed 128 bytes. \n     \n     \n         cursorFinalizerEnabled \n         Sets whether cursor finalizers are enabled. \n         true \n         true false \n     \n     \n         requiredReplicaSetName \n         The name of the replica set \n         null \n         the logical name of the replica set \n     \n     \n         sslEnabled \n         Sets whether to initiate connection with TSL/SSL enabled. true: Initiate the connection with TLS/SSL. false: Initiate the connection without TLS/SSL. \n         false \n         true false \n     \n     \n         trustStore \n         File path to the trust store. \n         ${carbon.home}/resources/security/client-truststore.jks \n         Any valid file path. \n     \n     \n         trustStorePassword \n         Password to access the trust store \n         wso2carbon \n         Any valid password. \n     \n     \n         keyStore \n         File path to the keystore. \n         ${carbon.home}/resources/security/client-truststore.jks \n         Any valid file path. \n     \n     \n         keyStorePassword \n         Password to access the keystore \n         wso2carbon \n         Any valid password. \n     \n     \n         connectTimeout \n         The time in milliseconds to attempt a connection before timing out. \n         10000 \n         Any positive integer \n     \n     \n         connectionsPerHost \n         The maximum number of connections in the connection pool. \n         100 \n         Any positive integer \n     \n     \n         minConnectionsPerHost \n         The minimum number of connections in the connection pool. \n         0 \n         Any natural number \n     \n     \n         maxConnectionIdleTime \n         The maximum number of milliseconds that a connection can remain idle in the pool before being removed and closed. A zero value indicates no limit to the idle time.  A pooled connection that has exceeded its idle time will be closed and replaced when necessary by a new connection. \n         0 \n         Any positive integer \n     \n     \n         maxWaitTime \n         The maximum wait time in milliseconds that a thread may wait for a connection to become available. A value of 0 means that it will not wait.  A negative value means to wait indefinitely \n         120000 \n         Any integer \n     \n     \n         threadsAllowedToBlockForConnectionMultiplier \n         The maximum number of connections allowed per host for this MongoClient instance. Those connections will be kept in a pool when idle. Once the pool is exhausted, any operation requiring a connection will block waiting for an available connection. \n         100 \n         Any natural number \n     \n     \n         maxConnectionLifeTime \n         The maximum life time of a pooled connection.  A zero value indicates no limit to the life time.  A pooled connection that has exceeded its life time will be closed and replaced when necessary by a new connection. \n         0 \n         Any positive integer \n     \n     \n         socketKeepAlive \n         Sets whether to keep a connection alive through firewalls \n         false \n         true false \n     \n     \n         socketTimeout \n         The time in milliseconds to attempt a send or receive on a socket before the attempt times out. Default 0 means never to timeout. \n         0 \n         Any natural integer \n     \n     \n         writeConcern \n         The write concern to use. \n         acknowledged \n         acknowledged w1 w2 w3 unacknowledged fsynced journaled replica_acknowledged normal safe majority fsync_safe journal_safe replicas_safe \n     \n     \n         readConcern \n         The level of isolation for the reads from replica sets. \n         default \n         local majority linearizable \n     \n     \n         readPreference \n         Specifies the replica set read preference for the connection. \n         primary \n         primary secondary secondarypreferred primarypreferred nearest \n     \n     \n         localThreshold \n         The size (in milliseconds) of the latency window for selecting among multiple suitable MongoDB instances. \n         15 \n         Any natural number \n     \n     \n         serverSelectionTimeout \n         Specifies how long (in milliseconds) to block for server selection before throwing an exception. A value of 0 means that it will timeout immediately if no server is available.  A negative value means to wait indefinitely. \n         30000 \n         Any integer \n     \n     \n         heartbeatSocketTimeout \n         The socket timeout for connections used for the cluster heartbeat. A value of 0 means that it will timeout immediately if no cluster member is available.  A negative value means to wait indefinitely. \n         20000 \n         Any integer \n     \n     \n         heartbeatConnectTimeout \n         The connect timeout for connections used for the cluster heartbeat. A value of 0 means that it will timeout immediately if no cluster member is available.  A negative value means to wait indefinitely. \n         20000 \n         Any integer \n     \n     \n         heartbeatFrequency \n         Specify the interval (in milliseconds) between checks, counted from the end of the previous check until the beginning of the next one. \n         10000 \n         Any positive integer \n     \n     \n         minHeartbeatFrequency \n         Sets the minimum heartbeat frequency.  In the event that the driver has to frequently re-check a server's availability, it will wait at least this long since the previous check to avoid wasted effort. \n         500 \n         Any positive integer \n       Examples  EXAMPLE 1  @Store(type= mongodb ,mongodb.uri= mongodb://admin:admin@localhost/Foo )\n@PrimaryKey( symbol )\n@IndexBy( volume 1 {background:true,unique:true} )\ndefine table FooTable (symbol string, price float, volume long);  This will create a collection called FooTable for the events to be saved with symbol as Primary Key(unique index at mongod level) and index for the field volume will be created in ascending order with the index option to create the index in the background. Note:  @PrimaryKey: This specifies a list of comma-separated values to be treated as unique fields in the table. Each record in the table must have a unique combination of values for the fields specified here. @IndexBy: This specifies the fields that must be indexed at the database level. You can specify multiple values as a come-separated list. A single value to be in the format, ? FieldName   SortOrder   IndexOptions ? SortOrder  - ( 1) for Ascending and (-1) for Descending IndexOptions  - Index Options must be defined inside curly brackets. {} to be used for default options. Options must follow the standard mongodb index options format. Reference : https://docs.mongodb.com/manual/reference/method/db.collection.createIndex/ Example : ?symbol 1 {?unique?:true}?", 
            "title": "mongodb (Store)"
        }, 
        {
            "location": "/api/1.0.8/", 
            "text": "API Docs - v1.0.8\n\n\nStore\n\n\nmongodb \n(Store)\n\n\nUsing this extension a MongoDB Event Table can be configured to persist events in a MongoDB of user's choice.\n\n\n\nSyntax\n\n\n@Store(type=\nmongodb\n, mongodb.uri=\nSTRING\n, collection.name=\nSTRING\n, secure.connection=\nSTRING\n, trust.store=\nSTRING\n, trust.store.password=\nSTRING\n, key.store=\nSTRING\n, key.store.password=\nSTRING\n)\n@PrimaryKey(\nPRIMARY_KEY\n)\n@Index(\nINDEX\n)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \nmongodb.uri\n\n        \nThe MongoDB URI for the MongoDB data store. The uri must be of the format \nmongodb://[username:password@]host1[:port1][,hostN[:portN]][/[database][?options]]\nThe options specified in the uri will override any connection options specified in the deployment yaml file.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \ncollection.name\n\n        \nThe name of the collection in the store this Event Table should be persisted as.\n\n        \nName of the siddhi event table.\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nsecure.connection\n\n        \nDescribes enabling the SSL for the mongodb connection\n\n        \nfalse\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \ntrust.store\n\n        \nFile path to the trust store.\n\n        \n${carbon.home}/resources/security/client-truststore.jks\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \ntrust.store.password\n\n        \nPassword to access the trust store\n\n        \nwso2carbon\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nkey.store\n\n        \nFile path to the keystore.\n\n        \n${carbon.home}/resources/security/client-truststore.jks\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nkey.store.password\n\n        \nPassword to access the keystore\n\n        \nwso2carbon\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n\n\n\nSystem Parameters\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Parameters\n\n    \n\n    \n\n        \napplicationName\n\n        \nSets the logical name of the application using this MongoClient. The application name may be used by the client to identify the application to the server, for use in server logs, slow query logs, and profile collection.\n\n        \nnull\n\n        \nthe logical name of the application using this MongoClient. The UTF-8 encoding may not exceed 128 bytes.\n\n    \n\n    \n\n        \ncursorFinalizerEnabled\n\n        \nSets whether cursor finalizers are enabled.\n\n        \ntrue\n\n        \ntrue\nfalse\n\n    \n\n    \n\n        \nrequiredReplicaSetName\n\n        \nThe name of the replica set\n\n        \nnull\n\n        \nthe logical name of the replica set\n\n    \n\n    \n\n        \nsslEnabled\n\n        \nSets whether to initiate connection with TSL/SSL enabled. true: Initiate the connection with TLS/SSL. false: Initiate the connection without TLS/SSL.\n\n        \nfalse\n\n        \ntrue\nfalse\n\n    \n\n    \n\n        \ntrustStore\n\n        \nFile path to the trust store.\n\n        \n${carbon.home}/resources/security/client-truststore.jks\n\n        \nAny valid file path.\n\n    \n\n    \n\n        \ntrustStorePassword\n\n        \nPassword to access the trust store\n\n        \nwso2carbon\n\n        \nAny valid password.\n\n    \n\n    \n\n        \nkeyStore\n\n        \nFile path to the keystore.\n\n        \n${carbon.home}/resources/security/client-truststore.jks\n\n        \nAny valid file path.\n\n    \n\n    \n\n        \nkeyStorePassword\n\n        \nPassword to access the keystore\n\n        \nwso2carbon\n\n        \nAny valid password.\n\n    \n\n    \n\n        \nconnectTimeout\n\n        \nThe time in milliseconds to attempt a connection before timing out.\n\n        \n10000\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nconnectionsPerHost\n\n        \nThe maximum number of connections in the connection pool.\n\n        \n100\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nminConnectionsPerHost\n\n        \nThe minimum number of connections in the connection pool.\n\n        \n0\n\n        \nAny natural number\n\n    \n\n    \n\n        \nmaxConnectionIdleTime\n\n        \nThe maximum number of milliseconds that a connection can remain idle in the pool before being removed and closed. A zero value indicates no limit to the idle time.  A pooled connection that has exceeded its idle time will be closed and replaced when necessary by a new connection.\n\n        \n0\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nmaxWaitTime\n\n        \nThe maximum wait time in milliseconds that a thread may wait for a connection to become available. A value of 0 means that it will not wait.  A negative value means to wait indefinitely\n\n        \n120000\n\n        \nAny integer\n\n    \n\n    \n\n        \nthreadsAllowedToBlockForConnectionMultiplier\n\n        \nThe maximum number of connections allowed per host for this MongoClient instance. Those connections will be kept in a pool when idle. Once the pool is exhausted, any operation requiring a connection will block waiting for an available connection.\n\n        \n100\n\n        \nAny natural number\n\n    \n\n    \n\n        \nmaxConnectionLifeTime\n\n        \nThe maximum life time of a pooled connection.  A zero value indicates no limit to the life time.  A pooled connection that has exceeded its life time will be closed and replaced when necessary by a new connection.\n\n        \n0\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nsocketKeepAlive\n\n        \nSets whether to keep a connection alive through firewalls\n\n        \nfalse\n\n        \ntrue\nfalse\n\n    \n\n    \n\n        \nsocketTimeout\n\n        \nThe time in milliseconds to attempt a send or receive on a socket before the attempt times out. Default 0 means never to timeout.\n\n        \n0\n\n        \nAny natural integer\n\n    \n\n    \n\n        \nwriteConcern\n\n        \nThe write concern to use.\n\n        \nacknowledged\n\n        \nacknowledged\nw1\nw2\nw3\nunacknowledged\nfsynced\njournaled\nreplica_acknowledged\nnormal\nsafe\nmajority\nfsync_safe\njournal_safe\nreplicas_safe\n\n    \n\n    \n\n        \nreadConcern\n\n        \nThe level of isolation for the reads from replica sets.\n\n        \ndefault\n\n        \nlocal\nmajority\nlinearizable\n\n    \n\n    \n\n        \nreadPreference\n\n        \nSpecifies the replica set read preference for the connection.\n\n        \nprimary\n\n        \nprimary\nsecondary\nsecondarypreferred\nprimarypreferred\nnearest\n\n    \n\n    \n\n        \nlocalThreshold\n\n        \nThe size (in milliseconds) of the latency window for selecting among multiple suitable MongoDB instances.\n\n        \n15\n\n        \nAny natural number\n\n    \n\n    \n\n        \nserverSelectionTimeout\n\n        \nSpecifies how long (in milliseconds) to block for server selection before throwing an exception. A value of 0 means that it will timeout immediately if no server is available.  A negative value means to wait indefinitely.\n\n        \n30000\n\n        \nAny integer\n\n    \n\n    \n\n        \nheartbeatSocketTimeout\n\n        \nThe socket timeout for connections used for the cluster heartbeat. A value of 0 means that it will timeout immediately if no cluster member is available.  A negative value means to wait indefinitely.\n\n        \n20000\n\n        \nAny integer\n\n    \n\n    \n\n        \nheartbeatConnectTimeout\n\n        \nThe connect timeout for connections used for the cluster heartbeat. A value of 0 means that it will timeout immediately if no cluster member is available.  A negative value means to wait indefinitely.\n\n        \n20000\n\n        \nAny integer\n\n    \n\n    \n\n        \nheartbeatFrequency\n\n        \nSpecify the interval (in milliseconds) between checks, counted from the end of the previous check until the beginning of the next one.\n\n        \n10000\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nminHeartbeatFrequency\n\n        \nSets the minimum heartbeat frequency.  In the event that the driver has to frequently re-check a server's availability, it will wait at least this long since the previous check to avoid wasted effort.\n\n        \n500\n\n        \nAny positive integer\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\n@Store(type=\nmongodb\n,mongodb.uri=\nmongodb://admin:admin@localhost/Foo\n)\n@PrimaryKey(\nsymbol\n)\n@IndexBy(\nvolume 1 {background:true,unique:true}\n)\ndefine table FooTable (symbol string, price float, volume long);\n\n\n\n\n\nThis will create a collection called FooTable for the events to be saved with symbol as Primary Key(unique index at mongod level) and index for the field volume will be created in ascending order with the index option to create the index in the background.\nNote: \n@PrimaryKey: This specifies a list of comma-separated values to be treated as unique fields in the table. Each record in the table must have a unique combination of values for the fields specified here.\n@IndexBy: This specifies the fields that must be indexed at the database level. You can specify multiple values as a come-separated list. A single value to be in the format,\n?\nFieldName\n \nSortOrder\n \nIndexOptions\n?\nSortOrder\n - ( 1) for Ascending and (-1) for Descending\nIndexOptions\n - Index Options must be defined inside curly brackets. {} to be used for default options. Options must follow the standard mongodb index options format. Reference : https://docs.mongodb.com/manual/reference/method/db.collection.createIndex/\nExample : ?symbol 1 {?unique?:true}?", 
            "title": "1.0.8"
        }, 
        {
            "location": "/api/1.0.8/#api-docs-v108", 
            "text": "", 
            "title": "API Docs - v1.0.8"
        }, 
        {
            "location": "/api/1.0.8/#store", 
            "text": "", 
            "title": "Store"
        }, 
        {
            "location": "/api/1.0.8/#mongodb-store", 
            "text": "Using this extension a MongoDB Event Table can be configured to persist events in a MongoDB of user's choice.  Syntax  @Store(type= mongodb , mongodb.uri= STRING , collection.name= STRING , secure.connection= STRING , trust.store= STRING , trust.store.password= STRING , key.store= STRING , key.store.password= STRING )\n@PrimaryKey( PRIMARY_KEY )\n@Index( INDEX )  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         mongodb.uri \n         The MongoDB URI for the MongoDB data store. The uri must be of the format  mongodb://[username:password@]host1[:port1][,hostN[:portN]][/[database][?options]] The options specified in the uri will override any connection options specified in the deployment yaml file. \n         \n         STRING \n         No \n         No \n     \n     \n         collection.name \n         The name of the collection in the store this Event Table should be persisted as. \n         Name of the siddhi event table. \n         STRING \n         Yes \n         No \n     \n     \n         secure.connection \n         Describes enabling the SSL for the mongodb connection \n         false \n         STRING \n         Yes \n         No \n     \n     \n         trust.store \n         File path to the trust store. \n         ${carbon.home}/resources/security/client-truststore.jks \n         STRING \n         Yes \n         No \n     \n     \n         trust.store.password \n         Password to access the trust store \n         wso2carbon \n         STRING \n         Yes \n         No \n     \n     \n         key.store \n         File path to the keystore. \n         ${carbon.home}/resources/security/client-truststore.jks \n         STRING \n         Yes \n         No \n     \n     \n         key.store.password \n         Password to access the keystore \n         wso2carbon \n         STRING \n         Yes \n         No \n       System Parameters  \n     \n         Name \n         Description \n         Default Value \n         Possible Parameters \n     \n     \n         applicationName \n         Sets the logical name of the application using this MongoClient. The application name may be used by the client to identify the application to the server, for use in server logs, slow query logs, and profile collection. \n         null \n         the logical name of the application using this MongoClient. The UTF-8 encoding may not exceed 128 bytes. \n     \n     \n         cursorFinalizerEnabled \n         Sets whether cursor finalizers are enabled. \n         true \n         true false \n     \n     \n         requiredReplicaSetName \n         The name of the replica set \n         null \n         the logical name of the replica set \n     \n     \n         sslEnabled \n         Sets whether to initiate connection with TSL/SSL enabled. true: Initiate the connection with TLS/SSL. false: Initiate the connection without TLS/SSL. \n         false \n         true false \n     \n     \n         trustStore \n         File path to the trust store. \n         ${carbon.home}/resources/security/client-truststore.jks \n         Any valid file path. \n     \n     \n         trustStorePassword \n         Password to access the trust store \n         wso2carbon \n         Any valid password. \n     \n     \n         keyStore \n         File path to the keystore. \n         ${carbon.home}/resources/security/client-truststore.jks \n         Any valid file path. \n     \n     \n         keyStorePassword \n         Password to access the keystore \n         wso2carbon \n         Any valid password. \n     \n     \n         connectTimeout \n         The time in milliseconds to attempt a connection before timing out. \n         10000 \n         Any positive integer \n     \n     \n         connectionsPerHost \n         The maximum number of connections in the connection pool. \n         100 \n         Any positive integer \n     \n     \n         minConnectionsPerHost \n         The minimum number of connections in the connection pool. \n         0 \n         Any natural number \n     \n     \n         maxConnectionIdleTime \n         The maximum number of milliseconds that a connection can remain idle in the pool before being removed and closed. A zero value indicates no limit to the idle time.  A pooled connection that has exceeded its idle time will be closed and replaced when necessary by a new connection. \n         0 \n         Any positive integer \n     \n     \n         maxWaitTime \n         The maximum wait time in milliseconds that a thread may wait for a connection to become available. A value of 0 means that it will not wait.  A negative value means to wait indefinitely \n         120000 \n         Any integer \n     \n     \n         threadsAllowedToBlockForConnectionMultiplier \n         The maximum number of connections allowed per host for this MongoClient instance. Those connections will be kept in a pool when idle. Once the pool is exhausted, any operation requiring a connection will block waiting for an available connection. \n         100 \n         Any natural number \n     \n     \n         maxConnectionLifeTime \n         The maximum life time of a pooled connection.  A zero value indicates no limit to the life time.  A pooled connection that has exceeded its life time will be closed and replaced when necessary by a new connection. \n         0 \n         Any positive integer \n     \n     \n         socketKeepAlive \n         Sets whether to keep a connection alive through firewalls \n         false \n         true false \n     \n     \n         socketTimeout \n         The time in milliseconds to attempt a send or receive on a socket before the attempt times out. Default 0 means never to timeout. \n         0 \n         Any natural integer \n     \n     \n         writeConcern \n         The write concern to use. \n         acknowledged \n         acknowledged w1 w2 w3 unacknowledged fsynced journaled replica_acknowledged normal safe majority fsync_safe journal_safe replicas_safe \n     \n     \n         readConcern \n         The level of isolation for the reads from replica sets. \n         default \n         local majority linearizable \n     \n     \n         readPreference \n         Specifies the replica set read preference for the connection. \n         primary \n         primary secondary secondarypreferred primarypreferred nearest \n     \n     \n         localThreshold \n         The size (in milliseconds) of the latency window for selecting among multiple suitable MongoDB instances. \n         15 \n         Any natural number \n     \n     \n         serverSelectionTimeout \n         Specifies how long (in milliseconds) to block for server selection before throwing an exception. A value of 0 means that it will timeout immediately if no server is available.  A negative value means to wait indefinitely. \n         30000 \n         Any integer \n     \n     \n         heartbeatSocketTimeout \n         The socket timeout for connections used for the cluster heartbeat. A value of 0 means that it will timeout immediately if no cluster member is available.  A negative value means to wait indefinitely. \n         20000 \n         Any integer \n     \n     \n         heartbeatConnectTimeout \n         The connect timeout for connections used for the cluster heartbeat. A value of 0 means that it will timeout immediately if no cluster member is available.  A negative value means to wait indefinitely. \n         20000 \n         Any integer \n     \n     \n         heartbeatFrequency \n         Specify the interval (in milliseconds) between checks, counted from the end of the previous check until the beginning of the next one. \n         10000 \n         Any positive integer \n     \n     \n         minHeartbeatFrequency \n         Sets the minimum heartbeat frequency.  In the event that the driver has to frequently re-check a server's availability, it will wait at least this long since the previous check to avoid wasted effort. \n         500 \n         Any positive integer \n       Examples  EXAMPLE 1  @Store(type= mongodb ,mongodb.uri= mongodb://admin:admin@localhost/Foo )\n@PrimaryKey( symbol )\n@IndexBy( volume 1 {background:true,unique:true} )\ndefine table FooTable (symbol string, price float, volume long);  This will create a collection called FooTable for the events to be saved with symbol as Primary Key(unique index at mongod level) and index for the field volume will be created in ascending order with the index option to create the index in the background. Note:  @PrimaryKey: This specifies a list of comma-separated values to be treated as unique fields in the table. Each record in the table must have a unique combination of values for the fields specified here. @IndexBy: This specifies the fields that must be indexed at the database level. You can specify multiple values as a come-separated list. A single value to be in the format, ? FieldName   SortOrder   IndexOptions ? SortOrder  - ( 1) for Ascending and (-1) for Descending IndexOptions  - Index Options must be defined inside curly brackets. {} to be used for default options. Options must follow the standard mongodb index options format. Reference : https://docs.mongodb.com/manual/reference/method/db.collection.createIndex/ Example : ?symbol 1 {?unique?:true}?", 
            "title": "mongodb (Store)"
        }, 
        {
            "location": "/api/1.0.7/", 
            "text": "API Docs - v1.0.7\n\n\nStore\n\n\nmongodb \n(Store)\n\n\nUsing this extension a MongoDB Event Table can be configured to persist events in a MongoDB of user's choice.\n\n\n\nSyntax\n\n\n@Store(type=\nmongodb\n, mongodb.uri=\nSTRING\n, collection.name=\nSTRING\n, secure.connection=\nSTRING\n, trust.store=\nSTRING\n, trust.store.password=\nSTRING\n, key.store=\nSTRING\n, key.store.password=\nSTRING\n)\n@PrimaryKey(\nPRIMARY_KEY\n)\n@Index(\nINDEX\n)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \nmongodb.uri\n\n        \nThe MongoDB URI for the MongoDB data store. The uri must be of the format \nmongodb://[username:password@]host1[:port1][,hostN[:portN]][/[database][?options]]\nThe options specified in the uri will override any connection options specified in the deployment yaml file.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \ncollection.name\n\n        \nThe name of the collection in the store this Event Table should be persisted as.\n\n        \nName of the siddhi event table.\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nsecure.connection\n\n        \nDescribes enabling the SSL for the mongodb connection\n\n        \nfalse\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \ntrust.store\n\n        \nFile path to the trust store.\n\n        \n${carbon.home}/resources/security/client-truststore.jks\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \ntrust.store.password\n\n        \nPassword to access the trust store\n\n        \nwso2carbon\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nkey.store\n\n        \nFile path to the keystore.\n\n        \n${carbon.home}/resources/security/client-truststore.jks\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nkey.store.password\n\n        \nPassword to access the keystore\n\n        \nwso2carbon\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n\n\n\nSystem Parameters\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Parameters\n\n    \n\n    \n\n        \napplicationName\n\n        \nSets the logical name of the application using this MongoClient. The application name may be used by the client to identify the application to the server, for use in server logs, slow query logs, and profile collection.\n\n        \nnull\n\n        \nthe logical name of the application using this MongoClient. The UTF-8 encoding may not exceed 128 bytes.\n\n    \n\n    \n\n        \ncursorFinalizerEnabled\n\n        \nSets whether cursor finalizers are enabled.\n\n        \ntrue\n\n        \ntrue\nfalse\n\n    \n\n    \n\n        \nrequiredReplicaSetName\n\n        \nThe name of the replica set\n\n        \nnull\n\n        \nthe logical name of the replica set\n\n    \n\n    \n\n        \nsslEnabled\n\n        \nSets whether to initiate connection with TSL/SSL enabled. true: Initiate the connection with TLS/SSL. false: Initiate the connection without TLS/SSL.\n\n        \nfalse\n\n        \ntrue\nfalse\n\n    \n\n    \n\n        \ntrustStore\n\n        \nFile path to the trust store.\n\n        \n${carbon.home}/resources/security/client-truststore.jks\n\n        \nAny valid file path.\n\n    \n\n    \n\n        \ntrustStorePassword\n\n        \nPassword to access the trust store\n\n        \nwso2carbon\n\n        \nAny valid password.\n\n    \n\n    \n\n        \nkeyStore\n\n        \nFile path to the keystore.\n\n        \n${carbon.home}/resources/security/client-truststore.jks\n\n        \nAny valid file path.\n\n    \n\n    \n\n        \nkeyStorePassword\n\n        \nPassword to access the keystore\n\n        \nwso2carbon\n\n        \nAny valid password.\n\n    \n\n    \n\n        \nconnectTimeout\n\n        \nThe time in milliseconds to attempt a connection before timing out.\n\n        \n10000\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nconnectionsPerHost\n\n        \nThe maximum number of connections in the connection pool.\n\n        \n100\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nminConnectionsPerHost\n\n        \nThe minimum number of connections in the connection pool.\n\n        \n0\n\n        \nAny natural number\n\n    \n\n    \n\n        \nmaxConnectionIdleTime\n\n        \nThe maximum number of milliseconds that a connection can remain idle in the pool before being removed and closed. A zero value indicates no limit to the idle time.  A pooled connection that has exceeded its idle time will be closed and replaced when necessary by a new connection.\n\n        \n0\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nmaxWaitTime\n\n        \nThe maximum wait time in milliseconds that a thread may wait for a connection to become available. A value of 0 means that it will not wait.  A negative value means to wait indefinitely\n\n        \n120000\n\n        \nAny integer\n\n    \n\n    \n\n        \nthreadsAllowedToBlockForConnectionMultiplier\n\n        \nThe maximum number of connections allowed per host for this MongoClient instance. Those connections will be kept in a pool when idle. Once the pool is exhausted, any operation requiring a connection will block waiting for an available connection.\n\n        \n100\n\n        \nAny natural number\n\n    \n\n    \n\n        \nmaxConnectionLifeTime\n\n        \nThe maximum life time of a pooled connection.  A zero value indicates no limit to the life time.  A pooled connection that has exceeded its life time will be closed and replaced when necessary by a new connection.\n\n        \n0\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nsocketKeepAlive\n\n        \nSets whether to keep a connection alive through firewalls\n\n        \nfalse\n\n        \ntrue\nfalse\n\n    \n\n    \n\n        \nsocketTimeout\n\n        \nThe time in milliseconds to attempt a send or receive on a socket before the attempt times out. Default 0 means never to timeout.\n\n        \n0\n\n        \nAny natural integer\n\n    \n\n    \n\n        \nwriteConcern\n\n        \nThe write concern to use.\n\n        \nacknowledged\n\n        \nacknowledged\nw1\nw2\nw3\nunacknowledged\nfsynced\njournaled\nreplica_acknowledged\nnormal\nsafe\nmajority\nfsync_safe\njournal_safe\nreplicas_safe\n\n    \n\n    \n\n        \nreadConcern\n\n        \nThe level of isolation for the reads from replica sets.\n\n        \ndefault\n\n        \nlocal\nmajority\nlinearizable\n\n    \n\n    \n\n        \nreadPreference\n\n        \nSpecifies the replica set read preference for the connection.\n\n        \nprimary\n\n        \nprimary\nsecondary\nsecondarypreferred\nprimarypreferred\nnearest\n\n    \n\n    \n\n        \nlocalThreshold\n\n        \nThe size (in milliseconds) of the latency window for selecting among multiple suitable MongoDB instances.\n\n        \n15\n\n        \nAny natural number\n\n    \n\n    \n\n        \nserverSelectionTimeout\n\n        \nSpecifies how long (in milliseconds) to block for server selection before throwing an exception. A value of 0 means that it will timeout immediately if no server is available.  A negative value means to wait indefinitely.\n\n        \n30000\n\n        \nAny integer\n\n    \n\n    \n\n        \nheartbeatSocketTimeout\n\n        \nThe socket timeout for connections used for the cluster heartbeat. A value of 0 means that it will timeout immediately if no cluster member is available.  A negative value means to wait indefinitely.\n\n        \n20000\n\n        \nAny integer\n\n    \n\n    \n\n        \nheartbeatConnectTimeout\n\n        \nThe connect timeout for connections used for the cluster heartbeat. A value of 0 means that it will timeout immediately if no cluster member is available.  A negative value means to wait indefinitely.\n\n        \n20000\n\n        \nAny integer\n\n    \n\n    \n\n        \nheartbeatFrequency\n\n        \nSpecify the interval (in milliseconds) between checks, counted from the end of the previous check until the beginning of the next one.\n\n        \n10000\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nminHeartbeatFrequency\n\n        \nSets the minimum heartbeat frequency.  In the event that the driver has to frequently re-check a server's availability, it will wait at least this long since the previous check to avoid wasted effort.\n\n        \n500\n\n        \nAny positive integer\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\n@Store(type=\nmongodb\n,mongodb.uri=\nmongodb://admin:admin@localhost/Foo\n)\n@PrimaryKey(\nsymbol\n)\n@IndexBy(\nvolume 1 {background:true,unique:true}\n)\ndefine table FooTable (symbol string, price float, volume long);\n\n\n\n\n\nThis will create a collection called FooTable for the events to be saved with symbol as Primary Key(unique index at mongod level) and index for the field volume will be created in ascending order with the index option to create the index in the background.\nNote: \n@PrimaryKey: This specifies a list of comma-separated values to be treated as unique fields in the table. Each record in the table must have a unique combination of values for the fields specified here.\n@IndexBy: This specifies the fields that must be indexed at the database level. You can specify multiple values as a come-separated list. A single value to be in the format,\n?\nFieldName\n \nSortOrder\n \nIndexOptions\n?\nSortOrder\n - ( 1) for Ascending and (-1) for Descending\nIndexOptions\n - Index Options must be defined inside curly brackets. {} to be used for default options. Options must follow the standard mongodb index options format. Reference : https://docs.mongodb.com/manual/reference/method/db.collection.createIndex/\nExample : ?symbol 1 {?unique?:true}?", 
            "title": "1.0.7"
        }, 
        {
            "location": "/api/1.0.7/#api-docs-v107", 
            "text": "", 
            "title": "API Docs - v1.0.7"
        }, 
        {
            "location": "/api/1.0.7/#store", 
            "text": "", 
            "title": "Store"
        }, 
        {
            "location": "/api/1.0.7/#mongodb-store", 
            "text": "Using this extension a MongoDB Event Table can be configured to persist events in a MongoDB of user's choice.  Syntax  @Store(type= mongodb , mongodb.uri= STRING , collection.name= STRING , secure.connection= STRING , trust.store= STRING , trust.store.password= STRING , key.store= STRING , key.store.password= STRING )\n@PrimaryKey( PRIMARY_KEY )\n@Index( INDEX )  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         mongodb.uri \n         The MongoDB URI for the MongoDB data store. The uri must be of the format  mongodb://[username:password@]host1[:port1][,hostN[:portN]][/[database][?options]] The options specified in the uri will override any connection options specified in the deployment yaml file. \n         \n         STRING \n         No \n         No \n     \n     \n         collection.name \n         The name of the collection in the store this Event Table should be persisted as. \n         Name of the siddhi event table. \n         STRING \n         Yes \n         No \n     \n     \n         secure.connection \n         Describes enabling the SSL for the mongodb connection \n         false \n         STRING \n         Yes \n         No \n     \n     \n         trust.store \n         File path to the trust store. \n         ${carbon.home}/resources/security/client-truststore.jks \n         STRING \n         Yes \n         No \n     \n     \n         trust.store.password \n         Password to access the trust store \n         wso2carbon \n         STRING \n         Yes \n         No \n     \n     \n         key.store \n         File path to the keystore. \n         ${carbon.home}/resources/security/client-truststore.jks \n         STRING \n         Yes \n         No \n     \n     \n         key.store.password \n         Password to access the keystore \n         wso2carbon \n         STRING \n         Yes \n         No \n       System Parameters  \n     \n         Name \n         Description \n         Default Value \n         Possible Parameters \n     \n     \n         applicationName \n         Sets the logical name of the application using this MongoClient. The application name may be used by the client to identify the application to the server, for use in server logs, slow query logs, and profile collection. \n         null \n         the logical name of the application using this MongoClient. The UTF-8 encoding may not exceed 128 bytes. \n     \n     \n         cursorFinalizerEnabled \n         Sets whether cursor finalizers are enabled. \n         true \n         true false \n     \n     \n         requiredReplicaSetName \n         The name of the replica set \n         null \n         the logical name of the replica set \n     \n     \n         sslEnabled \n         Sets whether to initiate connection with TSL/SSL enabled. true: Initiate the connection with TLS/SSL. false: Initiate the connection without TLS/SSL. \n         false \n         true false \n     \n     \n         trustStore \n         File path to the trust store. \n         ${carbon.home}/resources/security/client-truststore.jks \n         Any valid file path. \n     \n     \n         trustStorePassword \n         Password to access the trust store \n         wso2carbon \n         Any valid password. \n     \n     \n         keyStore \n         File path to the keystore. \n         ${carbon.home}/resources/security/client-truststore.jks \n         Any valid file path. \n     \n     \n         keyStorePassword \n         Password to access the keystore \n         wso2carbon \n         Any valid password. \n     \n     \n         connectTimeout \n         The time in milliseconds to attempt a connection before timing out. \n         10000 \n         Any positive integer \n     \n     \n         connectionsPerHost \n         The maximum number of connections in the connection pool. \n         100 \n         Any positive integer \n     \n     \n         minConnectionsPerHost \n         The minimum number of connections in the connection pool. \n         0 \n         Any natural number \n     \n     \n         maxConnectionIdleTime \n         The maximum number of milliseconds that a connection can remain idle in the pool before being removed and closed. A zero value indicates no limit to the idle time.  A pooled connection that has exceeded its idle time will be closed and replaced when necessary by a new connection. \n         0 \n         Any positive integer \n     \n     \n         maxWaitTime \n         The maximum wait time in milliseconds that a thread may wait for a connection to become available. A value of 0 means that it will not wait.  A negative value means to wait indefinitely \n         120000 \n         Any integer \n     \n     \n         threadsAllowedToBlockForConnectionMultiplier \n         The maximum number of connections allowed per host for this MongoClient instance. Those connections will be kept in a pool when idle. Once the pool is exhausted, any operation requiring a connection will block waiting for an available connection. \n         100 \n         Any natural number \n     \n     \n         maxConnectionLifeTime \n         The maximum life time of a pooled connection.  A zero value indicates no limit to the life time.  A pooled connection that has exceeded its life time will be closed and replaced when necessary by a new connection. \n         0 \n         Any positive integer \n     \n     \n         socketKeepAlive \n         Sets whether to keep a connection alive through firewalls \n         false \n         true false \n     \n     \n         socketTimeout \n         The time in milliseconds to attempt a send or receive on a socket before the attempt times out. Default 0 means never to timeout. \n         0 \n         Any natural integer \n     \n     \n         writeConcern \n         The write concern to use. \n         acknowledged \n         acknowledged w1 w2 w3 unacknowledged fsynced journaled replica_acknowledged normal safe majority fsync_safe journal_safe replicas_safe \n     \n     \n         readConcern \n         The level of isolation for the reads from replica sets. \n         default \n         local majority linearizable \n     \n     \n         readPreference \n         Specifies the replica set read preference for the connection. \n         primary \n         primary secondary secondarypreferred primarypreferred nearest \n     \n     \n         localThreshold \n         The size (in milliseconds) of the latency window for selecting among multiple suitable MongoDB instances. \n         15 \n         Any natural number \n     \n     \n         serverSelectionTimeout \n         Specifies how long (in milliseconds) to block for server selection before throwing an exception. A value of 0 means that it will timeout immediately if no server is available.  A negative value means to wait indefinitely. \n         30000 \n         Any integer \n     \n     \n         heartbeatSocketTimeout \n         The socket timeout for connections used for the cluster heartbeat. A value of 0 means that it will timeout immediately if no cluster member is available.  A negative value means to wait indefinitely. \n         20000 \n         Any integer \n     \n     \n         heartbeatConnectTimeout \n         The connect timeout for connections used for the cluster heartbeat. A value of 0 means that it will timeout immediately if no cluster member is available.  A negative value means to wait indefinitely. \n         20000 \n         Any integer \n     \n     \n         heartbeatFrequency \n         Specify the interval (in milliseconds) between checks, counted from the end of the previous check until the beginning of the next one. \n         10000 \n         Any positive integer \n     \n     \n         minHeartbeatFrequency \n         Sets the minimum heartbeat frequency.  In the event that the driver has to frequently re-check a server's availability, it will wait at least this long since the previous check to avoid wasted effort. \n         500 \n         Any positive integer \n       Examples  EXAMPLE 1  @Store(type= mongodb ,mongodb.uri= mongodb://admin:admin@localhost/Foo )\n@PrimaryKey( symbol )\n@IndexBy( volume 1 {background:true,unique:true} )\ndefine table FooTable (symbol string, price float, volume long);  This will create a collection called FooTable for the events to be saved with symbol as Primary Key(unique index at mongod level) and index for the field volume will be created in ascending order with the index option to create the index in the background. Note:  @PrimaryKey: This specifies a list of comma-separated values to be treated as unique fields in the table. Each record in the table must have a unique combination of values for the fields specified here. @IndexBy: This specifies the fields that must be indexed at the database level. You can specify multiple values as a come-separated list. A single value to be in the format, ? FieldName   SortOrder   IndexOptions ? SortOrder  - ( 1) for Ascending and (-1) for Descending IndexOptions  - Index Options must be defined inside curly brackets. {} to be used for default options. Options must follow the standard mongodb index options format. Reference : https://docs.mongodb.com/manual/reference/method/db.collection.createIndex/ Example : ?symbol 1 {?unique?:true}?", 
            "title": "mongodb (Store)"
        }, 
        {
            "location": "/api/latest/", 
            "text": "API Docs - v1.0.19\n\n\nStore\n\n\nmongodb \n(Store)\n\n\nUsing this extension a MongoDB Event Table can be configured to persist events in a MongoDB of user's choice.\n\n\n\nSyntax\n\n\n@Store(type=\nmongodb\n, mongodb.uri=\nSTRING\n, collection.name=\nSTRING\n, secure.connection=\nSTRING\n, trust.store=\nSTRING\n, trust.store.password=\nSTRING\n, key.store=\nSTRING\n, key.store.password=\nSTRING\n)\n@PrimaryKey(\nPRIMARY_KEY\n)\n@Index(\nINDEX\n)\n\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \nmongodb.uri\n\n        \nThe MongoDB URI for the MongoDB data store. The uri must be of the format \nmongodb://[username:password@]host1[:port1][,hostN[:portN]][/[database][?options]]\nThe options specified in the uri will override any connection options specified in the deployment yaml file.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \ncollection.name\n\n        \nThe name of the collection in the store this Event Table should be persisted as.\n\n        \nName of the siddhi event table.\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nsecure.connection\n\n        \nDescribes enabling the SSL for the mongodb connection\n\n        \nfalse\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \ntrust.store\n\n        \nFile path to the trust store.\n\n        \n${carbon.home}/resources/security/client-truststore.jks\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \ntrust.store.password\n\n        \nPassword to access the trust store\n\n        \nwso2carbon\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nkey.store\n\n        \nFile path to the keystore.\n\n        \n${carbon.home}/resources/security/client-truststore.jks\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nkey.store.password\n\n        \nPassword to access the keystore\n\n        \nwso2carbon\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n\n\n\nSystem Parameters\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Parameters\n\n    \n\n    \n\n        \napplicationName\n\n        \nSets the logical name of the application using this MongoClient. The application name may be used by the client to identify the application to the server, for use in server logs, slow query logs, and profile collection.\n\n        \nnull\n\n        \nthe logical name of the application using this MongoClient. The UTF-8 encoding may not exceed 128 bytes.\n\n    \n\n    \n\n        \ncursorFinalizerEnabled\n\n        \nSets whether cursor finalizers are enabled.\n\n        \ntrue\n\n        \ntrue\nfalse\n\n    \n\n    \n\n        \nrequiredReplicaSetName\n\n        \nThe name of the replica set\n\n        \nnull\n\n        \nthe logical name of the replica set\n\n    \n\n    \n\n        \nsslEnabled\n\n        \nSets whether to initiate connection with TSL/SSL enabled. true: Initiate the connection with TLS/SSL. false: Initiate the connection without TLS/SSL.\n\n        \nfalse\n\n        \ntrue\nfalse\n\n    \n\n    \n\n        \ntrustStore\n\n        \nFile path to the trust store.\n\n        \n${carbon.home}/resources/security/client-truststore.jks\n\n        \nAny valid file path.\n\n    \n\n    \n\n        \ntrustStorePassword\n\n        \nPassword to access the trust store\n\n        \nwso2carbon\n\n        \nAny valid password.\n\n    \n\n    \n\n        \nkeyStore\n\n        \nFile path to the keystore.\n\n        \n${carbon.home}/resources/security/client-truststore.jks\n\n        \nAny valid file path.\n\n    \n\n    \n\n        \nkeyStorePassword\n\n        \nPassword to access the keystore\n\n        \nwso2carbon\n\n        \nAny valid password.\n\n    \n\n    \n\n        \nconnectTimeout\n\n        \nThe time in milliseconds to attempt a connection before timing out.\n\n        \n10000\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nconnectionsPerHost\n\n        \nThe maximum number of connections in the connection pool.\n\n        \n100\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nminConnectionsPerHost\n\n        \nThe minimum number of connections in the connection pool.\n\n        \n0\n\n        \nAny natural number\n\n    \n\n    \n\n        \nmaxConnectionIdleTime\n\n        \nThe maximum number of milliseconds that a connection can remain idle in the pool before being removed and closed. A zero value indicates no limit to the idle time.  A pooled connection that has exceeded its idle time will be closed and replaced when necessary by a new connection.\n\n        \n0\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nmaxWaitTime\n\n        \nThe maximum wait time in milliseconds that a thread may wait for a connection to become available. A value of 0 means that it will not wait.  A negative value means to wait indefinitely\n\n        \n120000\n\n        \nAny integer\n\n    \n\n    \n\n        \nthreadsAllowedToBlockForConnectionMultiplier\n\n        \nThe maximum number of connections allowed per host for this MongoClient instance. Those connections will be kept in a pool when idle. Once the pool is exhausted, any operation requiring a connection will block waiting for an available connection.\n\n        \n100\n\n        \nAny natural number\n\n    \n\n    \n\n        \nmaxConnectionLifeTime\n\n        \nThe maximum life time of a pooled connection.  A zero value indicates no limit to the life time.  A pooled connection that has exceeded its life time will be closed and replaced when necessary by a new connection.\n\n        \n0\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nsocketKeepAlive\n\n        \nSets whether to keep a connection alive through firewalls\n\n        \nfalse\n\n        \ntrue\nfalse\n\n    \n\n    \n\n        \nsocketTimeout\n\n        \nThe time in milliseconds to attempt a send or receive on a socket before the attempt times out. Default 0 means never to timeout.\n\n        \n0\n\n        \nAny natural integer\n\n    \n\n    \n\n        \nwriteConcern\n\n        \nThe write concern to use.\n\n        \nacknowledged\n\n        \nacknowledged\nw1\nw2\nw3\nunacknowledged\nfsynced\njournaled\nreplica_acknowledged\nnormal\nsafe\nmajority\nfsync_safe\njournal_safe\nreplicas_safe\n\n    \n\n    \n\n        \nreadConcern\n\n        \nThe level of isolation for the reads from replica sets.\n\n        \ndefault\n\n        \nlocal\nmajority\nlinearizable\n\n    \n\n    \n\n        \nreadPreference\n\n        \nSpecifies the replica set read preference for the connection.\n\n        \nprimary\n\n        \nprimary\nsecondary\nsecondarypreferred\nprimarypreferred\nnearest\n\n    \n\n    \n\n        \nlocalThreshold\n\n        \nThe size (in milliseconds) of the latency window for selecting among multiple suitable MongoDB instances.\n\n        \n15\n\n        \nAny natural number\n\n    \n\n    \n\n        \nserverSelectionTimeout\n\n        \nSpecifies how long (in milliseconds) to block for server selection before throwing an exception. A value of 0 means that it will timeout immediately if no server is available.  A negative value means to wait indefinitely.\n\n        \n30000\n\n        \nAny integer\n\n    \n\n    \n\n        \nheartbeatSocketTimeout\n\n        \nThe socket timeout for connections used for the cluster heartbeat. A value of 0 means that it will timeout immediately if no cluster member is available.  A negative value means to wait indefinitely.\n\n        \n20000\n\n        \nAny integer\n\n    \n\n    \n\n        \nheartbeatConnectTimeout\n\n        \nThe connect timeout for connections used for the cluster heartbeat. A value of 0 means that it will timeout immediately if no cluster member is available.  A negative value means to wait indefinitely.\n\n        \n20000\n\n        \nAny integer\n\n    \n\n    \n\n        \nheartbeatFrequency\n\n        \nSpecify the interval (in milliseconds) between checks, counted from the end of the previous check until the beginning of the next one.\n\n        \n10000\n\n        \nAny positive integer\n\n    \n\n    \n\n        \nminHeartbeatFrequency\n\n        \nSets the minimum heartbeat frequency.  In the event that the driver has to frequently re-check a server's availability, it will wait at least this long since the previous check to avoid wasted effort.\n\n        \n500\n\n        \nAny positive integer\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\n@Store(type=\nmongodb\n,mongodb.uri=\nmongodb://admin:admin@localhost/Foo\n)\n@PrimaryKey(\nsymbol\n)\n@IndexBy(\nvolume 1 {background:true,unique:true}\n)\ndefine table FooTable (symbol string, price float, volume long);\n\n\n\n\n\nThis will create a collection called FooTable for the events to be saved with symbol as Primary Key(unique index at mongod level) and index for the field volume will be created in ascending order with the index option to create the index in the background.\nNote: \n@PrimaryKey: This specifies a list of comma-separated values to be treated as unique fields in the table. Each record in the table must have a unique combination of values for the fields specified here.\n@IndexBy: This specifies the fields that must be indexed at the database level. You can specify multiple values as a come-separated list. A single value to be in the format,\n?\nFieldName\n \nSortOrder\n \nIndexOptions\n?\nSortOrder\n - ( 1) for Ascending and (-1) for Descending\nIndexOptions\n - Index Options must be defined inside curly brackets. {} to be used for default options. Options must follow the standard mongodb index options format. Reference : https://docs.mongodb.com/manual/reference/method/db.collection.createIndex/\nExample : ?symbol 1 {?unique?:true}?", 
            "title": "latest"
        }, 
        {
            "location": "/api/latest/#api-docs-v1019", 
            "text": "", 
            "title": "API Docs - v1.0.19"
        }, 
        {
            "location": "/api/latest/#store", 
            "text": "", 
            "title": "Store"
        }, 
        {
            "location": "/api/latest/#mongodb-store", 
            "text": "Using this extension a MongoDB Event Table can be configured to persist events in a MongoDB of user's choice.  Syntax  @Store(type= mongodb , mongodb.uri= STRING , collection.name= STRING , secure.connection= STRING , trust.store= STRING , trust.store.password= STRING , key.store= STRING , key.store.password= STRING )\n@PrimaryKey( PRIMARY_KEY )\n@Index( INDEX )  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         mongodb.uri \n         The MongoDB URI for the MongoDB data store. The uri must be of the format  mongodb://[username:password@]host1[:port1][,hostN[:portN]][/[database][?options]] The options specified in the uri will override any connection options specified in the deployment yaml file. \n         \n         STRING \n         No \n         No \n     \n     \n         collection.name \n         The name of the collection in the store this Event Table should be persisted as. \n         Name of the siddhi event table. \n         STRING \n         Yes \n         No \n     \n     \n         secure.connection \n         Describes enabling the SSL for the mongodb connection \n         false \n         STRING \n         Yes \n         No \n     \n     \n         trust.store \n         File path to the trust store. \n         ${carbon.home}/resources/security/client-truststore.jks \n         STRING \n         Yes \n         No \n     \n     \n         trust.store.password \n         Password to access the trust store \n         wso2carbon \n         STRING \n         Yes \n         No \n     \n     \n         key.store \n         File path to the keystore. \n         ${carbon.home}/resources/security/client-truststore.jks \n         STRING \n         Yes \n         No \n     \n     \n         key.store.password \n         Password to access the keystore \n         wso2carbon \n         STRING \n         Yes \n         No \n       System Parameters  \n     \n         Name \n         Description \n         Default Value \n         Possible Parameters \n     \n     \n         applicationName \n         Sets the logical name of the application using this MongoClient. The application name may be used by the client to identify the application to the server, for use in server logs, slow query logs, and profile collection. \n         null \n         the logical name of the application using this MongoClient. The UTF-8 encoding may not exceed 128 bytes. \n     \n     \n         cursorFinalizerEnabled \n         Sets whether cursor finalizers are enabled. \n         true \n         true false \n     \n     \n         requiredReplicaSetName \n         The name of the replica set \n         null \n         the logical name of the replica set \n     \n     \n         sslEnabled \n         Sets whether to initiate connection with TSL/SSL enabled. true: Initiate the connection with TLS/SSL. false: Initiate the connection without TLS/SSL. \n         false \n         true false \n     \n     \n         trustStore \n         File path to the trust store. \n         ${carbon.home}/resources/security/client-truststore.jks \n         Any valid file path. \n     \n     \n         trustStorePassword \n         Password to access the trust store \n         wso2carbon \n         Any valid password. \n     \n     \n         keyStore \n         File path to the keystore. \n         ${carbon.home}/resources/security/client-truststore.jks \n         Any valid file path. \n     \n     \n         keyStorePassword \n         Password to access the keystore \n         wso2carbon \n         Any valid password. \n     \n     \n         connectTimeout \n         The time in milliseconds to attempt a connection before timing out. \n         10000 \n         Any positive integer \n     \n     \n         connectionsPerHost \n         The maximum number of connections in the connection pool. \n         100 \n         Any positive integer \n     \n     \n         minConnectionsPerHost \n         The minimum number of connections in the connection pool. \n         0 \n         Any natural number \n     \n     \n         maxConnectionIdleTime \n         The maximum number of milliseconds that a connection can remain idle in the pool before being removed and closed. A zero value indicates no limit to the idle time.  A pooled connection that has exceeded its idle time will be closed and replaced when necessary by a new connection. \n         0 \n         Any positive integer \n     \n     \n         maxWaitTime \n         The maximum wait time in milliseconds that a thread may wait for a connection to become available. A value of 0 means that it will not wait.  A negative value means to wait indefinitely \n         120000 \n         Any integer \n     \n     \n         threadsAllowedToBlockForConnectionMultiplier \n         The maximum number of connections allowed per host for this MongoClient instance. Those connections will be kept in a pool when idle. Once the pool is exhausted, any operation requiring a connection will block waiting for an available connection. \n         100 \n         Any natural number \n     \n     \n         maxConnectionLifeTime \n         The maximum life time of a pooled connection.  A zero value indicates no limit to the life time.  A pooled connection that has exceeded its life time will be closed and replaced when necessary by a new connection. \n         0 \n         Any positive integer \n     \n     \n         socketKeepAlive \n         Sets whether to keep a connection alive through firewalls \n         false \n         true false \n     \n     \n         socketTimeout \n         The time in milliseconds to attempt a send or receive on a socket before the attempt times out. Default 0 means never to timeout. \n         0 \n         Any natural integer \n     \n     \n         writeConcern \n         The write concern to use. \n         acknowledged \n         acknowledged w1 w2 w3 unacknowledged fsynced journaled replica_acknowledged normal safe majority fsync_safe journal_safe replicas_safe \n     \n     \n         readConcern \n         The level of isolation for the reads from replica sets. \n         default \n         local majority linearizable \n     \n     \n         readPreference \n         Specifies the replica set read preference for the connection. \n         primary \n         primary secondary secondarypreferred primarypreferred nearest \n     \n     \n         localThreshold \n         The size (in milliseconds) of the latency window for selecting among multiple suitable MongoDB instances. \n         15 \n         Any natural number \n     \n     \n         serverSelectionTimeout \n         Specifies how long (in milliseconds) to block for server selection before throwing an exception. A value of 0 means that it will timeout immediately if no server is available.  A negative value means to wait indefinitely. \n         30000 \n         Any integer \n     \n     \n         heartbeatSocketTimeout \n         The socket timeout for connections used for the cluster heartbeat. A value of 0 means that it will timeout immediately if no cluster member is available.  A negative value means to wait indefinitely. \n         20000 \n         Any integer \n     \n     \n         heartbeatConnectTimeout \n         The connect timeout for connections used for the cluster heartbeat. A value of 0 means that it will timeout immediately if no cluster member is available.  A negative value means to wait indefinitely. \n         20000 \n         Any integer \n     \n     \n         heartbeatFrequency \n         Specify the interval (in milliseconds) between checks, counted from the end of the previous check until the beginning of the next one. \n         10000 \n         Any positive integer \n     \n     \n         minHeartbeatFrequency \n         Sets the minimum heartbeat frequency.  In the event that the driver has to frequently re-check a server's availability, it will wait at least this long since the previous check to avoid wasted effort. \n         500 \n         Any positive integer \n       Examples  EXAMPLE 1  @Store(type= mongodb ,mongodb.uri= mongodb://admin:admin@localhost/Foo )\n@PrimaryKey( symbol )\n@IndexBy( volume 1 {background:true,unique:true} )\ndefine table FooTable (symbol string, price float, volume long);  This will create a collection called FooTable for the events to be saved with symbol as Primary Key(unique index at mongod level) and index for the field volume will be created in ascending order with the index option to create the index in the background. Note:  @PrimaryKey: This specifies a list of comma-separated values to be treated as unique fields in the table. Each record in the table must have a unique combination of values for the fields specified here. @IndexBy: This specifies the fields that must be indexed at the database level. You can specify multiple values as a come-separated list. A single value to be in the format, ? FieldName   SortOrder   IndexOptions ? SortOrder  - ( 1) for Ascending and (-1) for Descending IndexOptions  - Index Options must be defined inside curly brackets. {} to be used for default options. Options must follow the standard mongodb index options format. Reference : https://docs.mongodb.com/manual/reference/method/db.collection.createIndex/ Example : ?symbol 1 {?unique?:true}?", 
            "title": "mongodb (Store)"
        }, 
        {
            "location": "/license/", 
            "text": "Copyright (c) 2017 WSO2 Inc. (\nhttp://www.wso2.org\n) All Rights Reserved.\n\n\nWSO2 Inc. licenses this file to you under the Apache License,\nVersion 2.0 (the \"License\"); you may not use this file except\nin compliance with the License.\nYou may obtain a copy of the License at\n\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\n\nUnless required by applicable law or agreed to in writing,\nsoftware distributed under the License is distributed on an\n\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, either express or implied.  See the License for the\nspecific language governing permissions and limitations\nunder the License.\n\n\n-------------------------------------------------------------------------\n                              Apache License\n                        Version 2.0, January 2004\n                     http://www.apache.org/licenses/\n\n\nTERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n1. Definitions.\n\n   \nLicense\n shall mean the terms and conditions for use, reproduction,\n   and distribution as defined by Sections 1 through 9 of this document.\n\n   \nLicensor\n shall mean the copyright owner or entity authorized by\n   the copyright owner that is granting the License.\n\n   \nLegal Entity\n shall mean the union of the acting entity and all\n   other entities that control, are controlled by, or are under common\n   control with that entity. For the purposes of this definition,\n   \ncontrol\n means (i) the power, direct or indirect, to cause the\n   direction or management of such entity, whether by contract or\n   otherwise, or (ii) ownership of fifty percent (50%) or more of the\n   outstanding shares, or (iii) beneficial ownership of such entity.\n\n   \nYou\n (or \nYour\n) shall mean an individual or Legal Entity\n   exercising permissions granted by this License.\n\n   \nSource\n form shall mean the preferred form for making modifications,\n   including but not limited to software source code, documentation\n   source, and configuration files.\n\n   \nObject\n form shall mean any form resulting from mechanical\n   transformation or translation of a Source form, including but\n   not limited to compiled object code, generated documentation,\n   and conversions to other media types.\n\n   \nWork\n shall mean the work of authorship, whether in Source or\n   Object form, made available under the License, as indicated by a\n   copyright notice that is included in or attached to the work\n   (an example is provided in the Appendix below).\n\n   \nDerivative Works\n shall mean any work, whether in Source or Object\n   form, that is based on (or derived from) the Work and for which the\n   editorial revisions, annotations, elaborations, or other modifications\n   represent, as a whole, an original work of authorship. For the purposes\n   of this License, Derivative Works shall not include works that remain\n   separable from, or merely link (or bind by name) to the interfaces of,\n   the Work and Derivative Works thereof.\n\n   \nContribution\n shall mean any work of authorship, including\n   the original version of the Work and any modifications or additions\n   to that Work or Derivative Works thereof, that is intentionally\n   submitted to Licensor for inclusion in the Work by the copyright owner\n   or by an individual or Legal Entity authorized to submit on behalf of\n   the copyright owner. For the purposes of this definition, \nsubmitted\n\n   means any form of electronic, verbal, or written communication sent\n   to the Licensor or its representatives, including but not limited to\n   communication on electronic mailing lists, source code control systems,\n   and issue tracking systems that are managed by, or on behalf of, the\n   Licensor for the purpose of discussing and improving the Work, but\n   excluding communication that is conspicuously marked or otherwise\n   designated in writing by the copyright owner as \nNot a Contribution.\n\n\n   \nContributor\n shall mean Licensor and any individual or Legal Entity\n   on behalf of whom a Contribution has been received by Licensor and\n   subsequently incorporated within the Work.\n\n2. Grant of Copyright License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   copyright license to reproduce, prepare Derivative Works of,\n   publicly display, publicly perform, sublicense, and distribute the\n   Work and such Derivative Works in Source or Object form.\n\n3. Grant of Patent License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   (except as stated in this section) patent license to make, have made,\n   use, offer to sell, sell, import, and otherwise transfer the Work,\n   where such license applies only to those patent claims licensable\n   by such Contributor that are necessarily infringed by their\n   Contribution(s) alone or by combination of their Contribution(s)\n   with the Work to which such Contribution(s) was submitted. If You\n   institute patent litigation against any entity (including a\n   cross-claim or counterclaim in a lawsuit) alleging that the Work\n   or a Contribution incorporated within the Work constitutes direct\n   or contributory patent infringement, then any patent licenses\n   granted to You under this License for that Work shall terminate\n   as of the date such litigation is filed.\n\n4. Redistribution. You may reproduce and distribute copies of the\n   Work or Derivative Works thereof in any medium, with or without\n   modifications, and in Source or Object form, provided that You\n   meet the following conditions:\n\n   (a) You must give any other recipients of the Work or\n       Derivative Works a copy of this License; and\n\n   (b) You must cause any modified files to carry prominent notices\n       stating that You changed the files; and\n\n   (c) You must retain, in the Source form of any Derivative Works\n       that You distribute, all copyright, patent, trademark, and\n       attribution notices from the Source form of the Work,\n       excluding those notices that do not pertain to any part of\n       the Derivative Works; and\n\n   (d) If the Work includes a \nNOTICE\n text file as part of its\n       distribution, then any Derivative Works that You distribute must\n       include a readable copy of the attribution notices contained\n       within such NOTICE file, excluding those notices that do not\n       pertain to any part of the Derivative Works, in at least one\n       of the following places: within a NOTICE text file distributed\n       as part of the Derivative Works; within the Source form or\n       documentation, if provided along with the Derivative Works; or,\n       within a display generated by the Derivative Works, if and\n       wherever such third-party notices normally appear. The contents\n       of the NOTICE file are for informational purposes only and\n       do not modify the License. You may add Your own attribution\n       notices within Derivative Works that You distribute, alongside\n       or as an addendum to the NOTICE text from the Work, provided\n       that such additional attribution notices cannot be construed\n       as modifying the License.\n\n   You may add Your own copyright statement to Your modifications and\n   may provide additional or different license terms and conditions\n   for use, reproduction, or distribution of Your modifications, or\n   for any such Derivative Works as a whole, provided Your use,\n   reproduction, and distribution of the Work otherwise complies with\n   the conditions stated in this License.\n\n5. Submission of Contributions. Unless You explicitly state otherwise,\n   any Contribution intentionally submitted for inclusion in the Work\n   by You to the Licensor shall be under the terms and conditions of\n   this License, without any additional terms or conditions.\n   Notwithstanding the above, nothing herein shall supersede or modify\n   the terms of any separate license agreement you may have executed\n   with Licensor regarding such Contributions.\n\n6. Trademarks. This License does not grant permission to use the trade\n   names, trademarks, service marks, or product names of the Licensor,\n   except as required for reasonable and customary use in describing the\n   origin of the Work and reproducing the content of the NOTICE file.\n\n7. Disclaimer of Warranty. Unless required by applicable law or\n   agreed to in writing, Licensor provides the Work (and each\n   Contributor provides its Contributions) on an \nAS IS\n BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n   implied, including, without limitation, any warranties or conditions\n   of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n   PARTICULAR PURPOSE. You are solely responsible for determining the\n   appropriateness of using or redistributing the Work and assume any\n   risks associated with Your exercise of permissions under this License.\n\n8. Limitation of Liability. In no event and under no legal theory,\n   whether in tort (including negligence), contract, or otherwise,\n   unless required by applicable law (such as deliberate and grossly\n   negligent acts) or agreed to in writing, shall any Contributor be\n   liable to You for damages, including any direct, indirect, special,\n   incidental, or consequential damages of any character arising as a\n   result of this License or out of the use or inability to use the\n   Work (including but not limited to damages for loss of goodwill,\n   work stoppage, computer failure or malfunction, or any and all\n   other commercial damages or losses), even if such Contributor\n   has been advised of the possibility of such damages.\n\n9. Accepting Warranty or Additional Liability. While redistributing\n   the Work or Derivative Works thereof, You may choose to offer,\n   and charge a fee for, acceptance of support, warranty, indemnity,\n   or other liability obligations and/or rights consistent with this\n   License. However, in accepting such obligations, You may act only\n   on Your own behalf and on Your sole responsibility, not on behalf\n   of any other Contributor, and only if You agree to indemnify,\n   defend, and hold each Contributor harmless for any liability\n   incurred by, or claims asserted against, such Contributor by reason\n   of your accepting any such warranty or additional liability.\n\nEND OF TERMS AND CONDITIONS", 
            "title": "License"
        }
    ]
}